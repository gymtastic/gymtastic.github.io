{"version":3,"sources":["webpack:///../node_modules/tslib/tslib.es6.js","webpack:///../src/functions/utils.ts","webpack:///../src/helpers/debug.ts","webpack:///../src/errors/errors.js","webpack:///../src/functions/chaining-functions.js","webpack:///../src/helpers/promise.js","webpack:///../src/functions/combine.ts","webpack:///../src/functions/workaround-undefined-primkey.ts","webpack:///../src/helpers/Events.js","webpack:///../src/functions/make-class-constructor.ts","webpack:///../src/classes/collection/collection-helpers.ts","webpack:///../src/functions/compare-functions.ts","webpack:///../src/classes/where-clause/where-clause-helpers.ts","webpack:///../src/globals/constants.ts","webpack:///../src/functions/quirks.ts","webpack:///../src/functions/event-wrappers.ts","webpack:///../src/helpers/index-spec.ts","webpack:///../src/helpers/table-schema.ts","webpack:///../src/dbcore/get-key-extractor.ts","webpack:///../src/dbcore/get-effective-keys.ts","webpack:///../src/dbcore/dbcore-indexeddb.ts","webpack:///../src/classes/dexie/generate-middleware-stacks.ts","webpack:///../src/classes/version/schema-helpers.ts","webpack:///../src/classes/dexie/vip.ts","webpack:///../src/classes/dexie/dexie-open.ts","webpack:///../src/helpers/yield-support.ts","webpack:///../src/classes/dexie/transaction-helpers.ts","webpack:///../src/dbcore/virtual-index-middleware.ts","webpack:///../src/helpers/database-enumerator.ts","webpack:///../src/dbcore/keyrange.ts","webpack:///../src/classes/table/table.ts","webpack:///../src/functions/temp-transaction.ts","webpack:///../src/classes/collection/collection.ts","webpack:///../src/classes/where-clause/where-clause.ts","webpack:///../src/classes/transaction/transaction.ts","webpack:///../src/classes/version/version.ts","webpack:///../src/hooks/hooks-middleware.ts","webpack:///../src/classes/dexie/dexie.ts","webpack:///../src/classes/collection/collection-constructor.ts","webpack:///../src/classes/table/table-constructor.ts","webpack:///../src/classes/transaction/transaction-constructor.ts","webpack:///../src/classes/version/version-constructor.ts","webpack:///../src/classes/where-clause/where-clause-constructor.ts","webpack:///../src/classes/dexie/dexie-static-props.ts","webpack:///../src/index.ts","webpack:///./routes/home/style.css","webpack:///./components/tracking/checkinService.ts","webpack:///./routes/home/index.tsx","webpack:///../src/index.js","webpack:///../node_modules/webpack/buildin/global.js"],"names":["__spreadArrays","s","i","il","arguments","length","r","Array","k","a","j","jl","extend","obj","extension","keys","forEach","key","hasOwn","prop","_hasOwn","call","props","proto","getProto","setProp","functionOrGetSet","options","defineProperty","get","set","configurable","value","writable","derive","Child","from","Parent","prototype","Object","create","bind","getPropertyDescriptor","getOwnPropertyDescriptor","slice","args","start","end","_slice","override","origFunc","overridedFactory","assert","b","Error","asap","fn","_global","setImmediate","setTimeout","arrayToObject","array","extractor","reduce","result","item","nameAndValue","getByKeyPath","keyPath","rv","l","val","push","period","indexOf","innerObj","substr","undefined","setByKeyPath","isFrozen","currentKeyPath","remainingKeyPath","isArray","isNaN","parseInt","splice","delByKeyPath","map","kp","shallowClone","m","flatten","concat","apply","deepClone","any","intrinsicTypes","constructor","toStringTag","o","toString","getObjectDiff","prfx","ap","bp","apTypeName","bpTypeName","intrinsicTypeNameSet","getValueOf","getArrayOf","arrayLike","x","it","this","NO_CHAR_ARRAY","getIteratorOf","next","done","setDebug","filter","debug","getErrorWithStack","NEEDS_THROW_FOR_STACK","e","prettyStack","exception","numIgnoredFrames","stack","name","message","split","frame","join","DexieError","msg","_e","getMultiErrorMessage","failures","v","ModifyError","successCount","failedKeys","BulkError","nop","mirror","pureFunctionChain","f1","f2","callBoth","on1","on2","hookCreatingChain","res","onsuccess","onerror","res2","hookDeletingChain","hookUpdatingChain","modifications","reverseStoppableEventChain","promisableChain","then","thiz","DexiePromise","TypeError","_listeners","onuncatched","_lib","psd","_PSD","PSD","_stackHolder","_prev","_numPrev","INTERNAL","_state","_value","handleRejection","ref","executePromiseTask","Listener","onFulfilled","onRejected","resolve","reject","zone","promise","shouldExecuteTick","beginMicroTickScope","_then","propagateAllListeners","endMicroTickScope","ex","reason","rejectingErrors","rejectionMapper","_promise","tryCatch","origProp","stack_being_generated","unhandledErrors","some","p","addPossiblyUnhandledError","listeners","len","propagateToListener","finalize","numScheduledCalls","finalizePhysicalTick","listener","cb","callListener","currentFulfiller","ret","markErrorAsHandled","linkToPreviousPromise","prev","numPrev","physicalTick","wasRootExec","isOutsideMicroTick","needsNewPhysicalTick","callbacks","microtickQueue","unhandledErrs","onunhandled","finalizers","tickFinalizers","PromiseReject","wrap","errorCatcher","outerScope","switchToZone","newScope","a1","a2","parent","global","id","zone_id_counter","globalEnv","globalPSD","env","patchGlobalPromise","Promise","PromiseProp","all","race","allSettled","nthen","getPatchedPromiseThen","gthen","usePSD","incrementExpectedAwaits","task","taskCounter","awaits","echoes","decrementExpectedAwaits","onPossibleParallellAsync","possiblePromise","NativePromise","rejection","zoneEnterEcho","targetZone","totalEchoes","zoneStack","zoneLeaveEcho","pop","bEnteringZone","currentZone","zoneEchoes","enqueueNativeMicroTask","snapShot","targetEnv","nativePromiseProto","GlobalPromise","a3","job","nativePromiseThen","resolvedNativePromise","nativeAwaitCompatibleWrap","possibleAwait","cleanup","outerZone","origThen","onResolved","globalError","err","event","eventData","document","createEvent","initEvent","CustomEvent","detail","dispatchEvent","PromiseRejectionEvent","onunhandledrejection","_","defaultPrevented","console","warn","combine","filter1","filter2","workaroundForUndefinedPrimKey","Events","ctx","add","eventName","chainFunction","defaultFunction","addConfiguredEvents","context","subscribers","fire","subscribe","unsubscribe","evs","cfg","exceptions","InvalidArgument","subscriber","addEventType","makeClassConstructor","isPlainKeyRange","ignoreLimitFilter","algorithm","or","justLimit","replayFilter","addFilter","addReplayFilter","factory","isLimitFilter","curr","getIndexOrStore","coreSchema","isPrimKey","primaryKey","index","getIndexByKeyPath","Schema","openCursor","coreTable","trans","schema","values","keysOnly","reverse","dir","unique","query","range","iter","coreTrans","union","cursor","advance","stop","fail","Uint8Array","_iterate","iterate","valueMapper","cursorPromise","wrappedFn","c","continue","advancer","simpleCompare","simpleCompareReverse","collectionOrWhereClause","T","collection","WhereClause","Collection","_ctx","error","emptyCollection","whereClause","rangeEqual","limit","nextCasing","lowerKey","upperNeedle","lowerNeedle","cmp","Math","min","llp","lwrKeyChar","addIgnoreCaseAlgorithm","match","needles","suffix","initDirection","upper","toUpperCase","toLowerCase","upperFactory","lower","lowerFactory","compare","needleBounds","needle","sort","upperNeedles","nb","lowerNeedles","direction","nextKeySuffix","needlesLen","every","createRange","_ondirectionchange","firstPossibleNeedle","_addAlgorithm","lowestPossibleCasing","casing","lowerOpen","upperOpen","type","safariMultiStoreFix","storeNames","getMaxKey","IdbKeyRange","only","maxString","eventRejectHandler","preventDefault","target","stopPropagation","createIndexSpec","multi","auto","compound","src","nameFromKeyPath","createTableSchema","primKey","indexes","mappedClass","idxByName","getKeyExtractor","getSinglePathKeyExtractor","getEffectiveKeys","req","extractKey","arrayify","getKeyPathAlias","createDBCore","db","indexedDB","tmpTrans","makeIDBKeyRange","upperBound","lowerBound","bound","tables","objectStoreNames","table","objectStore","store","autoIncrement","indexByKeyPath","isPrimaryKey","outbound","indexNames","indexName","multiEntry","hasGetAll","navigator","test","userAgent","tableSchema","tableName","mutate","wantResults","isAddOrPut","numFailures","results","lastResult","errorHandler","_reqno","setResult","clear","delete","args1","args2","getMany","keyCount","callbackCount","successHandler","_pos","request","nonInfinitLimit","Infinity","source","idbKeyRange","getAll","getAllKeys","openKeyCursor","___id","_id_counter","_cursorContinue","_cursorContinuePrimaryKey","continuePrimaryKey","_cursorAdvance","doThrowCursorIsStopped","gotOne","callback","iterationPromise","resolveIteration","rejectIteration","guardedCallback","count","ev","createDbCoreTable","tableMap","transaction","MIN_KEY","MAX_KEY","createMiddlewareStacks","middlewares","idbdb","dbcore","stackImpl","down","createMiddlewareStack","IDBKeyRange","generateMiddlewareStacks","stacks","_middlewares","_deps","core","tbl","Table","setApiOnPlace","objs","tableNames","dbschema","propDesc","Transaction","enumerable","removeTablesApi","lowerVersionFirst","_cfg","version","runUpgraders","oldVersion","idbUpgradeTrans","globalSchema","_dbSchema","_createTransaction","_storeNames","_completion","catch","rejectTransaction","_reject","transless","createTable","follow","on","populate","runQueue","queue","shift","idbtrans","versions","_versions","buildGlobalSchema","anyContentUpgraderHasRun","oldSchema","newSchema","adjustToExistingIndexNames","diff","getSchemaDiff","tuple","change","recreate","Upgrade","idx","addIndex","deleteIndex","del","idxName","contentUpgrade","_memoizedTables","isAsyncFunction","promiseFollowed","decrementor","hasIEDeleteObjectStoreBug","storeName","deleteObjectStore","deleteRemovedTables","contains","updateTablesAndIndexes","oldDef","newDef","def","isIEOrEdge","oldIndexes","newIndexes","oldIdx","newIdx","createObjectStore","createIndex","idbindex","_hasGetAll","dexieName","indexSpec","WorkerGlobalScope","vip","letThrough","dexieOpen","state","isBeingOpened","dbReadyPromise","dbOpenError","Debug.debug","openCanceller","Debug.getErrorWithStack","openComplete","resolveDbReady","dbReadyResolve","upgradeTransaction","MissingAPI","dbName","autoSchema","open","round","verno","onblocked","_fireOnBlocked","onupgradeneeded","_options","allowEmptyDB","abort","close","delreq","deleteDatabase","NoSuchDatabase","oldVer","pow","_allTables","readGlobalSchema","ch","verifyInstalledSchema","connections","onversionchange","vcFired","databaseEnumerator","onReadyBeingFired","ready","fireRemainders","remainders","finally","awaitIterator","iterator","step","getNext","onSuccess","onError","callNext","throw","extractTransactionArgs","mode","_tableArgs_","scopeFunc","enterTransactionScope","parentTransaction","zoneProps","returnValue","scopeFuncIsAsync","active","PrematureCommit","_resolve","pad","assign","t","n","hasOwnProperty","self","window","getPrototypeOf","intrinsicTypeNames","num","getTime","ArrayBuffer","isView","buffer","iteratorSymbol","Symbol","location","href","idbDomErrorNames","errorList","defaultTexts","VersionChanged","DatabaseClosed","Abort","TransactionInactive","_stack","errnames","BaseException","msgOrInner","inner","fullName","Syntax","SyntaxError","Type","Range","RangeError","exceptionMap","fullNameExceptions","resolvedGlobalPromise","schedulePhysicalTick","MutationObserver","hiddenDiv","createElement","observe","attributes","setAttribute","unhandleds","pgp","uh","thenProp","microTaskId","handler","onFinally","getStack","errorName","failure","timeout","ms","handle","Timeout","clearTimeout","remaining","newPSD","scheduler","finalizer","run_at_end_of_this_or_next_physical_tick","possiblePromises","status","AggregateError","String","fromCharCode","INVALID_KEY_ARGUMENT","hangsOnDeleteLargeKeyRange","dexieStackFrameFilter","AnyRange","_trans","writeLocked","checkTableInTransaction","NotFound","_tx","tempTransaction","autoOpen","keyOrCrit","where","first","hook","reading","indexOrCrit","equals","idb","keyPaths","compoundIndex","ix","_maxKey","JSON","stringify","filterFunction","toCollection","and","thenShortcut","offset","numRows","each","toArray","orderBy","mapToClass","readHook","defineClass","content","objToAdd","update","keyOrObject","modify","put","bulkGet","bulkAdd","objects","keysOrOptions","allKeys","numObjects","objectsToAdd","pos","bulkPut","objectsToPut","bulkDelete","numKeys","_read","_write","clone","raw","sortBy","getval","parts","lastPart","sorter","aVal","lastIndex","bVal","order","offsetLeft","rowsLeft","until","bIncludeStopEntry","last","isMatch","desc","eachKey","eachUniqueKey","eachPrimaryKey","primaryKeys","uniqueKeys","firstKey","lastKey","distinct","strKey","found","changes","modifyer","anythingModified","Dexie","totalFailures","applyMutateResult","expectedCount","nextChunk","addValues","putValues","putKeys","deleteKeys","origValue","coreRange","between","includeLower","includeUpper","_cmp","above","aboveOrEqual","below","belowOrEqual","startsWith","str","startsWithIgnoreCase","equalsIgnoreCase","anyOfIgnoreCase","startsWithAnyOfIgnoreCase","anyOf","_ascending","_descending","notEqual","inAnyRange","includeLowers","includeUppers","noneOf","ranges","rangeSorter","sortDirection","ascending","descending","_min","max","_max","newRange","rangePos","keyIsBeyondCurrentEntry","keyIsBeforeCurrentEntry","checkKey","keyWithinCurrentRange","startsWithAnyOf","_lock","_reculock","lockOwnerFor","_unlock","_blockedFuncs","_locked","fnAndPSD","OpenFailed","onabort","oncomplete","bWriteLock","ReadOnly","_root","waitFor","promiseLike","root","_waitingFor","_waitingQueue","spin","_spinCount","currentWaitPromise","memoizedTables","transactionBoundTable","_parseStoresSpec","stores","outSchema","indexNum","trim","replace","storesSource","storesSpec","upgrade","upgradeFunction","virtualIndexMiddleware","level","addVirtualIndexes","keyTail","lowLevelIndex","keyPathAlias","indexList","indexLookup","keyLength","isVirtual","virtualIndex","allVirtualIndexes","translateRequest","createVirtualCursor","hooksMiddleware","downCore","downTable","addPutOrDelete","dxTrans","effectiveKeys","getExistingValues","existingValues","contexts","existingValue","deleting","generatedPrimaryKey","creating","objectDiff","updating","deleteRange","deleteNextChunk","deps","dependencies","addons","cancelOpen","bSticky","keyRangeGenerator","keyRange","whereCtx","readingHook","createTableConstructor","complete","wasActive","createTransactionConstructor","Version","versionNumber","createVersionConstructor","orCollection","_IDBKeyRange","createWhereClauseConstructor","newVersion","use","addon","versionInstance","_whenReady","unuse","mw","hasArguments","doDelete","remove","backendDB","isOpen","hasBeenClosed","hasFailed","dynamicallyOpened","_transaction","idbMode","onlyIfCompatible","SubTransaction","enterTransaction","InvalidTable","_Dexie","databaseName","exists","getDatabaseNames","ignoreTransaction","async","generatorFn","spawn","currentTransaction","promiseOrFunction","optionalTimeout","Debug.setDebug","minKey","mozIndexedDB","webkitIndexedDB","msIndexedDB","webkitIDBKeyRange","semVer","default","maxKey","dbNamesTable","hasDatabasesNative","databases","dbnames","infos","info","DatabaseEnumerator","initDatabaseEnumerator","domError","module","exports","Store1","super","checkins","checkin","Home","getOpenCheckin","xs","out","setCheckins","useState","revision","setRevision","useEffect","loadData","action","onClick","Date","in","class","style","home","element","getHookState","currentComponent","currentHook","hooks","initialState","reducer","init","hookState","currentIndex","_reducer","invokeOrReturn","nextValue","setState","useReducer","argsChanged","flushAfterPaintEffects","afterPaintEffects","component","invokeCleanup","invokeEffect","comp","oldArgs","newArgs","arg","f","prevRaf","oldBeforeDiff","oldBeforeRender","oldAfterDiff","diffed","oldCommit","oldBeforeUnmount","unmount","vnode","requestAnimationFrame","raf","HAS_RAF","cancelAnimationFrame","commitQueue","g","Function"],"mappings":"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","file":"route-home.chunk.9678c.esm.js","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","﻿declare var global;\nexport const keys = Object.keys;\nexport const isArray = Array.isArray;\nconst _global =\n    typeof self !== 'undefined' ? self :\n    typeof window !== 'undefined' ? window :\n    global;\nif (typeof Promise !== 'undefined' && !_global.Promise){\n    // In jsdom, this it can be the case that Promise is not put on the global object.\n    // If so, we need to patch the global object for the rest of the code to work as expected.\n    // Other dexie code expects Promise to be on the global object (like normal browser environments)\n    _global.Promise = Promise;\n}\nexport { _global }\n\nexport function extend(obj, extension) {\n    if (typeof extension !== 'object') return obj;\n    keys(extension).forEach(function (key) {\n        obj[key] = extension[key];\n    });\n    return obj;\n}\n\nexport const getProto = Object.getPrototypeOf;\nexport const _hasOwn = {}.hasOwnProperty;\nexport function hasOwn(obj, prop) {\n    return _hasOwn.call(obj, prop);\n}\n\nexport function props (proto, extension) {\n    if (typeof extension === 'function') extension = extension(getProto(proto));\n    keys(extension).forEach(key => {\n        setProp(proto, key, extension[key]);\n    });\n}\n\nexport const defineProperty = Object.defineProperty;\n\nexport function setProp(obj, prop, functionOrGetSet, options?) {\n    defineProperty(obj, prop, extend(functionOrGetSet && hasOwn(functionOrGetSet, \"get\") && typeof functionOrGetSet.get === 'function' ?\n        {get: functionOrGetSet.get, set: functionOrGetSet.set, configurable: true} :\n        {value: functionOrGetSet, configurable: true, writable: true}, options));\n}\n\nexport function derive(Child) {\n    return {\n        from: function (Parent) {\n            Child.prototype = Object.create(Parent.prototype);\n            setProp(Child.prototype, \"constructor\", Child);\n            return {\n                extend: props.bind(null, Child.prototype)\n            };\n        }\n    };\n}\n\nexport const getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\nexport function getPropertyDescriptor(obj, prop) {\n    const pd = getOwnPropertyDescriptor(obj, prop);\n    let proto;\n    return pd || (proto = getProto(obj)) && getPropertyDescriptor (proto, prop);\n}\n\nconst _slice = [].slice;\nexport function slice(args, start?, end?) {\n    return _slice.call(args, start, end);\n}\n\nexport function override(origFunc, overridedFactory) {\n    return overridedFactory(origFunc);\n}\n\nexport function assert (b) {\n    if (!b) throw new Error(\"Assertion Failed\");\n}\n\nexport function asap(fn) {\n    // @ts-ignore\n    if (_global.setImmediate) setImmediate(fn); else setTimeout(fn, 0);\n}\n\nexport function getUniqueArray(a) {\n    return a.filter((value, index, self) => self.indexOf(value) === index);\n}\n\n/** Generate an object (hash map) based on given array.\n * @param extractor Function taking an array item and its index and returning an array of 2 items ([key, value]) to\n *        instert on the resulting object for each item in the array. If this function returns a falsy value, the\n *        current item wont affect the resulting object.\n */\nexport function arrayToObject<T,R> (array: T[], extractor: (x:T, idx: number)=>[string, R]): {[name: string]: R} {\n    return array.reduce((result, item, i) => {\n        var nameAndValue = extractor(item, i);\n        if (nameAndValue) result[nameAndValue[0]] = nameAndValue[1];\n        return result;\n    }, {});\n}\n\nexport function trycatcher(fn, reject) {\n    return function () {\n        try {\n            fn.apply(this, arguments);\n        } catch (e) {\n            reject(e);\n        }\n    };\n}\n\nexport function tryCatch(fn: (...args: any[])=>void, onerror, args?) : void {\n    try {\n        fn.apply(null, args);\n    } catch (ex) {\n        onerror && onerror(ex);\n    }\n}\n\nexport function getByKeyPath(obj, keyPath) {\n    // http://www.w3.org/TR/IndexedDB/#steps-for-extracting-a-key-from-a-value-using-a-key-path\n    if (hasOwn(obj, keyPath)) return obj[keyPath]; // This line is moved from last to first for optimization purpose.\n    if (!keyPath) return obj;\n    if (typeof keyPath !== 'string') {\n        var rv = [];\n        for (var i = 0, l = keyPath.length; i < l; ++i) {\n            var val = getByKeyPath(obj, keyPath[i]);\n            rv.push(val);\n        }\n        return rv;\n    }\n    var period = keyPath.indexOf('.');\n    if (period !== -1) {\n        var innerObj = obj[keyPath.substr(0, period)];\n        return innerObj === undefined ? undefined : getByKeyPath(innerObj, keyPath.substr(period + 1));\n    }\n    return undefined;\n}\n\nexport function setByKeyPath(obj, keyPath, value) {\n    if (!obj || keyPath === undefined) return;\n    if ('isFrozen' in Object && Object.isFrozen(obj)) return;\n    if (typeof keyPath !== 'string' && 'length' in keyPath) {\n        assert(typeof value !== 'string' && 'length' in value);\n        for (var i = 0, l = keyPath.length; i < l; ++i) {\n            setByKeyPath(obj, keyPath[i], value[i]);\n        }\n    } else {\n        var period = keyPath.indexOf('.');\n        if (period !== -1) {\n            var currentKeyPath = keyPath.substr(0, period);\n            var remainingKeyPath = keyPath.substr(period + 1);\n            if (remainingKeyPath === \"\")\n                if (value === undefined) {\n                    if (isArray(obj) && !isNaN(parseInt(currentKeyPath))) obj.splice(currentKeyPath, 1);\n                    else delete obj[currentKeyPath];\n                } else obj[currentKeyPath] = value;\n            else {\n                var innerObj = obj[currentKeyPath];\n                if (!innerObj) innerObj = (obj[currentKeyPath] = {});\n                setByKeyPath(innerObj, remainingKeyPath, value);\n            }\n        } else {\n            if (value === undefined) {\n                if (isArray(obj) && !isNaN(parseInt(keyPath))) obj.splice(keyPath, 1);\n                else delete obj[keyPath];\n            } else obj[keyPath] = value;\n        }\n    }\n}\n\nexport function delByKeyPath(obj, keyPath) {\n    if (typeof keyPath === 'string')\n        setByKeyPath(obj, keyPath, undefined);\n    else if ('length' in keyPath)\n        [].map.call(keyPath, function(kp) {\n            setByKeyPath(obj, kp, undefined);\n        });\n}\n\nexport function shallowClone(obj) {\n    var rv = {};\n    for (var m in obj) {\n        if (hasOwn(obj, m)) rv[m] = obj[m];\n    }\n    return rv;\n}\n\nconst concat = [].concat;\nexport function flatten<T> (a: (T | T[])[]) : T[] {\n    return concat.apply([], a);\n}\n\n//https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Structured_clone_algorithm\nconst intrinsicTypeNames =\n    \"Boolean,String,Date,RegExp,Blob,File,FileList,ArrayBuffer,DataView,Uint8ClampedArray,ImageData,Map,Set\"\n    .split(',').concat(\n        flatten([8,16,32,64].map(num=>[\"Int\",\"Uint\",\"Float\"].map(t=>t+num+\"Array\")))\n    ).filter(t=>_global[t]);\nconst intrinsicTypes = intrinsicTypeNames.map(t=>_global[t]);\nconst intrinsicTypeNameSet = arrayToObject(intrinsicTypeNames, x=>[x,true]);\n\nexport function deepClone<T>(any: T): T {\n    if (!any || typeof any !== 'object') return any;\n    var rv;\n    if (isArray(any)) {\n        rv = [];\n        for (var i = 0, l = any.length; i < l; ++i) {\n            rv.push(deepClone(any[i]));\n        }\n    } else if (intrinsicTypes.indexOf(any.constructor) >= 0) {\n        rv = any;\n    } else {\n        rv = any.constructor ? Object.create(any.constructor.prototype) : {};\n        for (var prop in any) {\n            if (hasOwn(any, prop)) {\n                rv[prop] = deepClone(any[prop]);\n            }\n        }\n    }\n    return rv;\n}\n\nconst {toString} = {};\nexport function toStringTag(o: Object) {\n    return toString.call(o).slice(8, -1);\n}\n\nexport const getValueOf = (val:any, type: string) => \n    type === \"Array\" ? ''+val.map(v => getValueOf(v, toStringTag(v))) :\n    type === \"ArrayBuffer\" ? ''+new Uint8Array(val) :\n    type === \"Date\" ? val.getTime() :\n    ArrayBuffer.isView(val) ? ''+new Uint8Array(val.buffer) :\n    val;\n\n export function getObjectDiff(a, b, rv?, prfx?) {\n    // Compares objects a and b and produces a diff object.\n    rv = rv || {};\n    prfx = prfx || '';\n    keys(a).forEach(prop => {\n        if (!hasOwn(b, prop))\n            rv[prfx+prop] = undefined; // Property removed\n        else {\n            var ap = a[prop],\n                bp = b[prop];\n            if (typeof ap === 'object' && typeof bp === 'object' && ap && bp)\n            {\n                const apTypeName = toStringTag(ap);\n                const bpTypeName = toStringTag(bp);\n\n                if (apTypeName === bpTypeName) {\n                    if (intrinsicTypeNameSet[apTypeName]) {\n                        // This is an intrinsic type. Don't go deep diffing it.\n                        // Instead compare its value in best-effort:\n                        // (Can compare real values of Date, ArrayBuffers and views)\n                        if (getValueOf(ap, apTypeName) !== getValueOf(bp, bpTypeName)) {\n                            rv[prfx + prop] = b[prop]; // Date / ArrayBuffer etc is of different value\n                        }\n                    } else {\n                        // This is not an intrinsic object. Compare the it deeply:\n                        getObjectDiff(ap, bp, rv, prfx + prop + \".\");\n                    }\n                } else {\n                    rv[prfx + prop] = b[prop];// Property changed to other type\n                }                \n            } else if (ap !== bp)\n                rv[prfx + prop] = b[prop];// Primitive value changed\n        }\n    });\n    keys(b).forEach(prop => {\n        if (!hasOwn(a, prop)) {\n            rv[prfx+prop] = b[prop]; // Property added\n        }\n    });\n    return rv;\n}\n\n// If first argument is iterable or array-like, return it as an array\nexport const iteratorSymbol = typeof Symbol !== 'undefined' && Symbol.iterator;\nexport const getIteratorOf = iteratorSymbol ? function(x) {\n    var i;\n    return x != null && (i = x[iteratorSymbol]) && i.apply(x);\n} : function () { return null; };\n\nexport const NO_CHAR_ARRAY = {};\n// Takes one or several arguments and returns an array based on the following criteras:\n// * If several arguments provided, return arguments converted to an array in a way that\n//   still allows javascript engine to optimize the code.\n// * If single argument is an array, return a clone of it.\n// * If this-pointer equals NO_CHAR_ARRAY, don't accept strings as valid iterables as a special\n//   case to the two bullets below.\n// * If single argument is an iterable, convert it to an array and return the resulting array.\n// * If single argument is array-like (has length of type number), convert it to an array.\nexport function getArrayOf (arrayLike) {\n    var i, a, x, it;\n    if (arguments.length === 1) {\n        if (isArray(arrayLike)) return arrayLike.slice();\n        if (this === NO_CHAR_ARRAY && typeof arrayLike === 'string') return [arrayLike];\n        if ((it = getIteratorOf(arrayLike))) {\n            a = [];\n            while ((x = it.next()), !x.done) a.push(x.value);\n            return a;\n        }\n        if (arrayLike == null) return [arrayLike];\n        i = arrayLike.length;\n        if (typeof i === 'number') {\n            a = new Array(i);\n            while (i--) a[i] = arrayLike[i];\n            return a;\n        }\n        return [arrayLike];\n    }\n    i = arguments.length;\n    a = new Array(i);\n    while (i--) a[i] = arguments[i];\n    return a;\n}\nexport const isAsyncFunction = typeof Symbol !== 'undefined'\n    ? (fn: Function) => fn[Symbol.toStringTag] === 'AsyncFunction'\n    : ()=>false;\n","// By default, debug will be true only if platform is a web platform and its page is served from localhost.\n// When debug = true, error's stacks will contain asyncronic long stacks.\nexport var debug = typeof location !== 'undefined' &&\n        // By default, use debug mode if served from localhost.\n        /^(http|https):\\/\\/(localhost|127\\.0\\.0\\.1)/.test(location.href);\n\nexport function setDebug(value, filter) {\n    debug = value;\n    libraryFilter = filter;\n}\n\nexport var libraryFilter = () => true;\n\nexport const NEEDS_THROW_FOR_STACK = !new Error(\"\").stack;\n\nexport function getErrorWithStack() {\n    \"use strict\";\n    if (NEEDS_THROW_FOR_STACK) try {\n        // Doing something naughty in strict mode here to trigger a specific error\n        // that can be explicitely ignored in debugger's exception settings.\n        // If we'd just throw new Error() here, IE's debugger's exception settings\n        // will just consider it as \"exception thrown by javascript code\" which is\n        // something you wouldn't want it to ignore.\n        getErrorWithStack.arguments;\n        throw new Error(); // Fallback if above line don't throw.\n    } catch(e) {\n        return e;\n    }\n    return new Error();\n}\n\nexport function prettyStack(exception, numIgnoredFrames) {\n    var stack = exception.stack;\n    if (!stack) return \"\";\n    numIgnoredFrames = (numIgnoredFrames || 0);\n    if (stack.indexOf(exception.name) === 0)\n        numIgnoredFrames += (exception.name + exception.message).split('\\n').length;\n    return stack.split('\\n')\n        .slice(numIgnoredFrames)\n        .filter(libraryFilter)\n        .map(frame => \"\\n\" + frame)\n        .join('');\n}\n\n// TODO: Replace this in favor of a decorator instead.\nexport function deprecated<T> (what: string, fn: (...args)=>T) {\n    return function () {\n        console.warn(`${what} is deprecated. See http://dexie.org/docs/Deprecations. ${prettyStack(getErrorWithStack(), 1)}`);\n        return fn.apply(this, arguments);\n    } as (...args)=>T\n}\n","import { derive, setProp } from '../functions/utils';\nimport { getErrorWithStack, prettyStack } from '../helpers/debug';\n\nvar dexieErrorNames = [\n    'Modify',\n    'Bulk',\n    'OpenFailed',\n    'VersionChange',\n    'Schema',\n    'Upgrade',\n    'InvalidTable',\n    'MissingAPI',\n    'NoSuchDatabase',\n    'InvalidArgument',\n    'SubTransaction',\n    'Unsupported',\n    'Internal',\n    'DatabaseClosed',\n    'PrematureCommit',\n    'ForeignAwait'\n];\n\nvar idbDomErrorNames = [\n    'Unknown',\n    'Constraint',\n    'Data',\n    'TransactionInactive',\n    'ReadOnly',\n    'Version',\n    'NotFound',\n    'InvalidState',\n    'InvalidAccess',\n    'Abort',\n    'Timeout',\n    'QuotaExceeded',\n    'Syntax',\n    'DataClone'\n];\n\nvar errorList = dexieErrorNames.concat(idbDomErrorNames);\n\nvar defaultTexts = {\n    VersionChanged: \"Database version changed by other database connection\",\n    DatabaseClosed: \"Database has been closed\",\n    Abort: \"Transaction aborted\",\n    TransactionInactive: \"Transaction has already completed or failed\"\n};\n\n//\n// DexieError - base class of all out exceptions.\n//\nexport function DexieError (name, msg) {\n    // Reason we don't use ES6 classes is because:\n    // 1. It bloats transpiled code and increases size of minified code.\n    // 2. It doesn't give us much in this case.\n    // 3. It would require sub classes to call super(), which\n    //    is not needed when deriving from Error.\n    this._e = getErrorWithStack();\n    this.name = name;\n    this.message = msg;\n}\n\nderive(DexieError).from(Error).extend({\n    stack: {\n        get: function() {\n            return this._stack ||\n                (this._stack = this.name + \": \" + this.message + prettyStack(this._e, 2));\n        }\n    },\n    toString: function(){ return this.name + \": \" + this.message; }\n});\n\nfunction getMultiErrorMessage (msg, failures) {\n    return msg + \". Errors: \" + Object.keys(failures)\n        .map(key=>failures[key].toString())\n        .filter((v,i,s)=>s.indexOf(v) === i) // Only unique error strings\n        .join('\\n');\n}\n\n//\n// ModifyError - thrown in Collection.modify()\n// Specific constructor because it contains members failures and failedKeys.\n//\nexport function ModifyError (msg, failures, successCount, failedKeys) {\n    this._e = getErrorWithStack();\n    this.failures = failures;\n    this.failedKeys = failedKeys;\n    this.successCount = successCount;\n    this.message = getMultiErrorMessage(msg, failures);\n}\nderive(ModifyError).from(DexieError);\n\nexport function BulkError (msg, failures) {\n    this._e = getErrorWithStack();\n    this.name = \"BulkError\";\n    this.failures = failures;\n    this.message = getMultiErrorMessage(msg, failures);\n}\nderive(BulkError).from(DexieError);\n\n//\n//\n// Dynamically generate error names and exception classes based\n// on the names in errorList.\n//\n//\n\n// Map of {ErrorName -> ErrorName + \"Error\"}\nexport var errnames = errorList.reduce((obj,name)=>(obj[name]=name+\"Error\",obj),{});\n\n// Need an alias for DexieError because we're gonna create subclasses with the same name.\nconst BaseException = DexieError;\n// Map of {ErrorName -> exception constructor}\nexport var exceptions = errorList.reduce((obj,name)=>{\n    // Let the name be \"DexieError\" because this name may\n    // be shown in call stack and when debugging. DexieError is\n    // the most true name because it derives from DexieError,\n    // and we cannot change Function.name programatically without\n    // dynamically create a Function object, which would be considered\n    // 'eval-evil'.\n    var fullName = name + \"Error\";\n    function DexieError (msgOrInner, inner){\n        this._e = getErrorWithStack();\n        this.name = fullName;\n        if (!msgOrInner) {\n            this.message = defaultTexts[name] || fullName;\n            this.inner = null;\n        } else if (typeof msgOrInner === 'string') {\n            this.message = `${msgOrInner}${!inner ? '' : '\\n ' + inner}`;\n            this.inner = inner || null;\n        } else if (typeof msgOrInner === 'object') {\n            this.message = `${msgOrInner.name} ${msgOrInner.message}`;\n            this.inner = msgOrInner;\n        }\n    }\n    derive(DexieError).from(BaseException);\n    obj[name]=DexieError;\n    return obj;\n},{});\n\n// Use ECMASCRIPT standard exceptions where applicable:\nexceptions.Syntax = SyntaxError;\nexceptions.Type = TypeError;\nexceptions.Range = RangeError;\n\nexport var exceptionMap = idbDomErrorNames.reduce((obj, name)=>{\n    obj[name + \"Error\"] = exceptions[name];\n    return obj;\n}, {});\n\nexport function mapError (domError, message) {\n    if (!domError || domError instanceof DexieError || domError instanceof TypeError || domError instanceof SyntaxError || !domError.name || !exceptionMap[domError.name])\n        return domError;\n    var rv = new exceptionMap[domError.name](message || domError.message, domError);\n    if (\"stack\" in domError) {\n        // Derive stack from inner exception if it has a stack\n        setProp(rv, \"stack\", {get: function(){\n            return this.inner.stack;\n        }});\n    }\n    return rv;\n}\n\nexport var fullNameExceptions = errorList.reduce((obj, name)=>{\n    if ([\"Syntax\",\"Type\",\"Range\"].indexOf(name) === -1)\n        obj[name + \"Error\"] = exceptions[name];\n    return obj;\n}, {});\n\nfullNameExceptions.ModifyError = ModifyError;\nfullNameExceptions.DexieError = DexieError;\nfullNameExceptions.BulkError = BulkError;\n","import {extend} from './utils';\n\nexport function nop() { }\nexport function mirror(val) { return val; }\nexport function pureFunctionChain(f1, f2) {\n    // Enables chained events that takes ONE argument and returns it to the next function in chain.\n    // This pattern is used in the hook(\"reading\") event.\n    if (f1 == null || f1 === mirror) return f2;\n    return function (val) {\n        return f2(f1(val));\n    };\n}\n\nexport function callBoth(on1, on2) {\n    return function () {\n        on1.apply(this, arguments);\n        on2.apply(this, arguments);\n    };\n}\n\nexport function hookCreatingChain(f1, f2) {\n    // Enables chained events that takes several arguments and may modify first argument by making a modification and then returning the same instance.\n    // This pattern is used in the hook(\"creating\") event.\n    if (f1 === nop) return f2;\n    return function () {\n        var res = f1.apply(this, arguments);\n        if (res !== undefined) arguments[0] = res;\n        var onsuccess = this.onsuccess, // In case event listener has set this.onsuccess\n            onerror = this.onerror;     // In case event listener has set this.onerror\n        this.onsuccess = null;\n        this.onerror = null;\n        var res2 = f2.apply(this, arguments);\n        if (onsuccess) this.onsuccess = this.onsuccess ? callBoth(onsuccess, this.onsuccess) : onsuccess;\n        if (onerror) this.onerror = this.onerror ? callBoth(onerror, this.onerror) : onerror;\n        return res2 !== undefined ? res2 : res;\n    };\n}\n\nexport function hookDeletingChain(f1, f2) {\n    if (f1 === nop) return f2;\n    return function () {\n        f1.apply(this, arguments);\n        var onsuccess = this.onsuccess, // In case event listener has set this.onsuccess\n            onerror = this.onerror;     // In case event listener has set this.onerror\n        this.onsuccess = this.onerror = null;\n        f2.apply(this, arguments);\n        if (onsuccess) this.onsuccess = this.onsuccess ? callBoth(onsuccess, this.onsuccess) : onsuccess;\n        if (onerror) this.onerror = this.onerror ? callBoth(onerror, this.onerror) : onerror;\n    };\n}\n\nexport function hookUpdatingChain(f1, f2) {\n    if (f1 === nop) return f2;\n    return function (modifications) {\n        var res = f1.apply(this, arguments);\n        extend(modifications, res); // If f1 returns new modifications, extend caller's modifications with the result before calling next in chain.\n        var onsuccess = this.onsuccess, // In case event listener has set this.onsuccess\n            onerror = this.onerror;     // In case event listener has set this.onerror\n        this.onsuccess = null;\n        this.onerror = null;\n        var res2 = f2.apply(this, arguments);\n        if (onsuccess) this.onsuccess = this.onsuccess ? callBoth(onsuccess, this.onsuccess) : onsuccess;\n        if (onerror) this.onerror = this.onerror ? callBoth(onerror, this.onerror) : onerror;\n        return res === undefined ?\n            (res2 === undefined ? undefined : res2) :\n            (extend(res, res2));\n    };\n}\n\nexport function reverseStoppableEventChain(f1, f2) {\n    if (f1 === nop) return f2;\n    return function () {\n        if (f2.apply(this, arguments) === false) return false;\n        return f1.apply(this, arguments);\n    };\n}\n\nexport function nonStoppableEventChain(f1, f2) {\n    if (f1 === nop) return f2;\n    return function () {\n        f1.apply(this, arguments);\n        f2.apply(this, arguments);\n    };\n}\n\nexport function promisableChain(f1, f2) {\n    if (f1 === nop) return f2;\n    return function () {\n        var res = f1.apply(this, arguments);\n        if (res && typeof res.then === 'function') {\n            var thiz = this,\n                i = arguments.length,\n                args = new Array(i);\n            while (i--) args[i] = arguments[i];\n            return res.then(function () {\n                return f2.apply(thiz, args);\n            });\n        }\n        return f2.apply(this, arguments);\n    };\n}\n","/*\n * Copyright (c) 2014-2017 David Fahlander\n * Apache License Version 2.0, January 2004, http://www.apache.org/licenses/LICENSE-2.0\n */\nimport {tryCatch, props, setProp, _global,\n    getPropertyDescriptor, getArrayOf, extend} from '../functions/utils';\nimport {nop, callBoth, mirror} from '../functions/chaining-functions';\nimport {debug, prettyStack, getErrorWithStack} from './debug';\nimport {exceptions} from '../errors';\n\n//\n// Promise and Zone (PSD) for Dexie library\n//\n// I started out writing this Promise class by copying promise-light (https://github.com/taylorhakes/promise-light) by\n// https://github.com/taylorhakes - an A+ and ECMASCRIPT 6 compliant Promise implementation.\n//\n// In previous versions this was fixed by not calling setTimeout when knowing that the resolve() or reject() came from another\n// tick. In Dexie v1.4.0, I've rewritten the Promise class entirely. Just some fragments of promise-light is left. I use\n// another strategy now that simplifies everything a lot: to always execute callbacks in a new micro-task, but have an own micro-task\n// engine that is indexedDB compliant across all browsers.\n// Promise class has also been optimized a lot with inspiration from bluebird - to avoid closures as much as possible.\n// Also with inspiration from bluebird, asyncronic stacks in debug mode.\n//\n// Specific non-standard features of this Promise class:\n// * Custom zone support (a.k.a. PSD) with ability to keep zones also when using native promises as well as\n//   native async / await.\n// * Promise.follow() method built upon the custom zone engine, that allows user to track all promises created from current stack frame\n//   and below + all promises that those promises creates or awaits.\n// * Detect any unhandled promise in a PSD-scope (PSD.onunhandled). \n//\n// David Fahlander, https://github.com/dfahlander\n//\n\n// Just a pointer that only this module knows about.\n// Used in Promise constructor to emulate a private constructor.\nvar INTERNAL = {};\n\n// Async stacks (long stacks) must not grow infinitely.\nconst\n    LONG_STACKS_CLIP_LIMIT = 100,\n    // When calling error.stack or promise.stack, limit the number of asyncronic stacks to print out. \n    MAX_LONG_STACKS = 20,\n    ZONE_ECHO_LIMIT = 100,\n    [resolvedNativePromise, nativePromiseProto, resolvedGlobalPromise] = typeof Promise === 'undefined' ?\n        [] :\n        (()=>{\n            let globalP = Promise.resolve();\n            if (typeof crypto === 'undefined' || !crypto.subtle)\n                return [globalP, globalP.__proto__, globalP];\n            // Generate a native promise (as window.Promise may have been patched)\n            const nativeP = crypto.subtle.digest(\"SHA-512\", new Uint8Array([0]));\n            return [\n                nativeP,\n                nativeP.__proto__,\n                globalP\n            ];\n        })(),\n    nativePromiseThen = nativePromiseProto && nativePromiseProto.then;\n\nexport const NativePromise = resolvedNativePromise && resolvedNativePromise.constructor;\nconst patchGlobalPromise = !!resolvedGlobalPromise;\n\nvar stack_being_generated = false;\n\n/* The default function used only for the very first promise in a promise chain.\n   As soon as then promise is resolved or rejected, all next tasks will be executed in micro ticks\n   emulated in this module. For indexedDB compatibility, this means that every method needs to \n   execute at least one promise before doing an indexedDB operation. Dexie will always call \n   db.ready().then() for every operation to make sure the indexedDB event is started in an\n   indexedDB-compatible emulated micro task loop.\n*/\nvar schedulePhysicalTick = resolvedGlobalPromise ?\n    () => {resolvedGlobalPromise.then(physicalTick);}\n    :\n    _global.setImmediate ? \n        // setImmediate supported. Those modern platforms also supports Function.bind().\n        setImmediate.bind(null, physicalTick) :\n        _global.MutationObserver ?\n            // MutationObserver supported\n            () => {\n                var hiddenDiv = document.createElement(\"div\");\n                (new MutationObserver(() => {\n                    physicalTick();\n                    hiddenDiv = null;\n                })).observe(hiddenDiv, { attributes: true });\n                hiddenDiv.setAttribute('i', '1');\n            } :\n            // No support for setImmediate or MutationObserver. No worry, setTimeout is only called\n            // once time. Every tick that follows will be our emulated micro tick.\n            // Could have uses setTimeout.bind(null, 0, physicalTick) if it wasnt for that FF13 and below has a bug \n            ()=>{setTimeout(physicalTick,0);};\n\n// Configurable through Promise.scheduler.\n// Don't export because it would be unsafe to let unknown\n// code call it unless they do try..catch within their callback.\n// This function can be retrieved through getter of Promise.scheduler though,\n// but users must not do Promise.scheduler = myFuncThatThrowsException\nvar asap = function (callback, args) {\n    microtickQueue.push([callback, args]);\n    if (needsNewPhysicalTick) {\n        schedulePhysicalTick();\n        needsNewPhysicalTick = false;\n    }\n};\n\nvar isOutsideMicroTick = true, // True when NOT in a virtual microTick.\n    needsNewPhysicalTick = true, // True when a push to microtickQueue must also schedulePhysicalTick()\n    unhandledErrors = [], // Rejected promises that has occured. Used for triggering 'unhandledrejection'.\n    rejectingErrors = [], // Tracks if errors are being re-rejected during onRejected callback.\n    currentFulfiller = null,\n    rejectionMapper = mirror; // Remove in next major when removing error mapping of DOMErrors and DOMExceptions\n    \nexport var globalPSD = {\n    id: 'global',\n    global: true,\n    ref: 0,\n    unhandleds: [],\n    onunhandled: globalError,\n    pgp: false,\n    env: {},\n    finalize: function () {\n        this.unhandleds.forEach(uh => {\n            try {\n                globalError(uh[0], uh[1]);\n            } catch (e) {}\n        });\n    }\n};\n\nexport var PSD = globalPSD;\n\nexport var microtickQueue = []; // Callbacks to call in this or next physical tick.\nexport var numScheduledCalls = 0; // Number of listener-calls left to do in this physical tick.\nexport var tickFinalizers = []; // Finalizers to call when there are no more async calls scheduled within current physical tick.\n\nexport default function DexiePromise(fn) {\n    if (typeof this !== 'object') throw new TypeError('Promises must be constructed via new');    \n    this._listeners = [];\n    this.onuncatched = nop; // Deprecate in next major. Not needed. Better to use global error handler.\n    \n    // A library may set `promise._lib = true;` after promise is created to make resolve() or reject()\n    // execute the microtask engine implicitely within the call to resolve() or reject().\n    // To remain A+ compliant, a library must only set `_lib=true` if it can guarantee that the stack\n    // only contains library code when calling resolve() or reject().\n    // RULE OF THUMB: ONLY set _lib = true for promises explicitely resolving/rejecting directly from\n    // global scope (event handler, timer etc)!\n    this._lib = false;\n    // Current async scope\n    var psd = (this._PSD = PSD);\n\n    if (debug) {\n        this._stackHolder = getErrorWithStack();\n        this._prev = null;\n        this._numPrev = 0; // Number of previous promises (for long stacks)\n    }\n    \n    if (typeof fn !== 'function') {\n        if (fn !== INTERNAL) throw new TypeError('Not a function');\n        // Private constructor (INTERNAL, state, value).\n        // Used internally by Promise.resolve() and Promise.reject().\n        this._state = arguments[1];\n        this._value = arguments[2];\n        if (this._state === false)\n            handleRejection(this, this._value); // Map error, set stack and addPossiblyUnhandledError().\n        return;\n    }\n    \n    this._state = null; // null (=pending), false (=rejected) or true (=resolved)\n    this._value = null; // error or result\n    ++psd.ref; // Refcounting current scope\n    executePromiseTask(this, fn);\n}\n\n// Prepare a property descriptor to put onto Promise.prototype.then\nconst thenProp = {\n    get: function() {\n        var psd = PSD, microTaskId = totalEchoes;\n\n        function then (onFulfilled, onRejected) {\n            var possibleAwait = !psd.global && (psd !== PSD || microTaskId !== totalEchoes);\n            const cleanup = possibleAwait && !decrementExpectedAwaits();\n            var rv = new DexiePromise((resolve, reject) => {\n                propagateToListener(this, new Listener(\n                    nativeAwaitCompatibleWrap(onFulfilled, psd, possibleAwait, cleanup),\n                    nativeAwaitCompatibleWrap(onRejected, psd, possibleAwait, cleanup),\n                    resolve,\n                    reject,\n                    psd));\n            });\n            debug && linkToPreviousPromise(rv, this);\n            return rv;\n        }\n\n        then.prototype = INTERNAL; // For idempotense, see setter below.\n\n        return then;\n    },\n    // Be idempotent and allow another framework (such as zone.js or another instance of a Dexie.Promise module) to replace Promise.prototype.then\n    // and when that framework wants to restore the original property, we must identify that and restore the original property descriptor.\n    set: function (value) {\n        setProp (this, 'then', value && value.prototype === INTERNAL ?\n            thenProp : // Restore to original property descriptor.\n            {\n                get: function(){\n                    return value; // Getter returning provided value (behaves like value is just changed)\n                },\n                set: thenProp.set // Keep a setter that is prepared to restore original.\n            }\n        );\n    }\n};\n\nprops(DexiePromise.prototype, {\n    then: thenProp, // Defined above.\n    _then: function (onFulfilled, onRejected) {\n        // A little tinier version of then() that don't have to create a resulting promise.\n        propagateToListener(this, new Listener(null, null, onFulfilled, onRejected, PSD));        \n    },\n\n    catch: function (onRejected) {\n        if (arguments.length === 1) return this.then(null, onRejected);\n        // First argument is the Error type to catch\n        var type = arguments[0],\n            handler = arguments[1];\n        return typeof type === 'function' ? this.then(null, err =>\n            // Catching errors by its constructor type (similar to java / c++ / c#)\n            // Sample: promise.catch(TypeError, function (e) { ... });\n            err instanceof type ? handler(err) : PromiseReject(err))\n        : this.then(null, err =>\n            // Catching errors by the error.name property. Makes sense for indexedDB where error type\n            // is always DOMError but where e.name tells the actual error type.\n            // Sample: promise.catch('ConstraintError', function (e) { ... });\n            err && err.name === type ? handler(err) : PromiseReject(err));\n    },\n\n    finally: function (onFinally) {\n        return this.then(value => {\n            onFinally();\n            return value;\n        }, err => {\n            onFinally();\n            return PromiseReject(err);\n        });\n    },\n    \n    stack: {\n        get: function() {\n            if (this._stack) return this._stack;\n            try {\n                stack_being_generated = true;\n                var stacks = getStack (this, [], MAX_LONG_STACKS);\n                var stack = stacks.join(\"\\nFrom previous: \");\n                if (this._state !== null) this._stack = stack; // Stack may be updated on reject.\n                return stack;\n            } finally {\n                stack_being_generated = false;\n            }\n        }\n    },\n\n    timeout: function (ms, msg) {\n        return ms < Infinity ?\n            new DexiePromise((resolve, reject) => {\n                var handle = setTimeout(() => reject(new exceptions.Timeout(msg)), ms);\n                this.then(resolve, reject).finally(clearTimeout.bind(null, handle));\n            }) : this;\n    }\n});\n\nif (typeof Symbol !== 'undefined' && Symbol.toStringTag)\n    setProp(DexiePromise.prototype, Symbol.toStringTag, 'Dexie.Promise');\n\n// Now that Promise.prototype is defined, we have all it takes to set globalPSD.env.\n// Environment globals snapshotted on leaving global zone\nglobalPSD.env = snapShot();\n\nfunction Listener(onFulfilled, onRejected, resolve, reject, zone) {\n    this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n    this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n    this.resolve = resolve;\n    this.reject = reject;\n    this.psd = zone;\n}\n\n// Promise Static Properties\nprops (DexiePromise, {\n    all: function () {\n        var values = getArrayOf.apply(null, arguments) // Supports iterables, implicit arguments and array-like.\n            .map(onPossibleParallellAsync); // Handle parallell async/awaits \n        return new DexiePromise(function (resolve, reject) {\n            if (values.length === 0) resolve([]);\n            var remaining = values.length;\n            values.forEach((a,i) => DexiePromise.resolve(a).then(x => {\n                values[i] = x;\n                if (!--remaining) resolve(values);\n            }, reject));\n        });\n    },\n    \n    resolve: value => {\n        if (value instanceof DexiePromise) return value;\n        if (value && typeof value.then === 'function') return new DexiePromise((resolve, reject)=>{\n            value.then(resolve, reject);\n        });\n        var rv = new DexiePromise(INTERNAL, true, value);\n        linkToPreviousPromise(rv, currentFulfiller);\n        return rv;\n    },\n    \n    reject: PromiseReject,\n    \n    race: function () {\n        var values = getArrayOf.apply(null, arguments).map(onPossibleParallellAsync);\n        return new DexiePromise((resolve, reject) => {\n            values.map(value => DexiePromise.resolve(value).then(resolve, reject));\n        });\n    },\n\n    PSD: {\n        get: ()=>PSD,\n        set: value => PSD = value\n    },\n\n    totalEchoes: {get: ()=>totalEchoes},\n\n    //task: {get: ()=>task},\n    \n    newPSD: newScope,\n    \n    usePSD: usePSD,\n    \n    scheduler: {\n        get: () => asap,\n        set: value => {asap = value}\n    },\n    \n    rejectionMapper: {\n        get: () => rejectionMapper,\n        set: value => {rejectionMapper = value;} // Map reject failures\n    },\n            \n    follow: (fn, zoneProps) => {\n        return new DexiePromise((resolve, reject) => {\n            return newScope((resolve, reject) => {\n                var psd = PSD;\n                psd.unhandleds = []; // For unhandled standard- or 3rd party Promises. Checked at psd.finalize()\n                psd.onunhandled = reject; // Triggered directly on unhandled promises of this library.\n                psd.finalize = callBoth(function () {\n                    // Unhandled standard or 3rd part promises are put in PSD.unhandleds and\n                    // examined upon scope completion while unhandled rejections in this Promise\n                    // will trigger directly through psd.onunhandled\n                    run_at_end_of_this_or_next_physical_tick(()=>{\n                        this.unhandleds.length === 0 ? resolve() : reject(this.unhandleds[0]);\n                    });\n                }, psd.finalize);\n                fn();\n            }, zoneProps, resolve, reject);\n        });\n    }\n});\n\nif (NativePromise) {\n    if (NativePromise.allSettled) setProp (DexiePromise, \"allSettled\", function() {\n        const possiblePromises = getArrayOf.apply(null, arguments).map(onPossibleParallellAsync);\n        return new DexiePromise(resolve => {\n            if (possiblePromises.length === 0) resolve([]);\n            let remaining = possiblePromises.length;\n            const results = new Array(remaining);\n            possiblePromises.forEach((p, i) => DexiePromise.resolve(p).then(\n                value => results[i] = {status: \"fulfilled\", value},\n                reason => results[i] = {status: \"rejected\", reason})\n                .then(()=>--remaining || resolve(results)));\n        });\n    });\n    if (NativePromise.any && typeof AggregateError !== 'undefined') setProp(DexiePromise, \"any\", function() {\n        const possiblePromises = getArrayOf.apply(null, arguments).map(onPossibleParallellAsync);\n        return new DexiePromise((resolve, reject) => {\n            if (possiblePromises.length === 0) reject(new AggregateError([]));\n            let remaining = possiblePromises.length;\n            const failures = new Array(remaining);\n            possiblePromises.forEach((p, i) => DexiePromise.resolve(p).then(\n                value => resolve(value),\n                failure => {\n                    failures[i] = failure;\n                    if (!--remaining) reject(new AggregateError(failures));\n                }));\n        });\n    });\n}\n\n/**\n* Take a potentially misbehaving resolver function and make sure\n* onFulfilled and onRejected are only called once.\n*\n* Makes no guarantees about asynchrony.\n*/\nfunction executePromiseTask (promise, fn) {\n    // Promise Resolution Procedure:\n    // https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n    try {\n        fn(value => {\n            if (promise._state !== null) return; // Already settled\n            if (value === promise) throw new TypeError('A promise cannot be resolved with itself.');\n            var shouldExecuteTick = promise._lib && beginMicroTickScope();\n            if (value && typeof value.then === 'function') {\n                executePromiseTask(promise, (resolve, reject) => {\n                    value instanceof DexiePromise ?\n                        value._then(resolve, reject) :\n                        value.then(resolve, reject);\n                });\n            } else {\n                promise._state = true;\n                promise._value = value;\n                propagateAllListeners(promise);\n            }\n            if (shouldExecuteTick) endMicroTickScope();\n        }, handleRejection.bind(null, promise)); // If Function.bind is not supported. Exception is handled in catch below\n    } catch (ex) {\n        handleRejection(promise, ex);\n    }\n}\n\nfunction handleRejection (promise, reason) {\n    rejectingErrors.push(reason);\n    if (promise._state !== null) return;\n    var shouldExecuteTick = promise._lib && beginMicroTickScope();\n    reason = rejectionMapper(reason);\n    promise._state = false;\n    promise._value = reason;\n    debug && reason !== null && typeof reason === 'object' && !reason._promise && tryCatch(()=>{\n        var origProp = getPropertyDescriptor(reason, \"stack\");        \n        reason._promise = promise;    \n        setProp(reason, \"stack\", {\n            get: () =>\n                stack_being_generated ?\n                    origProp && (origProp.get ?\n                                origProp.get.apply(reason) :\n                                origProp.value) :\n                    promise.stack\n        });\n    });\n    // Add the failure to a list of possibly uncaught errors\n    addPossiblyUnhandledError(promise);\n    propagateAllListeners(promise);\n    if (shouldExecuteTick) endMicroTickScope();\n}\n\nfunction propagateAllListeners (promise) {\n    //debug && linkToPreviousPromise(promise);\n    var listeners = promise._listeners;\n    promise._listeners = [];\n    for (var i = 0, len = listeners.length; i < len; ++i) {\n        propagateToListener(promise, listeners[i]);\n    }\n    var psd = promise._PSD;\n    --psd.ref || psd.finalize(); // if psd.ref reaches zero, call psd.finalize();\n    if (numScheduledCalls === 0) {\n        // If numScheduledCalls is 0, it means that our stack is not in a callback of a scheduled call,\n        // and that no deferreds where listening to this rejection or success.\n        // Since there is a risk that our stack can contain application code that may\n        // do stuff after this code is finished that may generate new calls, we cannot\n        // call finalizers here.\n        ++numScheduledCalls;\n        asap(()=>{\n            if (--numScheduledCalls === 0) finalizePhysicalTick(); // Will detect unhandled errors\n        }, []);\n    }\n}\n\nfunction propagateToListener(promise, listener) {\n    if (promise._state === null) {\n        promise._listeners.push(listener);\n        return;\n    }\n\n    var cb = promise._state ? listener.onFulfilled : listener.onRejected;\n    if (cb === null) {\n        // This Listener doesnt have a listener for the event being triggered (onFulfilled or onReject) so lets forward the event to any eventual listeners on the Promise instance returned by then() or catch()\n        return (promise._state ? listener.resolve : listener.reject) (promise._value);\n    }\n    ++listener.psd.ref;\n    ++numScheduledCalls;\n    asap (callListener, [cb, promise, listener]);\n}\n\nfunction callListener (cb, promise, listener) {\n    try {\n        // Set static variable currentFulfiller to the promise that is being fullfilled,\n        // so that we connect the chain of promises (for long stacks support)\n        currentFulfiller = promise;\n        \n        // Call callback and resolve our listener with it's return value.\n        var ret, value = promise._value;\n            \n        if (promise._state) {\n            // cb is onResolved\n            ret = cb (value);\n        } else {\n            // cb is onRejected\n            if (rejectingErrors.length) rejectingErrors = [];\n            ret = cb(value);\n            if (rejectingErrors.indexOf(value) === -1)\n                markErrorAsHandled(promise); // Callback didnt do Promise.reject(err) nor reject(err) onto another promise.\n        }\n        listener.resolve(ret);\n    } catch (e) {\n        // Exception thrown in callback. Reject our listener.\n        listener.reject(e);\n    } finally {\n        // Restore env and currentFulfiller.\n        currentFulfiller = null;\n        if (--numScheduledCalls === 0) finalizePhysicalTick();\n        --listener.psd.ref || listener.psd.finalize();\n    }\n}\n\nfunction getStack (promise, stacks, limit) {\n    if (stacks.length === limit) return stacks;\n    var stack = \"\";\n    if (promise._state === false) {\n        var failure = promise._value,\n            errorName,\n            message;\n        \n        if (failure != null) {\n            errorName = failure.name || \"Error\";\n            message = failure.message || failure;\n            stack = prettyStack(failure, 0);\n        } else {\n            errorName = failure; // If error is undefined or null, show that.\n            message = \"\";\n        }\n        stacks.push(errorName + (message ? \": \" + message : \"\") + stack);\n    }\n    if (debug) {\n        stack = prettyStack(promise._stackHolder, 2);\n        if (stack && stacks.indexOf(stack) === -1) stacks.push(stack);\n        if (promise._prev) getStack(promise._prev, stacks, limit);\n    }\n    return stacks;\n}\n\nfunction linkToPreviousPromise(promise, prev) {\n    // Support long stacks by linking to previous completed promise.\n    var numPrev = prev ? prev._numPrev + 1 : 0;\n    if (numPrev < LONG_STACKS_CLIP_LIMIT) { // Prohibit infinite Promise loops to get an infinite long memory consuming \"tail\".\n        promise._prev = prev;\n        promise._numPrev = numPrev;\n    }\n}\n\n/* The callback to schedule with setImmediate() or setTimeout().\n   It runs a virtual microtick and executes any callback registered in microtickQueue.\n */\nfunction physicalTick() {\n    beginMicroTickScope() && endMicroTickScope();\n}\n\nexport function beginMicroTickScope() {\n    var wasRootExec = isOutsideMicroTick;\n    isOutsideMicroTick = false;\n    needsNewPhysicalTick = false;\n    return wasRootExec;\n}\n\n/* Executes micro-ticks without doing try..catch.\n   This can be possible because we only use this internally and\n   the registered functions are exception-safe (they do try..catch\n   internally before calling any external method). If registering\n   functions in the microtickQueue that are not exception-safe, this\n   would destroy the framework and make it instable. So we don't export\n   our asap method.\n*/\nexport function endMicroTickScope() {\n    var callbacks, i, l;\n    do {\n        while (microtickQueue.length > 0) {\n            callbacks = microtickQueue;\n            microtickQueue = [];\n            l = callbacks.length;\n            for (i = 0; i < l; ++i) {\n                var item = callbacks[i];\n                item[0].apply(null, item[1]);\n            }\n        }\n    } while (microtickQueue.length > 0);\n    isOutsideMicroTick = true;\n    needsNewPhysicalTick = true;\n}\n\nfunction finalizePhysicalTick() {\n    var unhandledErrs = unhandledErrors;\n    unhandledErrors = [];\n    unhandledErrs.forEach(p => {\n        p._PSD.onunhandled.call(null, p._value, p);\n    });\n    var finalizers = tickFinalizers.slice(0); // Clone first because finalizer may remove itself from list.\n    var i = finalizers.length;\n    while (i) finalizers[--i]();    \n}\n\nfunction run_at_end_of_this_or_next_physical_tick (fn) {\n    function finalizer() {\n        fn();\n        tickFinalizers.splice(tickFinalizers.indexOf(finalizer), 1);\n    }\n    tickFinalizers.push(finalizer);\n    ++numScheduledCalls;\n    asap(()=>{\n        if (--numScheduledCalls === 0) finalizePhysicalTick();\n    }, []);\n}\n\nfunction addPossiblyUnhandledError(promise) {\n    // Only add to unhandledErrors if not already there. The first one to add to this list\n    // will be upon the first rejection so that the root cause (first promise in the\n    // rejection chain) is the one listed.\n    if (!unhandledErrors.some(p => p._value === promise._value))\n        unhandledErrors.push(promise);\n}\n\nfunction markErrorAsHandled(promise) {\n    // Called when a reject handled is actually being called.\n    // Search in unhandledErrors for any promise whos _value is this promise_value (list\n    // contains only rejected promises, and only one item per error)\n    var i = unhandledErrors.length;\n    while (i) if (unhandledErrors[--i]._value === promise._value) {\n        // Found a promise that failed with this same error object pointer,\n        // Remove that since there is a listener that actually takes care of it.\n        unhandledErrors.splice(i, 1);\n        return;\n    }\n}\n\nfunction PromiseReject (reason) {\n    return new DexiePromise(INTERNAL, false, reason);\n}\n\nexport function wrap (fn, errorCatcher) {\n    var psd = PSD;\n    return function() {\n        var wasRootExec = beginMicroTickScope(),\n            outerScope = PSD;\n\n        try {\n            switchToZone(psd, true);\n            return fn.apply(this, arguments);\n        } catch (e) {\n            errorCatcher && errorCatcher(e);\n        } finally {\n            switchToZone(outerScope, false);\n            if (wasRootExec) endMicroTickScope();\n        }\n    };\n}\n\n\n//\n// variables used for native await support\n//\nconst task = { awaits: 0, echoes: 0, id: 0}; // The ongoing macro-task when using zone-echoing.\nvar taskCounter = 0; // ID counter for macro tasks.\nvar zoneStack = []; // Stack of left zones to restore asynchronically.\nvar zoneEchoes = 0; // zoneEchoes is a must in order to persist zones between native await expressions.\nvar totalEchoes = 0; // ID counter for micro-tasks. Used to detect possible native await in our Promise.prototype.then.\n\n\nvar zone_id_counter = 0;\nexport function newScope (fn, props, a1, a2) {\n    var parent = PSD,\n        psd = Object.create(parent);\n    psd.parent = parent;\n    psd.ref = 0;\n    psd.global = false;\n    psd.id = ++zone_id_counter;\n    // Prepare for promise patching (done in usePSD):\n    var globalEnv = globalPSD.env;\n    psd.env = patchGlobalPromise ? {\n        Promise: DexiePromise, // Changing window.Promise could be omitted for Chrome and Edge, where IDB+Promise plays well!\n        PromiseProp: {value: DexiePromise, configurable: true, writable: true},\n        all: DexiePromise.all,\n        race: DexiePromise.race,\n        allSettled: DexiePromise.allSettled,\n        any: DexiePromise.any,\n        resolve: DexiePromise.resolve,\n        reject: DexiePromise.reject,\n        nthen: getPatchedPromiseThen (globalEnv.nthen, psd), // native then\n        gthen: getPatchedPromiseThen (globalEnv.gthen, psd) // global then\n    } : {};\n    if (props) extend(psd, props);\n    \n    // unhandleds and onunhandled should not be specifically set here.\n    // Leave them on parent prototype.\n    // unhandleds.push(err) will push to parent's prototype\n    // onunhandled() will call parents onunhandled (with this scope's this-pointer though!)\n    ++parent.ref;\n    psd.finalize = function () {\n        --this.parent.ref || this.parent.finalize();\n    }\n    var rv = usePSD (psd, fn, a1, a2);\n    if (psd.ref === 0) psd.finalize();\n    return rv;\n}\n\n// Function to call if scopeFunc returns NativePromise\n// Also for each NativePromise in the arguments to Promise.all()\nexport function incrementExpectedAwaits() {\n    if (!task.id) task.id = ++taskCounter;\n    ++task.awaits;\n    task.echoes += ZONE_ECHO_LIMIT;\n    return task.id;\n}\n\n// Function to call when 'then' calls back on a native promise where onAwaitExpected() had been called.\n// Also call this when a native await calls then method on a promise. In that case, don't supply\n// sourceTaskId because we already know it refers to current task.\nexport function decrementExpectedAwaits() {\n    if (!task.awaits) return false;\n    if (--task.awaits === 0) task.id = 0;\n    task.echoes = task.awaits * ZONE_ECHO_LIMIT; // Will reset echoes to 0 if awaits is 0.\n    return true;\n}\n\nif ((''+nativePromiseThen).indexOf('[native code]') === -1) {\n    // If the native promise' prototype is patched, we cannot rely on zone echoing.\n    // Disable that here:\n    incrementExpectedAwaits = decrementExpectedAwaits = nop;\n}\n\n// Call from Promise.all() and Promise.race()\nexport function onPossibleParallellAsync (possiblePromise) {\n    if (task.echoes && possiblePromise && possiblePromise.constructor === NativePromise) {\n        incrementExpectedAwaits(); \n        return possiblePromise.then(x => {\n            decrementExpectedAwaits();\n            return x;\n        }, e => {\n            decrementExpectedAwaits();\n            return rejection(e);\n        });\n    }\n    return possiblePromise;\n}\n\nfunction zoneEnterEcho(targetZone) {\n    ++totalEchoes;\n    //console.log(\"Total echoes \", totalEchoes);\n    if (!task.echoes || --task.echoes === 0) {\n        task.echoes = task.id = 0; // Cancel zone echoing.\n    }\n\n    zoneStack.push(PSD);\n    switchToZone(targetZone, true);\n}\n\nfunction zoneLeaveEcho() {\n    var zone = zoneStack[zoneStack.length-1];\n    zoneStack.pop();\n    switchToZone(zone, false);\n}\n\nfunction switchToZone (targetZone, bEnteringZone) {\n    var currentZone = PSD;\n    if (bEnteringZone ? task.echoes && (!zoneEchoes++ || targetZone !== PSD) : zoneEchoes && (!--zoneEchoes || targetZone !== PSD)) {\n        // Enter or leave zone asynchronically as well, so that tasks initiated during current tick\n        // will be surrounded by the zone when they are invoked.\n        enqueueNativeMicroTask(bEnteringZone ? zoneEnterEcho.bind(null, targetZone) : zoneLeaveEcho);\n    }\n    if (targetZone === PSD) return;\n\n    PSD = targetZone; // The actual zone switch occurs at this line.\n\n    // Snapshot on every leave from global zone.\n    if (currentZone === globalPSD) globalPSD.env = snapShot();\n\n    if (patchGlobalPromise) {\n        // Let's patch the global and native Promises (may be same or may be different)\n        var GlobalPromise = globalPSD.env.Promise;\n        // Swich environments (may be PSD-zone or the global zone. Both apply.)\n        var targetEnv = targetZone.env;\n\n        // Change Promise.prototype.then for native and global Promise (they MAY differ on polyfilled environments, but both can be accessed)\n        // Must be done on each zone change because the patched method contains targetZone in its closure.\n        nativePromiseProto.then = targetEnv.nthen;\n        GlobalPromise.prototype.then = targetEnv.gthen;\n\n        if (currentZone.global || targetZone.global) {\n            // Leaving or entering global zone. It's time to patch / restore global Promise.\n\n            // Set this Promise to window.Promise so that transiled async functions will work on Firefox, Safari and IE, as well as with Zonejs and angular.\n            Object.defineProperty(_global, 'Promise', targetEnv.PromiseProp);\n\n            // Support Promise.all() etc to work indexedDB-safe also when people are including es6-promise as a module (they might\n            // not be accessing global.Promise but a local reference to it)\n            GlobalPromise.all = targetEnv.all;\n            GlobalPromise.race = targetEnv.race;\n            GlobalPromise.resolve = targetEnv.resolve;\n            GlobalPromise.reject = targetEnv.reject;\n            if (targetEnv.allSettled) GlobalPromise.allSettled = targetEnv.allSettled;\n            if (targetEnv.any) GlobalPromise.any = targetEnv.any;\n        }\n    }\n}\n\nfunction snapShot () {\n    var GlobalPromise = _global.Promise;\n    return patchGlobalPromise ? {\n        Promise: GlobalPromise,\n        PromiseProp: Object.getOwnPropertyDescriptor(_global, \"Promise\"),\n        all: GlobalPromise.all,\n        race: GlobalPromise.race,\n        allSettled: GlobalPromise.allSettled,\n        any: GlobalPromise.any,\n        resolve: GlobalPromise.resolve,\n        reject: GlobalPromise.reject,\n        nthen: nativePromiseProto.then,\n        gthen: GlobalPromise.prototype.then\n    } : {};\n}\n\nexport function usePSD (psd, fn, a1, a2, a3) {\n    var outerScope = PSD;\n    try {\n        switchToZone(psd, true);\n        return fn(a1, a2, a3);\n    } finally {\n        switchToZone(outerScope, false);\n    }\n}\n\nfunction enqueueNativeMicroTask (job) {\n    //\n    // Precondition: nativePromiseThen !== undefined\n    //\n    nativePromiseThen.call(resolvedNativePromise, job);\n}\n\nfunction nativeAwaitCompatibleWrap(fn, zone, possibleAwait, cleanup) {\n    return typeof fn !== 'function' ? fn : function () {\n        var outerZone = PSD;\n        if (possibleAwait) incrementExpectedAwaits();\n        switchToZone(zone, true);\n        try {\n            return fn.apply(this, arguments);\n        } finally {\n            switchToZone(outerZone, false);\n            if (cleanup) enqueueNativeMicroTask(decrementExpectedAwaits);\n        }\n    };\n}\n\nfunction getPatchedPromiseThen (origThen, zone) {\n    return function (onResolved, onRejected) {\n        return origThen.call(this,\n            nativeAwaitCompatibleWrap(onResolved, zone),\n            nativeAwaitCompatibleWrap(onRejected, zone));\n    };\n}\n\nconst UNHANDLEDREJECTION = \"unhandledrejection\";\n\nfunction globalError(err, promise) {\n    var rv;\n    try {\n        rv = promise.onuncatched(err);\n    } catch (e) {}\n    if (rv !== false) try {\n        var event, eventData = {promise: promise, reason: err};\n        if (_global.document && document.createEvent) {\n            event = document.createEvent('Event');\n            event.initEvent(UNHANDLEDREJECTION, true, true);\n            extend(event, eventData);\n        } else if (_global.CustomEvent) {\n            event = new CustomEvent(UNHANDLEDREJECTION, {detail: eventData});\n            extend(event, eventData);\n        }\n        if (event && _global.dispatchEvent) {\n            dispatchEvent(event);\n            if (!_global.PromiseRejectionEvent && _global.onunhandledrejection)\n                // No native support for PromiseRejectionEvent but user has set window.onunhandledrejection. Manually call it.\n                try {_global.onunhandledrejection(event);} catch (_) {}\n        }\n        if (debug && event && !event.defaultPrevented) {\n            console.warn(`Unhandled rejection: ${err.stack || err}`);\n        }\n    } catch (e) {}\n}\n\nexport var rejection = DexiePromise.reject;\n\nexport {DexiePromise};\n","export function combine(filter1, filter2) {\n  return filter1 ?\n      filter2 ?\n          function () { return filter1.apply(this, arguments) && filter2.apply(this, arguments); } :\n          filter1 :\n      filter2;\n}\n","import { deepClone, delByKeyPath, getByKeyPath } from './utils';\n\nexport function workaroundForUndefinedPrimKey(keyPath: string | ArrayLike<string>) {\n  return function (obj: object) {\n    if (getByKeyPath(obj, keyPath) === undefined) {\n      obj = deepClone(obj);\n      delByKeyPath(obj, keyPath);\n    }\n    return obj;\n  }\n}\n  ","import {keys, isArray, asap} from '../functions/utils';\nimport {nop, mirror, reverseStoppableEventChain} from '../functions/chaining-functions';\nimport {exceptions} from '../errors';\n\nexport default function Events(ctx) {\n    var evs = {};\n    var rv = function (eventName, subscriber) {\n        if (subscriber) {\n            // Subscribe. If additional arguments than just the subscriber was provided, forward them as well.\n            var i = arguments.length, args = new Array(i - 1);\n            while (--i) args[i - 1] = arguments[i];\n            evs[eventName].subscribe.apply(null, args);\n            return ctx;\n        } else if (typeof (eventName) === 'string') {\n            // Return interface allowing to fire or unsubscribe from event\n            return evs[eventName];\n        }\n    };\n    rv.addEventType = add;\n    \n    for (var i = 1, l = arguments.length; i < l; ++i) {\n        add(arguments[i]);\n    }\n    \n    return rv;\n\n    function add(eventName, chainFunction, defaultFunction) {\n        if (typeof eventName === 'object') return addConfiguredEvents(eventName);\n        if (!chainFunction) chainFunction = reverseStoppableEventChain;\n        if (!defaultFunction) defaultFunction = nop;\n\n        var context = {\n            subscribers: [],\n            fire: defaultFunction,\n            subscribe: function (cb) {\n                if (context.subscribers.indexOf(cb) === -1) {\n                    context.subscribers.push(cb);\n                    context.fire = chainFunction(context.fire, cb);\n                }\n            },\n            unsubscribe: function (cb) {\n                context.subscribers = context.subscribers.filter(function (fn) { return fn !== cb; });\n                context.fire = context.subscribers.reduce(chainFunction, defaultFunction);\n            }\n        };\n        evs[eventName] = rv[eventName] = context;\n        return context;\n    }\n\n    function addConfiguredEvents(cfg) {\n        // events(this, {reading: [functionChain, nop]});\n        keys(cfg).forEach(function (eventName) {\n            var args = cfg[eventName];\n            if (isArray(args)) {\n                add(eventName, cfg[eventName][0], cfg[eventName][1]);\n            } else if (args === 'asap') {\n                // Rather than approaching event subscription using a functional approach, we here do it in a for-loop where subscriber is executed in its own stack\n                // enabling that any exception that occur wont disturb the initiator and also not nescessary be catched and forgotten.\n                var context = add(eventName, mirror, function fire() {\n                    // Optimazation-safe cloning of arguments into args.\n                    var i = arguments.length, args = new Array(i);\n                    while (i--) args[i] = arguments[i];\n                    // All each subscriber:\n                    context.subscribers.forEach(function (fn) {\n                        asap(function fireEvent() {\n                            fn.apply(null, args);\n                        });\n                    });\n                });\n            } else throw new exceptions.InvalidArgument(\"Invalid event config\");\n        });\n    }\n}\n","import { arrayToObject, derive } from './utils';\n\n\nexport function makeClassConstructor<TConstructor> (prototype: Object, constructor: Function) {\n  /*const propertyDescriptorMap = arrayToObject(\n    Object.getOwnPropertyNames(prototype),\n    propKey => [propKey, Object.getOwnPropertyDescriptor(prototype, propKey)]);\n\n  // Both derive and clone the prototype.\n  //   derive: So that x instanceof T returns true when T is the class template.\n  //   clone: Optimizes method access a bit (but actually not nescessary)\n  const derivedPrototypeClone = Object.create(prototype, propertyDescriptorMap);\n  derivedPrototypeClone.constructor = constructor;\n  constructor.prototype = derivedPrototypeClone;\n  return constructor as any as TConstructor;*/\n\n  // Keep the above code in case we want to clone AND derive the parent prototype.\n  // Reason would be optimization of property access.\n  // The code below will only create a prototypal inheritance from given constructor function\n  // to given prototype.\n  derive(constructor).from({prototype});\n  return constructor as any as TConstructor;  \n}\n","import { combine } from \"../../functions/combine\";\nimport { exceptions } from \"../../errors\";\nimport { hasOwn } from \"../../functions/utils\";\nimport { wrap } from \"../../helpers/promise\";\nimport { Collection } from './';\nimport { DBCoreCursor, DBCoreTable, DBCoreTransaction, DBCoreTableSchema, DBCoreRangeType } from '../../public/types/dbcore';\nimport { nop } from '../../functions/chaining-functions';\n\ntype CollectionContext = Collection[\"_ctx\"];\n\nexport function isPlainKeyRange (ctx: CollectionContext, ignoreLimitFilter?: boolean) {\n  return !(ctx.filter || ctx.algorithm || ctx.or) &&\n      (ignoreLimitFilter ? ctx.justLimit : !ctx.replayFilter);\n}    \n\nexport function addFilter(ctx: CollectionContext, fn: Function) {\n  ctx.filter = combine(ctx.filter, fn);\n}\n\nexport function addReplayFilter (ctx: CollectionContext, factory, isLimitFilter?) {\n  var curr = ctx.replayFilter;\n  ctx.replayFilter = curr ? ()=>combine(curr(), factory()) : factory;\n  ctx.justLimit = isLimitFilter && !curr;\n}\n\nexport function addMatchFilter(ctx: CollectionContext, fn) {\n  ctx.isMatch = combine(ctx.isMatch, fn);\n}\n\nexport function getIndexOrStore(ctx: CollectionContext, coreSchema: DBCoreTableSchema) {\n  // TODO: Rewrite this. No need to know ctx.isPrimKey. ctx.index should hold the keypath.\n  // Still, throw if not found!\n  if (ctx.isPrimKey) return coreSchema.primaryKey;\n  const index = coreSchema.getIndexByKeyPath(ctx.index);\n  if (!index) throw new exceptions.Schema(\"KeyPath \" + ctx.index + \" on object store \" + coreSchema.name + \" is not indexed\");\n  return index;\n}\n\nexport function openCursor(ctx: CollectionContext, coreTable: DBCoreTable, trans: DBCoreTransaction) {\n  const index = getIndexOrStore(ctx, coreTable.schema);\n  return coreTable.openCursor({\n    trans,\n    values: !ctx.keysOnly,\n    reverse: ctx.dir === 'prev',\n    unique: !!ctx.unique,\n    query: {\n      index, \n      range: ctx.range\n    }\n  });\n}\n\nexport function iter (\n  ctx: CollectionContext, \n  fn: (item, cursor: DBCoreCursor, advance: Function)=>void,\n  coreTrans: DBCoreTransaction,\n  coreTable: DBCoreTable): Promise<any>\n{\n  const filter = ctx.replayFilter ? combine(ctx.filter, ctx.replayFilter()) : ctx.filter;\n  if (!ctx.or) {\n      return iterate(\n        openCursor(ctx, coreTable, coreTrans),\n        combine(ctx.algorithm, filter), fn, !ctx.keysOnly && ctx.valueMapper);\n  } else {\n      const set = {};\n\n      const union = (item: any, cursor: DBCoreCursor, advance) => {\n          if (!filter || filter(cursor, advance, result=>cursor.stop(result), err => cursor.fail(err))) {\n              var primaryKey = cursor.primaryKey;\n              var key = '' + primaryKey;\n              if (key === '[object ArrayBuffer]') key = '' + new Uint8Array(primaryKey);\n              if (!hasOwn(set, key)) {\n                  set[key] = true;\n                  fn(item, cursor, advance);\n              }\n          }\n      }\n\n      return Promise.all([\n        ctx.or._iterate(union, coreTrans),\n        iterate(openCursor(ctx, coreTable, coreTrans), ctx.algorithm, union, !ctx.keysOnly && ctx.valueMapper)\n      ]);\n  }\n}\n\nfunction iterate(cursorPromise: Promise<DBCoreCursor>, filter, fn, valueMapper): Promise<any> {\n  \n  // Apply valueMapper (hook('reading') or mappped class)\n  var mappedFn = valueMapper ? (x,c,a) => fn(valueMapper(x),c,a) : fn;\n  // Wrap fn with PSD and microtick stuff from Promise.\n  var wrappedFn = wrap(mappedFn);\n  \n  return cursorPromise.then(cursor => {\n    if (cursor) {\n      return cursor.start(()=>{\n        var c = ()=>cursor.continue();\n        if (!filter || filter(cursor, advancer => c = advancer, val=>{cursor.stop(val);c=nop}, e => {cursor.fail(e);c = nop;}))\n          wrappedFn(cursor.value, cursor, advancer => c = advancer);\n        c();\n      });\n    }\n  });\n}\n","import { IndexableType } from '../public/types/indexable-type';\n\nexport function simpleCompare(a, b) {\n  return a < b ? -1 : a === b ? 0 : 1;\n}\n\nexport function simpleCompareReverse(a, b) {\n  return a > b ? -1 : a === b ? 0 : 1;\n}\n","import { WhereClause } from './where-clause';\nimport { Collection } from '../collection';\nimport { STRING_EXPECTED } from '../../globals/constants';\nimport { simpleCompare, simpleCompareReverse } from '../../functions/compare-functions';\nimport { IndexableType } from '../../public';\nimport { DBCoreKeyRange, DBCoreRangeType } from '../../public/types/dbcore';\n\nexport function fail(collectionOrWhereClause: Collection | WhereClause, err, T?) {\n  var collection = collectionOrWhereClause instanceof WhereClause ?\n      new collectionOrWhereClause.Collection (collectionOrWhereClause) :\n      collectionOrWhereClause;\n      \n  collection._ctx.error = T ? new T(err) : new TypeError(err);\n  return collection;\n}\n\nexport function emptyCollection(whereClause: WhereClause) {\n  return new whereClause.Collection (whereClause, () => rangeEqual(\"\")).limit(0);\n}\n\nexport function upperFactory(dir: 'next' | 'prev') {\n  return dir === \"next\" ?\n    (s: string) => s.toUpperCase() :\n    (s: string) => s.toLowerCase();\n}\n\nexport function lowerFactory(dir: 'next' | 'prev') {\n  return dir === \"next\" ?\n    (s: string) => s.toLowerCase() :\n    (s: string) => s.toUpperCase();\n}\n\nexport function nextCasing(key, lowerKey, upperNeedle, lowerNeedle, cmp, dir) {\n  var length = Math.min(key.length, lowerNeedle.length);\n  var llp = -1;\n  for (var i = 0; i < length; ++i) {\n      var lwrKeyChar = lowerKey[i];\n      if (lwrKeyChar !== lowerNeedle[i]) {\n          if (cmp(key[i], upperNeedle[i]) < 0) return key.substr(0, i) + upperNeedle[i] + upperNeedle.substr(i + 1);\n          if (cmp(key[i], lowerNeedle[i]) < 0) return key.substr(0, i) + lowerNeedle[i] + upperNeedle.substr(i + 1);\n          if (llp >= 0) return key.substr(0, llp) + lowerKey[llp] + upperNeedle.substr(llp + 1);\n          return null;\n      }\n      if (cmp(key[i], lwrKeyChar) < 0) llp = i;\n  }\n  if (length < lowerNeedle.length && dir === \"next\") return key + upperNeedle.substr(key.length);\n  if (length < key.length && dir === \"prev\") return key.substr(0, upperNeedle.length);\n  return (llp < 0 ? null : key.substr(0, llp) + lowerNeedle[llp] + upperNeedle.substr(llp + 1));\n}\n\nexport function addIgnoreCaseAlgorithm(whereClause: WhereClause, match, needles, suffix) {\n  /// <param name=\"needles\" type=\"Array\" elementType=\"String\"></param>\n  var upper, lower, compare, upperNeedles, lowerNeedles, direction, nextKeySuffix,\n      needlesLen = needles.length;\n  if (!needles.every(s => typeof s === 'string')) {\n      return fail(whereClause, STRING_EXPECTED);\n  }\n  function initDirection(dir) {\n      upper = upperFactory(dir);\n      lower = lowerFactory(dir);\n      compare = (dir === \"next\" ? simpleCompare : simpleCompareReverse);\n      var needleBounds = needles.map(function (needle){\n          return {lower: lower(needle), upper: upper(needle)};\n      }).sort(function(a,b) {\n          return compare(a.lower, b.lower);\n      });\n      upperNeedles = needleBounds.map(function (nb){ return nb.upper; });\n      lowerNeedles = needleBounds.map(function (nb){ return nb.lower; });\n      direction = dir;\n      nextKeySuffix = (dir === \"next\" ? \"\" : suffix);\n  }\n  initDirection(\"next\");\n\n  var c = new whereClause.Collection (\n      whereClause,\n      ()=>createRange(upperNeedles[0], lowerNeedles[needlesLen-1] + suffix)\n  );\n\n  c._ondirectionchange = function (direction) {\n      // This event onlys occur before filter is called the first time.\n      initDirection(direction);\n  };\n\n  var firstPossibleNeedle = 0;\n\n  c._addAlgorithm(function (cursor, advance, resolve) {\n      /// <param name=\"cursor\" type=\"IDBCursor\"></param>\n      /// <param name=\"advance\" type=\"Function\"></param>\n      /// <param name=\"resolve\" type=\"Function\"></param>\n      var key = cursor.key;\n      if (typeof key !== 'string') return false;\n      var lowerKey = lower(key);\n      if (match(lowerKey, lowerNeedles, firstPossibleNeedle)) {\n          return true;\n      } else {\n          var lowestPossibleCasing = null;\n          for (var i=firstPossibleNeedle; i<needlesLen; ++i) {\n              var casing = nextCasing(key, lowerKey, upperNeedles[i], lowerNeedles[i], compare, direction);\n              if (casing === null && lowestPossibleCasing === null)\n                  firstPossibleNeedle = i + 1;\n              else if (lowestPossibleCasing === null || compare(lowestPossibleCasing, casing) > 0) {\n                  lowestPossibleCasing = casing;\n              }\n          }\n          if (lowestPossibleCasing !== null) {\n              advance(function () { cursor.continue(lowestPossibleCasing + nextKeySuffix); });\n          } else {\n              advance(resolve);\n          }\n          return false;\n      }\n  });\n  return c;\n}\n\nexport function createRange (lower: IndexableType, upper: IndexableType, lowerOpen?: boolean, upperOpen?: boolean): DBCoreKeyRange {\n    return {\n        type: DBCoreRangeType.Range,\n        lower,\n        upper,\n        lowerOpen,\n        upperOpen\n    };\n}\n\nexport function rangeEqual (value: IndexableType) : DBCoreKeyRange {\n    return {\n        type: DBCoreRangeType.Equal,\n        lower: value,\n        upper: value\n    };\n}\n","import { Dexie } from \"../classes/dexie\";\n\nexport const DEXIE_VERSION = '{version}'; // Replaced by build-script.\nexport const maxString = String.fromCharCode(65535);\nexport const minKey = -Infinity; // minKey can be constant. maxKey must be a prop of Dexie (_maxKey)\nexport const INVALID_KEY_ARGUMENT =\n  \"Invalid key provided. Keys must be of type string, number, Date or Array<string | number | Date>.\";\nexport const STRING_EXPECTED = \"String expected.\";\nexport const connections: Dexie[] = [];\nexport const isIEOrEdge =\n  typeof navigator !== 'undefined' && /(MSIE|Trident|Edge)/.test(navigator.userAgent);\nexport const hasIEDeleteObjectStoreBug = isIEOrEdge;\nexport const hangsOnDeleteLargeKeyRange = isIEOrEdge;\nexport const dexieStackFrameFilter = frame => !/(dexie\\.js|dexie\\.min\\.js)/.test(frame);\nexport const DBNAMES_DB = '__dbnames';\nexport const READONLY = 'readonly';\nexport const READWRITE = 'readwrite';\n","import { maxString } from '../globals/constants';\n\nexport function safariMultiStoreFix(storeNames: string[]) {\n  return storeNames.length === 1 ? storeNames[0] : storeNames;\n}\n\nexport function getNativeGetDatabaseNamesFn(indexedDB) {\n  var fn = indexedDB && (indexedDB.getDatabaseNames || indexedDB.webkitGetDatabaseNames);\n  return fn && fn.bind(indexedDB);\n}\n\nexport function getMaxKey (IdbKeyRange: typeof IDBKeyRange) {\n  try {\n    IdbKeyRange.only([[]]);\n    return [[]];\n  } catch (e) {\n    return maxString;\n  }\n}\n","import { wrap } from \"../helpers/promise\";\n\nexport function eventRejectHandler(reject) {\n  return wrap(function (event) {\n      preventDefault(event);\n      reject (event.target.error);\n      return false;\n  });\n}\n\nexport function eventSuccessHandler (resolve) {\n  return wrap(function (event){\n      resolve(event.target.result);\n  });\n}\n\nexport function hookedEventRejectHandler (reject) {\n  return wrap(function (event) {\n      // See comment on hookedEventSuccessHandler() why wrap() is needed only when supporting hooks.\n      \n      var req = event.target,\n          err = req.error,\n          ctx = req._hookCtx,// Contains the hook error handler. Put here instead of closure to boost performance.\n          hookErrorHandler = ctx && ctx.onerror;\n      hookErrorHandler && hookErrorHandler(err);\n      preventDefault(event);\n      reject (err);\n      return false;\n  });\n}\n\nexport function hookedEventSuccessHandler(resolve) {\n  // wrap() is needed when calling hooks because the rare scenario of:\n  //  * hook does a db operation that fails immediately (IDB throws exception)\n  //    For calling db operations on correct transaction, wrap makes sure to set PSD correctly.\n  //    wrap() will also execute in a virtual tick.\n  //  * If not wrapped in a virtual tick, direct exception will launch a new physical tick.\n  //  * If this was the last event in the bulk, the promise will resolve after a physical tick\n  //    and the transaction will have committed already.\n  // If no hook, the virtual tick will be executed in the reject()/resolve of the final promise,\n  // because it is always marked with _lib = true when created using Transaction._promise().\n  return wrap(function(event) {\n      var req = event.target,\n          ctx = req._hookCtx,// Contains the hook error handler. Put here instead of closure to boost performance.\n          result = ctx.value || req.result, // Pass the object value on updates. The result from IDB is the primary key.\n          hookSuccessHandler = ctx && ctx.onsuccess;\n      hookSuccessHandler && hookSuccessHandler(result);\n      resolve && resolve(result);\n  }, resolve);\n}\n\n\nexport function preventDefault(event) {\n  if (event.stopPropagation) // IndexedDBShim doesnt support this on Safari 8 and below.\n      event.stopPropagation();\n  if (event.preventDefault) // IndexedDBShim doesnt support this on Safari 8 and below.\n      event.preventDefault();\n}\n\nexport function BulkErrorHandlerCatchAll(errorList, done?, supportHooks?) {\n  return (supportHooks ? hookedEventRejectHandler : eventRejectHandler)(e => {\n      errorList.push(e);\n      done && done();\n  });\n}\n\n","import { IndexSpec } from '../public/types/index-spec';\n\nexport function createIndexSpec(\n  name: string,\n  keyPath: string | string[],\n  unique: boolean,\n  multi: boolean,\n  auto: boolean,\n  compound: boolean,\n  isPrimKey: boolean\n): IndexSpec {\n  return {\n    name,\n    keyPath,\n    unique,\n    multi,\n    auto,\n    compound,\n    src: (unique && !isPrimKey ? '&' : '') + (multi ? '*' : '') + (auto ? \"++\" : \"\") + nameFromKeyPath(keyPath)\n  }\n}\n\nexport function nameFromKeyPath (keyPath?: string | string[]): string {\n  return typeof keyPath === 'string' ?\n    keyPath :\n    keyPath ? ('[' + [].join.call(keyPath, '+') + ']') : \"\";\n}\n","import { IndexSpec } from '../public/types/index-spec';\nimport { TableSchema } from '../public/types/table-schema';\nimport { createIndexSpec } from './index-spec';\nimport { arrayToObject } from '../functions/utils';\n\nexport function createTableSchema (\n  name: string,\n  primKey: IndexSpec,\n  indexes: IndexSpec[]\n): TableSchema {\n  return {\n    name,\n    primKey,\n    indexes,\n    mappedClass: null,\n    idxByName: arrayToObject(indexes, index => [index.name, index])\n  };\n}\n","import { getByKeyPath } from '../functions/utils';\n\nexport function getKeyExtractor (keyPath: null | string | string[]) : (a: any) => any {\n  if (keyPath == null) {\n    return () => undefined;\n  } else if (typeof keyPath === 'string') {\n    return getSinglePathKeyExtractor(keyPath);\n  } else {\n    return obj => getByKeyPath(obj, keyPath);\n  }\n}\n\nexport function getSinglePathKeyExtractor(keyPath: string) {\n  const split = keyPath.split('.');\n  if (split.length === 1) {\n    return obj => obj[keyPath];\n  } else {\n    return obj => getByKeyPath(obj, keyPath);\n  }\n}\n","import {\n  DBCoreAddRequest,\n  DBCorePutRequest,\n  DBCoreDeleteRequest,\n  DBCoreIndex,\n  DBCoreTable,\n} from \"../public/types/dbcore\";\n\nexport function getEffectiveKeys (\n  primaryKey: DBCoreIndex,\n  req: (Pick<DBCoreAddRequest | DBCorePutRequest, \"type\" | \"values\"> & {keys?: any[]}) | Pick<DBCoreDeleteRequest, \"keys\" | \"type\">)\n{\n  //const {outbound} = primaryKey;\n  if (req.type === 'delete') return req.keys;\n  return req.keys || req.values.map(primaryKey.extractKey)\n}\n\nexport function getExistingValues (table: DBCoreTable, req: DBCoreAddRequest | DBCorePutRequest | DBCoreDeleteRequest, effectiveKeys: any[]) {\n  return req.type === 'add' ? Promise.resolve(new Array<any>(req.values.length)) :\n    table.getMany({trans: req.trans, keys: effectiveKeys});\n}\n","import {\n  DBCore,\n  DBCoreCursor,\n  DBCoreOpenCursorRequest,\n  DBCoreQueryRequest,\n  DBCoreIndex,\n  DBCoreKeyRange,\n  DBCoreQueryResponse,\n  DBCoreRangeType,\n  DBCoreSchema,\n  DBCoreTableSchema,\n  DBCoreTable,\n  DBCoreMutateResponse,\n} from \"../public/types/dbcore\";\nimport { isArray } from '../functions/utils';\nimport { eventRejectHandler, preventDefault } from '../functions/event-wrappers';\nimport { wrap } from '../helpers/promise';\nimport { getMaxKey } from '../functions/quirks';\nimport { getKeyExtractor } from './get-key-extractor';\nimport { getEffectiveKeys } from './get-effective-keys';\n\nexport function arrayify<T>(arrayLike: {length: number, [index: number]: T}): T[] {\n  return [].slice.call(arrayLike);\n}\nexport function pick<T,Prop extends keyof T>(obj: T, props: Prop[]): Pick<T, Prop> {\n  const result = {} as Pick<T, Prop>;\n  props.forEach(prop => result[prop] = obj[prop]);\n  return result;\n}\n\nlet _id_counter = 0;\n\nexport function getKeyPathAlias(keyPath: null | string | string[]) {\n  return keyPath == null ?\n    \":id\" :\n    typeof keyPath === 'string' ?\n      keyPath :\n      `[${keyPath.join('+')}]`;\n}\n\nexport function createDBCore (\n  db: IDBDatabase,\n  indexedDB: IDBFactory,\n  IdbKeyRange: typeof IDBKeyRange,\n  tmpTrans: IDBTransaction) : DBCore\n{\n  const cmp = indexedDB.cmp.bind(indexedDB);\n  \n  function extractSchema(db: IDBDatabase, trans: IDBTransaction) : {schema: DBCoreSchema, hasGetAll: boolean} {\n    const tables = arrayify(db.objectStoreNames);\n    return {\n      schema: {\n        name: db.name,\n        tables: tables.map(table => trans.objectStore(table)).map(store => {\n          const {keyPath, autoIncrement} = store;\n          const compound = isArray(keyPath);\n          const outbound = keyPath == null;\n          const indexByKeyPath: {[keyPathAlias: string]: DBCoreIndex} = {};\n          const result = {\n            name: store.name,\n            primaryKey: {\n              name: null,\n              isPrimaryKey: true,\n              outbound,\n              compound,\n              keyPath,\n              autoIncrement,\n              unique: true,\n              extractKey: getKeyExtractor(keyPath)\n            } as DBCoreIndex,\n            indexes: arrayify(store.indexNames).map(indexName => store.index(indexName))\n              .map(index => {\n                const {name, unique, multiEntry, keyPath} = index;\n                const compound = isArray(keyPath);\n                const result: DBCoreIndex = {\n                  name,\n                  compound,\n                  keyPath,\n                  unique,\n                  multiEntry,\n                  extractKey: getKeyExtractor(keyPath)\n                };\n                indexByKeyPath[getKeyPathAlias(keyPath)] = result;\n                return result;\n              }),\n            getIndexByKeyPath: (keyPath: null | string | string[]) => indexByKeyPath[getKeyPathAlias(keyPath)]\n          };\n          indexByKeyPath[\":id\"] = result.primaryKey;\n          if (keyPath != null) {\n            indexByKeyPath[getKeyPathAlias(keyPath)] = result.primaryKey;\n          }\n          return result;\n        })\n      },\n      hasGetAll: tables.length > 0 && ('getAll' in trans.objectStore(tables[0])) &&\n        !(typeof navigator !== 'undefined' && /Safari/.test(navigator.userAgent) &&\n        !/(Chrome\\/|Edge\\/)/.test(navigator.userAgent) &&\n        [].concat(navigator.userAgent.match(/Safari\\/(\\d*)/))[1] < 604) // Bug with getAll() on Safari ver<604. See discussion following PR #579\n    };\n  }\n\n  function makeIDBKeyRange (range: DBCoreKeyRange) : IDBKeyRange | null {\n    if (range.type === DBCoreRangeType.Any) return null;\n    if (range.type === DBCoreRangeType.Never) throw new Error(\"Cannot convert never type to IDBKeyRange\");\n    const {lower, upper, lowerOpen, upperOpen} = range;\n    const idbRange = lower === undefined ?\n      upper === undefined ?\n        null : //IDBKeyRange.lowerBound(-Infinity, false) : // Any range (TODO: Should we return null instead?)\n        IdbKeyRange.upperBound(upper, !!upperOpen) : // below\n      upper === undefined ?\n        IdbKeyRange.lowerBound(lower, !!lowerOpen) : // above\n        IdbKeyRange.bound(lower, upper, !!lowerOpen, !!upperOpen);\n    return idbRange;\n  }\n\n  function createDbCoreTable(tableSchema: DBCoreTableSchema): DBCoreTable {\n    const tableName = tableSchema.name;\n\n    function mutate ({trans, type, keys, values, range, wantResults}) {\n      return new Promise<DBCoreMutateResponse>((resolve, reject) => {\n        resolve = wrap(resolve);\n        const store = (trans as IDBTransaction).objectStore(tableName);\n        const outbound = store.keyPath == null;\n        const isAddOrPut = type === \"put\" || type === \"add\";\n        if (!isAddOrPut && type !== 'delete' && type !== 'deleteRange')\n          throw new Error (\"Invalid operation type: \" + type);\n\n        const {length} = keys || values || {length: 1}; // keys.length if keys. values.length if values. 1 if range.\n        if (keys && values && keys.length !== values.length) {\n          throw new Error(\"Given keys array must have same length as given values array.\");\n        }\n        if (length === 0)\n          // No items to write. Don't even bother!\n          return resolve({numFailures: 0, failures: {}, results: [], lastResult: undefined});\n\n        const results = wantResults && [...(keys ?\n          keys : // keys already resolved in an earlier middleware. Don't re-resolve them.\n          getEffectiveKeys(tableSchema.primaryKey, {type, keys, values}))];\n          \n        let req: IDBRequest & { _reqno?};\n        const failures: {[operationNumber: number]: Error} = [];\n        let numFailures = 0;\n        const errorHandler = \n          event => {\n            ++numFailures;\n            preventDefault(event);\n            if (results) results[(event.target as any)._reqno] = undefined;\n            failures[(event.target as any)._reqno] = event.target.error;\n          };\n        const setResult = ({target}) => {\n          results[target._reqno] = target.result;\n        }\n  \n        if (type === 'deleteRange') {\n          // Here the argument is the range\n          if (range.type === DBCoreRangeType.Never)\n            return resolve({numFailures, failures, results, lastResult: undefined}); // Deleting the Never range shoulnt do anything.\n          if (range.type === DBCoreRangeType.Any)\n            req = store.clear(); // Deleting the Any range is equivalent to store.clear()\n          else\n            req = store.delete(makeIDBKeyRange(range));\n        } else {\n          // No matter add, put or delete - find out arrays of first and second arguments to it.\n          const [args1, args2] = isAddOrPut ?\n            outbound ?\n              [values, keys] :\n              [values, null] :\n            [keys, null];\n\n          if (isAddOrPut) {\n            for (let i=0; i<length; ++i) {\n              req = (args2 && args2[i] !== undefined ?\n                store[type](args1[i], args2[i]) :\n                store[type](args1[i])) as IDBRequest;\n              req._reqno = i;\n              if (results && results[i] === undefined) {\n                // Key is not set explicitely and is autoIncremented.\n                // Have to listen for onsuccess and set the resulting key.\n                req.onsuccess = setResult;\n              }\n              req.onerror = errorHandler;\n            }\n          } else {\n            for (let i=0; i<length; ++i) {\n              req = store[type](args1[i]) as IDBRequest;\n              req._reqno = i;\n              req.onerror = errorHandler;\n            }\n          }\n        }\n        const done = event => {\n          const lastResult = event.target.result;\n          if (results) results[length-1] = lastResult;\n          resolve({\n            numFailures,\n            failures,\n            results,\n            lastResult\n          });\n        };\n  \n        req.onerror = event => { // wrap() not needed. All paths calling outside will wrap!\n          errorHandler(event);\n          done(event);\n        };\n  \n        req.onsuccess = done;\n      });\n    }\n    \n    function openCursor ({trans, values, query, reverse, unique}: DBCoreOpenCursorRequest): Promise<DBCoreCursor>\n    {\n      return new Promise((resolve, reject) => {\n        resolve = wrap(resolve);\n        const {index, range} = query;\n        const store = (trans as IDBTransaction).objectStore(tableName);\n        // source\n        const source = index.isPrimaryKey ?\n          store :\n          store.index(index.name);\n        // direction\n        const direction = reverse ?\n          unique ?\n            \"prevunique\" :\n            \"prev\" :\n          unique ?\n            \"nextunique\" :\n            \"next\";\n        // request\n        const req = values || !('openKeyCursor' in source) ?\n          source.openCursor(makeIDBKeyRange(range), direction) :\n          source.openKeyCursor(makeIDBKeyRange(range), direction);\n          \n        // iteration\n        req.onerror = eventRejectHandler(reject);\n        req.onsuccess = wrap(ev => {\n\n          const cursor = req.result as unknown as DBCoreCursor;\n          if (!cursor) {\n            resolve(null);\n            return;\n          }\n          (cursor as any).___id = ++_id_counter;\n          (cursor as any).done = false;\n          const _cursorContinue = cursor.continue.bind(cursor);\n          let _cursorContinuePrimaryKey = cursor.continuePrimaryKey;\n          if (_cursorContinuePrimaryKey) _cursorContinuePrimaryKey = _cursorContinuePrimaryKey.bind(cursor);\n          const _cursorAdvance = cursor.advance.bind(cursor);\n          const doThrowCursorIsNotStarted = ()=>{throw new Error(\"Cursor not started\");}\n          const doThrowCursorIsStopped = ()=>{throw new Error(\"Cursor not stopped\");}\n          (cursor as any).trans = trans;\n          cursor.stop = cursor.continue = cursor.continuePrimaryKey = cursor.advance = doThrowCursorIsNotStarted;\n          cursor.fail = wrap(reject);\n          cursor.next = function (this: DBCoreCursor) {\n            // next() must work with \"this\" pointer in order to function correctly for ProxyCursors (derived objects)\n            // without having to re-define next() on each child.\n            let gotOne = 1;\n            return this.start(() => gotOne-- ? this.continue() : this.stop()).then(() => this);\n          };\n          cursor.start = (callback) => {\n            //console.log(\"Starting cursor\", (cursor as any).___id);\n            const iterationPromise = new Promise<void>((resolveIteration, rejectIteration) =>{\n              resolveIteration = wrap(resolveIteration);\n              req.onerror = eventRejectHandler(rejectIteration);\n              cursor.fail = rejectIteration;\n              cursor.stop = value => {\n                //console.log(\"Cursor stop\", cursor);\n                cursor.stop = cursor.continue = cursor.continuePrimaryKey = cursor.advance = doThrowCursorIsStopped;\n                resolveIteration(value);\n              };\n            });\n            // Now change req.onsuccess to a callback that doesn't call initCursor but just observer.next()\n            const guardedCallback = () => {\n              if (req.result) {\n                //console.log(\"Next result\", cursor);\n                try {\n                  callback();\n                } catch (err) {\n                  cursor.fail(err);\n                }\n              } else {\n                (cursor as any).done = true;\n                cursor.start = ()=>{throw new Error(\"Cursor behind last entry\");}\n                cursor.stop();\n              }\n            }\n            req.onsuccess = wrap(ev => {\n              //cursor.continue = _cursorContinue;\n              //cursor.continuePrimaryKey = _cursorContinuePrimaryKey;\n              //cursor.advance = _cursorAdvance;\n              req.onsuccess = guardedCallback;\n              guardedCallback();\n            });\n            cursor.continue = _cursorContinue;\n            cursor.continuePrimaryKey = _cursorContinuePrimaryKey;\n            cursor.advance = _cursorAdvance;\n            guardedCallback();\n            return iterationPromise;\n          };\n          resolve(cursor);\n        }, reject); \n      });\n    }\n  \n    function query (hasGetAll: boolean) {\n      return (request: DBCoreQueryRequest) => {\n        return new Promise<DBCoreQueryResponse>((resolve, reject) => {\n          resolve = wrap(resolve);\n          const {trans, values, limit, query} = request;\n          const nonInfinitLimit = limit === Infinity ? undefined : limit;\n          const {index, range} = query;\n          const store = (trans as IDBTransaction).objectStore(tableName);\n          const source = index.isPrimaryKey ? store : store.index(index.name);\n          const idbKeyRange = makeIDBKeyRange(range);\n          if (limit === 0) return resolve({result: []});\n          if (hasGetAll) {\n            const req = values ?\n                (source as any).getAll(idbKeyRange, nonInfinitLimit) :\n                (source as any).getAllKeys(idbKeyRange, nonInfinitLimit);\n            req.onsuccess = event => resolve({result: event.target.result});\n            req.onerror = eventRejectHandler(reject);\n          } else {\n            let count = 0;\n            const req = values || !('openKeyCursor' in source) ?\n              source.openCursor(idbKeyRange) :\n              source.openKeyCursor(idbKeyRange)\n            const result = [];\n            req.onsuccess = event => {\n              const cursor = req.result as IDBCursorWithValue;\n              if (!cursor) return resolve({result});\n              result.push(values ? cursor.value : cursor.primaryKey);\n              if (++count === limit) return resolve({result});\n              cursor.continue();\n            };\n            req.onerror = eventRejectHandler(reject);\n          }\n        });\n      };\n    }\n  \n    return {\n      name: tableName,\n      schema: tableSchema,\n      \n      mutate,\n\n      getMany ({trans, keys}) {\n        return new Promise<any[]>((resolve, reject) => {\n          resolve = wrap(resolve);\n          const store = (trans as IDBTransaction).objectStore(tableName);\n          const length = keys.length;\n          const result = new Array(length);\n          let keyCount = 0;\n          let callbackCount = 0;\n          let valueCount = 0;\n          let req: IDBRequest & {_pos?: number};\n    \n          const successHandler = event => {\n            const req = event.target;\n            if ((result[req._pos] = req.result) != null) ++valueCount;\n            if (++callbackCount === keyCount) resolve(result);\n          };\n          const errorHandler = eventRejectHandler(reject);\n    \n          for (let i=0; i<length; ++i) {\n            const key = keys[i];\n            if (key != null) {\n              req = store.get(keys[i]);\n              req._pos = i;\n              req.onsuccess = successHandler;\n              req.onerror = errorHandler;\n              ++keyCount;\n            }\n          }\n          if (keyCount === 0) resolve(result);\n        });\n      },\n\n      get ({trans, key}) {\n        return new Promise<any>((resolve, reject) => {\n          resolve = wrap (resolve);\n          const store = (trans as IDBTransaction).objectStore(tableName);\n          const req = store.get(key);\n          req.onsuccess = event => resolve((event.target as any).result);\n          req.onerror = eventRejectHandler(reject);\n        });\n      },\n\n      query: query(hasGetAll),\n      \n      openCursor,\n\n      count ({query, trans}) {\n        const {index, range} = query;\n        return new Promise<number>((resolve, reject) => {\n          const store = (trans as IDBTransaction).objectStore(tableName);\n          const source = index.isPrimaryKey ? store : store.index(index.name);\n          const idbKeyRange = makeIDBKeyRange(range);\n          const req = idbKeyRange ? source.count(idbKeyRange) : source.count();\n          req.onsuccess = wrap(ev => resolve((ev.target as IDBRequest).result));\n          req.onerror = eventRejectHandler(reject);\n        });\n      }\n    };\n  }\n\n  const {schema, hasGetAll} = extractSchema(db, tmpTrans);\n  const tables = schema.tables.map(tableSchema => createDbCoreTable(tableSchema));\n  const tableMap: {[name: string]: DBCoreTable} = {};\n  tables.forEach(table => tableMap[table.name] = table);\n  return {\n    stack: \"dbcore\",\n    \n    transaction: db.transaction.bind(db),\n\n    table(name: string) {\n      const result = tableMap[name];\n      if (!result) throw new Error(`Table '${name}' not found`);\n      return tableMap[name];\n    },\n\n    cmp,\n\n    MIN_KEY: -Infinity,\n\n    MAX_KEY: getMaxKey(IdbKeyRange),\n\n    schema\n\n  };\n}\n","import { Dexie } from './';\nimport { createDBCore } from '../../dbcore/dbcore-indexeddb';\nimport { DBCore } from '../../public/types/dbcore';\nimport { DexieDOMDependencies } from '../../public/types/dexie-dom-dependencies';\nimport { DexieStacks, Middleware } from '../../public/types/middleware';\nimport { exceptions } from '../../errors';\n\nfunction createMiddlewareStack<TStack extends {stack: string}>(\n  stackImpl: {stack: string},\n  middlewares: Middleware<{stack: string}>[]): TStack {\n  return middlewares.reduce((down, {create}) => ({...down, ...create(down)}), stackImpl) as TStack;\n} \n\nfunction createMiddlewareStacks(\n  middlewares: {[StackName in keyof DexieStacks]?: Middleware<DexieStacks[StackName]>[]},\n  idbdb: IDBDatabase,\n  {IDBKeyRange, indexedDB}: DexieDOMDependencies,\n  tmpTrans: IDBTransaction): {[StackName in keyof DexieStacks]?: DexieStacks[StackName]}\n{\n  const dbcore = createMiddlewareStack<DBCore>(\n    createDBCore(idbdb, indexedDB, IDBKeyRange, tmpTrans),\n    middlewares.dbcore);\n  \n  // TODO: Create other stacks the same way as above. They might be dependant on the result\n  // of creating dbcore stack.\n\n  return {\n    dbcore\n  };\n}\n\nexport function generateMiddlewareStacks(db: Dexie, tmpTrans: IDBTransaction) {\n  const idbdb = tmpTrans.db;\n  const stacks = createMiddlewareStacks(db._middlewares, idbdb, db._deps, tmpTrans);\n  db.core = stacks.dbcore!;\n  db.tables.forEach(table => {\n    const tableName = table.name;\n    if (db.core.schema.tables.some(tbl => tbl.name === tableName)) {\n      table.core = db.core.table(tableName);\n      if (db[tableName] instanceof db.Table) {\n          db[tableName].core = table.core;\n      }\n    }\n  });\n}\n","import { Dexie } from '../dexie';\nimport { DbSchema } from '../../public/types/db-schema';\nimport { setProp, keys, slice, _global, isArray, shallowClone, isAsyncFunction, defineProperty, getPropertyDescriptor } from '../../functions/utils';\nimport { Transaction } from '../transaction';\nimport { Version } from './version';\nimport Promise, { PSD, newScope, NativePromise, decrementExpectedAwaits, incrementExpectedAwaits } from '../../helpers/promise';\nimport { exceptions } from '../../errors';\nimport { TableSchema } from '../../public/types/table-schema';\nimport { IndexSpec } from '../../public/types/index-spec';\nimport { hasIEDeleteObjectStoreBug, isIEOrEdge } from '../../globals/constants';\nimport { safariMultiStoreFix } from '../../functions/quirks';\nimport { createIndexSpec, nameFromKeyPath } from '../../helpers/index-spec';\nimport { createTableSchema } from '../../helpers/table-schema';\nimport { generateMiddlewareStacks } from '../dexie/generate-middleware-stacks';\n\nexport function setApiOnPlace(db: Dexie, objs: Object[], tableNames: string[], dbschema: DbSchema) {\n  tableNames.forEach(tableName => {\n    const schema = dbschema[tableName];\n    objs.forEach(obj => {\n      const propDesc = getPropertyDescriptor(obj, tableName);\n      if (!propDesc || (\"value\" in propDesc && propDesc.value === undefined)) {\n        // Either the prop is not declared, or it is initialized to undefined.\n        if (obj === db.Transaction.prototype || obj instanceof db.Transaction) {\n          // obj is a Transaction prototype (or prototype of a subclass to Transaction)\n          // Make the API a getter that returns this.table(tableName)\n          setProp(obj, tableName, {\n            get(this: Transaction) { return this.table(tableName); },\n            set(value: any) {\n              // Issue #1039\n              // Let \"this.schema = dbschema;\" and other props in transaction constructor work even if there's a name collision with the table name.\n              defineProperty(this, tableName, {value, writable: true, configurable: true, enumerable: true});\n            }\n          });\n        } else {\n          // Table will not be bound to a transaction (will use Dexie.currentTransaction)\n          obj[tableName] = new db.Table(tableName, schema);\n        }\n      }\n    });\n  });\n}\n\nexport function removeTablesApi(db: Dexie, objs: Object[]) {\n  objs.forEach(obj => {\n    for (let key in obj) {\n      if (obj[key] instanceof db.Table) delete obj[key];\n    }\n  });\n}\n\nexport function lowerVersionFirst(a: Version, b: Version) {\n  return a._cfg.version - b._cfg.version;\n}\n\nexport function runUpgraders(db: Dexie, oldVersion: number, idbUpgradeTrans: IDBTransaction, reject) {\n  const globalSchema = db._dbSchema;\n  const trans = db._createTransaction('readwrite', db._storeNames, globalSchema);\n  trans.create(idbUpgradeTrans);\n  trans._completion.catch(reject);\n  const rejectTransaction = trans._reject.bind(trans);\n  const transless = PSD.transless || PSD;\n  newScope(() => {\n    PSD.trans = trans;\n    PSD.transless = transless;\n    if (oldVersion === 0) {\n      // Create tables:\n      keys(globalSchema).forEach(tableName => {\n        createTable(idbUpgradeTrans, tableName, globalSchema[tableName].primKey, globalSchema[tableName].indexes);\n      });\n      generateMiddlewareStacks(db, idbUpgradeTrans);\n      Promise.follow(() => db.on.populate.fire(trans)).catch(rejectTransaction);\n    } else\n      updateTablesAndIndexes(db, oldVersion, trans, idbUpgradeTrans).catch(rejectTransaction);\n  });\n}\n\nexport type UpgradeQueueItem = (idbtrans: IDBTransaction) => PromiseLike<any> | void;\n\nexport function updateTablesAndIndexes(\n  db: Dexie,\n  oldVersion: number,\n  trans: Transaction,\n  idbUpgradeTrans: IDBTransaction)\n{\n  // Upgrade version to version, step-by-step from oldest to newest version.\n  // Each transaction object will contain the table set that was current in that version (but also not-yet-deleted tables from its previous version)\n  const queue: UpgradeQueueItem[] = [];\n  const versions = db._versions;\n  let globalSchema = db._dbSchema = buildGlobalSchema(db, db.idbdb, idbUpgradeTrans);\n  let anyContentUpgraderHasRun = false;\n\n  const versToRun = versions.filter(v => v._cfg.version >= oldVersion);\n  versToRun.forEach(version => {\n    queue.push(() => {\n      const oldSchema = globalSchema;\n      const newSchema = version._cfg.dbschema;\n      adjustToExistingIndexNames(db, oldSchema, idbUpgradeTrans);\n      adjustToExistingIndexNames(db, newSchema, idbUpgradeTrans);\n\n      globalSchema = db._dbSchema = newSchema;\n\n      const diff = getSchemaDiff(oldSchema, newSchema);\n      // Add tables           \n      diff.add.forEach(tuple => {\n        createTable(idbUpgradeTrans, tuple[0], tuple[1].primKey, tuple[1].indexes);\n      });\n      // Change tables\n      diff.change.forEach(change => {\n        if (change.recreate) {\n          throw new exceptions.Upgrade(\"Not yet support for changing primary key\");\n        } else {\n          const store = idbUpgradeTrans.objectStore(change.name);\n          // Add indexes\n          change.add.forEach(idx => addIndex(store, idx));\n          // Update indexes\n          change.change.forEach(idx => {\n            store.deleteIndex(idx.name);\n            addIndex(store, idx);\n          });\n          // Delete indexes\n          change.del.forEach(idxName => store.deleteIndex(idxName));\n        }\n      });\n\n      const contentUpgrade = version._cfg.contentUpgrade;\n\n      if (contentUpgrade && version._cfg.version > oldVersion) {\n        // Update db.core with new tables and indexes:\n        generateMiddlewareStacks(db, idbUpgradeTrans);\n        trans._memoizedTables = {}; // Invalidate memoization as transaction shape may change between versions.\n\n        anyContentUpgraderHasRun = true;\n\n        // Add to-be-deleted tables to contentUpgrade transaction\n        let upgradeSchema = shallowClone(newSchema);\n        diff.del.forEach(table => {\n          upgradeSchema[table] = oldSchema[table];\n        });\n\n        // Safe to affect Transaction.prototype globally in this moment,\n        // because when this code runs, there may not be any other code\n        // that can access any transaction instance, else than this particular\n        // upgrader function.\n        removeTablesApi(db, [db.Transaction.prototype]);\n        setApiOnPlace(db, [db.Transaction.prototype], keys(upgradeSchema), upgradeSchema);\n        trans.schema = upgradeSchema;\n\n        // Support for native async await.\n        const contentUpgradeIsAsync = isAsyncFunction(contentUpgrade);\n        if (contentUpgradeIsAsync) {\n          incrementExpectedAwaits();\n        }\n        \n        let returnValue: any;\n        const promiseFollowed = Promise.follow(() => {\n          // Finally, call the scope function with our table and transaction arguments.\n          returnValue = contentUpgrade(trans);\n          if (returnValue) {\n            if (contentUpgradeIsAsync) {\n              // contentUpgrade is a native async function - we know for sure returnValue is native promise.\n              var decrementor = decrementExpectedAwaits.bind(null, null);\n              returnValue.then(decrementor, decrementor);\n            }\n          }\n        });\n        return (returnValue && typeof returnValue.then === 'function' ?\n          Promise.resolve(returnValue) : promiseFollowed.then(()=>returnValue));\n      }\n    });\n    queue.push(idbtrans => {\n      if (!anyContentUpgraderHasRun || !hasIEDeleteObjectStoreBug) { // Dont delete old tables if ieBug is present and a content upgrader has run. Let tables be left in DB so far. This needs to be taken care of.\n        const newSchema = version._cfg.dbschema;\n        // Delete old tables\n        deleteRemovedTables(newSchema, idbtrans);\n      }\n      // Restore the final API\n      removeTablesApi(db, [db.Transaction.prototype]);\n      setApiOnPlace(db, [db.Transaction.prototype], db._storeNames, db._dbSchema);\n      trans.schema = db._dbSchema;\n    });\n  });\n\n  // Now, create a queue execution engine\n  function runQueue() {\n    return queue.length ? Promise.resolve(queue.shift()(trans.idbtrans)).then(runQueue) :\n      Promise.resolve();\n  }\n\n  return runQueue().then(() => {\n    createMissingTables(globalSchema, idbUpgradeTrans); // At last, make sure to create any missing tables. (Needed by addons that add stores to DB without specifying version)\n  });\n}\n\nexport interface SchemaDiff {\n  del: string[],\n  add: [string, TableSchema][];\n  change: TableSchemaDiff[];\n}\n\nexport interface TableSchemaDiff {\n  name: string,\n  recreate: boolean,\n  del: string[],\n  add: IndexSpec[],\n  change: IndexSpec[]\n}\n\nexport function getSchemaDiff(oldSchema: DbSchema, newSchema: DbSchema): SchemaDiff {\n  const diff: SchemaDiff = {\n    del: [], // Array of table names\n    add: [], // Array of [tableName, newDefinition]\n    change: [] // Array of {name: tableName, recreate: newDefinition, del: delIndexNames, add: newIndexDefs, change: changedIndexDefs}\n  };\n  let table: string;\n  for (table in oldSchema) {\n    if (!newSchema[table]) diff.del.push(table);\n  }\n  for (table in newSchema) {\n    const oldDef = oldSchema[table],\n      newDef = newSchema[table];\n    if (!oldDef) {\n      diff.add.push([table, newDef]);\n    } else {\n      const change = {\n        name: table,\n        def: newDef,\n        recreate: false,\n        del: [],\n        add: [],\n        change: []\n      };\n      if (\n          (\n             // compare keyPaths no matter if string or string[]\n             // compare falsy keypaths same no matter if they are null or empty string.\n            ''+(oldDef.primKey.keyPath||'')\n          ) !== (\n            ''+(newDef.primKey.keyPath||'')\n          ) ||\n            // Compare the autoIncrement flag also\n          (oldDef.primKey.auto !== newDef.primKey.auto && !isIEOrEdge)) // IE has bug reading autoIncrement prop.\n      {\n        // Primary key has changed. Remove and re-add table.\n        change.recreate = true;\n        diff.change.push(change);\n      } else {\n        // Same primary key. Just find out what differs:\n        const oldIndexes = oldDef.idxByName;\n        const newIndexes = newDef.idxByName;\n        let idxName: string;\n        for (idxName in oldIndexes) {\n          if (!newIndexes[idxName]) change.del.push(idxName);\n        }\n        for (idxName in newIndexes) {\n          const oldIdx = oldIndexes[idxName],\n            newIdx = newIndexes[idxName];\n          if (!oldIdx) change.add.push(newIdx);\n          else if (oldIdx.src !== newIdx.src) change.change.push(newIdx);\n        }\n        if (change.del.length > 0 || change.add.length > 0 || change.change.length > 0) {\n          diff.change.push(change);\n        }\n      }\n    }\n  }\n  return diff;\n}\n\nexport function createTable(\n  idbtrans: IDBTransaction,\n  tableName: string,\n  primKey: IndexSpec,\n  indexes: IndexSpec[]\n) {\n  const store = idbtrans.db.createObjectStore(\n    tableName,\n    primKey.keyPath ?\n      { keyPath: primKey.keyPath, autoIncrement: primKey.auto } :\n      { autoIncrement: primKey.auto }\n  );\n  indexes.forEach(idx => addIndex(store, idx));\n  return store;\n}\n\nexport function createMissingTables(newSchema: DbSchema, idbtrans: IDBTransaction) {\n  keys(newSchema).forEach(tableName => {\n    if (!idbtrans.db.objectStoreNames.contains(tableName)) {\n      createTable(idbtrans, tableName, newSchema[tableName].primKey, newSchema[tableName].indexes);\n    }\n  });\n}\n\nexport function deleteRemovedTables(newSchema: DbSchema, idbtrans: IDBTransaction) {\n  for (var i = 0; i < idbtrans.db.objectStoreNames.length; ++i) {\n    var storeName = idbtrans.db.objectStoreNames[i];\n    if (newSchema[storeName] == null) {\n      idbtrans.db.deleteObjectStore(storeName);\n    }\n  }\n}\n\nexport function addIndex(store: IDBObjectStore, idx: IndexSpec) {\n  store.createIndex(idx.name, idx.keyPath, { unique: idx.unique, multiEntry: idx.multi });\n}\n\nfunction buildGlobalSchema(\n  db: Dexie,\n  idbdb: IDBDatabase,\n  tmpTrans: IDBTransaction\n) {\n  const globalSchema = {};\n  const dbStoreNames = slice(idbdb.objectStoreNames, 0);\n  dbStoreNames.forEach(storeName => {\n    const store = tmpTrans.objectStore(storeName);\n    let keyPath = store.keyPath;\n    const primKey = createIndexSpec(\n      nameFromKeyPath(keyPath),\n      keyPath || \"\",\n      false,\n      false,\n      !!store.autoIncrement,\n      keyPath && typeof keyPath !== \"string\",\n      true\n    );\n    const indexes: IndexSpec[] = [];\n    for (let j = 0; j < store.indexNames.length; ++j) {\n      const idbindex = store.index(store.indexNames[j]);\n      keyPath = idbindex.keyPath;\n      var index = createIndexSpec(\n        idbindex.name,\n        keyPath,\n        !!idbindex.unique,\n        !!idbindex.multiEntry,\n        false,\n        keyPath && typeof keyPath !== \"string\",\n        false\n      );\n      indexes.push(index);\n    }\n    globalSchema[storeName] = createTableSchema(storeName, primKey, indexes);\n  });\n  return globalSchema;\n}\n\nexport function readGlobalSchema(db: Dexie, idbdb: IDBDatabase, tmpTrans: IDBTransaction) {\n  db.verno = idbdb.version / 10;\n  const globalSchema = db._dbSchema = buildGlobalSchema(db, idbdb, tmpTrans);\n  db._storeNames = slice(idbdb.objectStoreNames, 0);\n  setApiOnPlace(db, [db._allTables], keys(globalSchema), globalSchema);\n}\n\nexport function verifyInstalledSchema(db: Dexie, tmpTrans: IDBTransaction): boolean {\n  const installedSchema = buildGlobalSchema(db, db.idbdb, tmpTrans);\n  const diff = getSchemaDiff(installedSchema, db._dbSchema);\n  return !(diff.add.length || diff.change.some(ch => ch.add.length || ch.change.length));\n}\n\nexport function adjustToExistingIndexNames(db: Dexie, schema: DbSchema, idbtrans: IDBTransaction) {\n  // Issue #30 Problem with existing db - adjust to existing index names when migrating from non-dexie db\n  const storeNames = idbtrans.db.objectStoreNames;\n\n  for (let i = 0; i < storeNames.length; ++i) {\n    const storeName = storeNames[i];\n    const store = idbtrans.objectStore(storeName);\n    db._hasGetAll = 'getAll' in store;\n\n    for (let j = 0; j < store.indexNames.length; ++j) {\n      const indexName = store.indexNames[j];\n      const keyPath = store.index(indexName).keyPath;\n      const dexieName = typeof keyPath === 'string' ? keyPath : \"[\" + slice(keyPath).join('+') + \"]\";\n      if (schema[storeName]) {\n        const indexSpec = schema[storeName].idxByName[dexieName];\n        if (indexSpec) {\n          indexSpec.name = indexName;\n          delete schema[storeName].idxByName[dexieName];\n          schema[storeName].idxByName[indexName] = indexSpec;\n        }\n      }\n    }\n  }\n\n  // Bug with getAll() on Safari ver<604 on Workers only, see discussion following PR #579\n  if (typeof navigator !== 'undefined' && /Safari/.test(navigator.userAgent) &&\n    !/(Chrome\\/|Edge\\/)/.test(navigator.userAgent) &&\n    _global.WorkerGlobalScope && _global instanceof _global.WorkerGlobalScope &&\n    [].concat(navigator.userAgent.match(/Safari\\/(\\d*)/))[1] < 604)\n  {\n    db._hasGetAll = false;\n  }\n}\n\nexport function parseIndexSyntax(primKeyAndIndexes: string): IndexSpec[] {\n  return primKeyAndIndexes.split(',').map((index, indexNum) => {\n    index = index.trim();\n    const name = index.replace(/([&*]|\\+\\+)/g, \"\"); // Remove \"&\", \"++\" and \"*\"\n    // Let keyPath of \"[a+b]\" be [\"a\",\"b\"]:\n    const keyPath = /^\\[/.test(name) ? name.match(/^\\[(.*)\\]$/)[1].split('+') : name;\n\n    return createIndexSpec(\n      name,\n      keyPath || null,\n      /\\&/.test(index),\n      /\\*/.test(index),\n      /\\+\\+/.test(index),\n      isArray(keyPath),\n      indexNum === 0\n    );\n  });\n}\n","import { newScope } from '../../helpers/promise';\nimport { PSD } from '../../helpers/promise';\n\nexport function vip (fn) {\n  // To be used by subscribers to the on('ready') event.\n  // This will let caller through to access DB even when it is blocked while the db.ready() subscribers are firing.\n  // This would have worked automatically if we were certain that the Provider was using Dexie.Promise for all asyncronic operations. The promise PSD\n  // from the provider.connect() call would then be derived all the way to when provider would call localDatabase.applyChanges(). But since\n  // the provider more likely is using non-promise async APIs or other thenable implementations, we cannot assume that.\n  // Note that this method is only useful for on('ready') subscribers that is returning a Promise from the event. If not using vip()\n  // the database could deadlock since it wont open until the returned Promise is resolved, and any non-VIPed operation started by\n  // the caller will not resolve until database is opened.\n  return newScope(function () {\n    PSD.letThrough = true; // Make sure we are let through if still blocking db due to onready is firing.\n    return fn();\n  });\n}\n\n","import { Dexie } from './dexie';\nimport * as Debug from '../../helpers/debug';\nimport { rejection } from '../../helpers/promise';\nimport { exceptions } from '../../errors';\nimport { eventRejectHandler, preventDefault } from '../../functions/event-wrappers';\nimport Promise, { wrap } from '../../helpers/promise';\nimport { connections } from '../../globals/constants';\nimport { runUpgraders, readGlobalSchema, adjustToExistingIndexNames, verifyInstalledSchema } from '../version/schema-helpers';\nimport { safariMultiStoreFix } from '../../functions/quirks';\nimport { databaseEnumerator } from '../../helpers/database-enumerator';\nimport { vip } from './vip';\nimport { promisableChain, nop } from '../../functions/chaining-functions';\nimport { generateMiddlewareStacks } from './generate-middleware-stacks';\nimport { slice } from '../../functions/utils';\n\nexport function dexieOpen (db: Dexie) {\n  const state = db._state;\n  const {indexedDB} = db._deps;\n  if (state.isBeingOpened || db.idbdb)\n      return state.dbReadyPromise.then<Dexie>(() => state.dbOpenError ?\n        rejection (state.dbOpenError) :\n        db);\n  Debug.debug && (state.openCanceller._stackHolder = Debug.getErrorWithStack()); // Let stacks point to when open() was called rather than where new Dexie() was called.\n  state.isBeingOpened = true;\n  state.dbOpenError = null;\n  state.openComplete = false;\n  \n  // Function pointers to call when the core opening process completes.\n  let resolveDbReady = state.dbReadyResolve,\n      // upgradeTransaction to abort on failure.\n      upgradeTransaction: (IDBTransaction | null) = null;\n  \n  return Promise.race([state.openCanceller, new Promise((resolve, reject) => {\n      // Multiply db.verno with 10 will be needed to workaround upgrading bug in IE:\n      // IE fails when deleting objectStore after reading from it.\n      // A future version of Dexie.js will stopover an intermediate version to workaround this.\n      // At that point, we want to be backward compatible. Could have been multiplied with 2, but by using 10, it is easier to map the number to the real version number.\n      \n      // If no API, throw!\n      if (!indexedDB) throw new exceptions.MissingAPI(\n          \"indexedDB API not found. If using IE10+, make sure to run your code on a server URL \"+\n          \"(not locally). If using old Safari versions, make sure to include indexedDB polyfill.\");\n      const dbName = db.name;\n      \n      const req = state.autoSchema ?\n        indexedDB.open(dbName) :\n        indexedDB.open(dbName, Math.round(db.verno * 10));\n      if (!req) throw new exceptions.MissingAPI(\"IndexedDB API not available\"); // May happen in Safari private mode, see https://github.com/dfahlander/Dexie.js/issues/134\n      req.onerror = eventRejectHandler(reject);\n      req.onblocked = wrap(db._fireOnBlocked);\n      req.onupgradeneeded = wrap (e => {\n          upgradeTransaction = req.transaction;\n          if (state.autoSchema && !db._options.allowEmptyDB) { // Unless an addon has specified db._allowEmptyDB, lets make the call fail.\n              // Caller did not specify a version or schema. Doing that is only acceptable for opening alread existing databases.\n              // If onupgradeneeded is called it means database did not exist. Reject the open() promise and make sure that we\n              // do not create a new database by accident here.\n              req.onerror = preventDefault; // Prohibit onabort error from firing before we're done!\n              upgradeTransaction.abort(); // Abort transaction (would hope that this would make DB disappear but it doesnt.)\n              // Close database and delete it.\n              req.result.close();\n              const delreq = indexedDB.deleteDatabase(dbName); // The upgrade transaction is atomic, and javascript is single threaded - meaning that there is no risk that we delete someone elses database here!\n              delreq.onsuccess = delreq.onerror = wrap(() => {\n                  reject (new exceptions.NoSuchDatabase(`Database ${dbName} doesnt exist`));\n              });\n          } else {\n              upgradeTransaction.onerror = eventRejectHandler(reject);\n              var oldVer = e.oldVersion > Math.pow(2, 62) ? 0 : e.oldVersion; // Safari 8 fix.\n              db.idbdb = req.result;\n              runUpgraders(db, oldVer / 10, upgradeTransaction, reject);\n          }\n      }, reject);\n      \n      req.onsuccess = wrap (() => {\n          // Core opening procedure complete. Now let's just record some stuff.\n          upgradeTransaction = null;\n          const idbdb = db.idbdb = req.result;\n\n          const objectStoreNames = slice(idbdb.objectStoreNames);\n          if (objectStoreNames.length > 0) try {\n            const tmpTrans = idbdb.transaction(safariMultiStoreFix(objectStoreNames), 'readonly');\n            if (state.autoSchema) readGlobalSchema(db, idbdb, tmpTrans);\n            else {\n                adjustToExistingIndexNames(db, db._dbSchema, tmpTrans);\n                if (!verifyInstalledSchema(db, tmpTrans)) {\n                    console.warn(`Dexie SchemaDiff: Schema was extended without increasing the number passed to db.version(). Some queries may fail.`);\n                }\n            }\n            generateMiddlewareStacks(db, tmpTrans);\n          } catch (e) {\n            // Safari 8 may bail out if > 1 store names. However, this shouldnt be a showstopper. Issue #120.\n            // BUGBUG: It will bail out anyway as of Dexie 3.\n            // Should we support Safari 8 anymore? Believe all\n            // Dexie users use the shim for that platform anyway?!\n            // If removing Safari 8 support, go ahead and remove the safariMultiStoreFix() function\n            // as well as absurd upgrade version quirk for Safari.\n          }\n          \n          connections.push(db); // Used for emulating versionchange event on IE/Edge/Safari.\n          \n          idbdb.onversionchange = wrap(ev => {\n              state.vcFired = true; // detect implementations that not support versionchange (IE/Edge/Safari)\n              db.on(\"versionchange\").fire(ev);\n          });\n          \n          databaseEnumerator.add(dbName);\n\n          resolve();\n\n      }, reject);\n  })]).then(() => {\n      // Before finally resolving the dbReadyPromise and this promise,\n      // call and await all on('ready') subscribers:\n      // Dexie.vip() makes subscribers able to use the database while being opened.\n      // This is a must since these subscribers take part of the opening procedure.\n      state.onReadyBeingFired = [];\n      return Promise.resolve(vip(db.on.ready.fire)).then(function fireRemainders() {\n          if (state.onReadyBeingFired.length > 0) {\n              // In case additional subscribers to db.on('ready') were added during the time db.on.ready.fire was executed.\n              let remainders = state.onReadyBeingFired.reduce(promisableChain, nop);\n              state.onReadyBeingFired = [];\n              return Promise.resolve(vip(remainders)).then(fireRemainders)\n          }\n      });\n  }).finally(()=>{\n      state.onReadyBeingFired = null;\n  }).then(()=>{\n      // Resolve the db.open() with the db instance.\n      state.isBeingOpened = false;\n      return db;\n  }).catch(err => {\n      try {\n          // Did we fail within onupgradeneeded? Make sure to abort the upgrade transaction so it doesnt commit.\n          upgradeTransaction && upgradeTransaction.abort();\n      } catch (e) { }\n      state.isBeingOpened = false; // Set before calling db.close() so that it doesnt reject openCanceller again (leads to unhandled rejection event).\n      db.close(); // Closes and resets idbdb, removes connections, resets dbReadyPromise and openCanceller so that a later db.open() is fresh.\n      // A call to db.close() may have made on-ready subscribers fail. Use dbOpenError if set, since err could be a follow-up error on that.\n      state.dbOpenError = err; // Record the error. It will be used to reject further promises of db operations.\n      return rejection (state.dbOpenError);\n  }).finally(()=>{\n      state.openComplete = true;\n      resolveDbReady(); // dbReadyPromise is resolved no matter if open() rejects or resolved. It's just to wake up waiters.\n  });\n}\n","import { isArray } from '../functions/utils';\n\nexport function awaitIterator (iterator: Iterator<any>) {\n  var callNext = result => iterator.next(result),\n      doThrow = error => iterator.throw(error),\n      onSuccess = step(callNext),\n      onError = step(doThrow);\n\n  function step(getNext: (any)=>any) {\n      return (val?) => {\n          var next = getNext(val),\n              value = next.value;\n\n          return next.done ? value :\n              (!value || typeof value.then !== 'function' ?\n                  isArray(value) ? Promise.all(value).then(onSuccess, onError) : onSuccess(value) :\n                  value.then(onSuccess, onError));\n      };\n  }\n\n  return step(callNext)();\n}\n","import { TransactionMode } from '../../public/types/transaction-mode';\nimport { exceptions } from '../../errors';\nimport { flatten, isAsyncFunction } from '../../functions/utils';\nimport { Dexie } from './dexie';\nimport { Transaction } from '../transaction';\nimport { awaitIterator } from '../../helpers/yield-support';\nimport Promise, {\n  PSD,\n  NativePromise,\n  decrementExpectedAwaits,\n  rejection,\n  incrementExpectedAwaits\n} from '../../helpers/promise';\n\nexport function extractTransactionArgs(mode: TransactionMode, _tableArgs_, scopeFunc) {\n  // Let table arguments be all arguments between mode and last argument.\n  var i = arguments.length;\n  if (i < 2) throw new exceptions.InvalidArgument(\"Too few arguments\");\n  // Prevent optimzation killer (https://github.com/petkaantonov/bluebird/wiki/Optimization-killers#32-leaking-arguments)\n  // and clone arguments except the first one into local var 'args'.\n  var args = new Array(i - 1);\n  while (--i) args[i - 1] = arguments[i];\n  // Let scopeFunc be the last argument and pop it so that args now only contain the table arguments.\n  scopeFunc = args.pop();\n  var tables = flatten(args); // Support using array as middle argument, or a mix of arrays and non-arrays.\n  return [mode, tables, scopeFunc];\n}\n\nexport function enterTransactionScope(\n  db: Dexie,\n  mode: IDBTransactionMode,\n  storeNames: string[],\n  parentTransaction: Transaction | undefined,\n  scopeFunc: ()=>PromiseLike<any> | any\n) {\n  return Promise.resolve().then(() => {\n    // Keep a pointer to last non-transactional PSD to use if someone calls Dexie.ignoreTransaction().\n    const transless = PSD.transless || PSD;\n    // Our transaction.\n    //return new Promise((resolve, reject) => {\n    const trans = db._createTransaction(mode, storeNames, db._dbSchema, parentTransaction);\n    // Let the transaction instance be part of a Promise-specific data (PSD) value.\n    const zoneProps = {\n      trans: trans,\n      transless: transless\n    };\n\n    if (parentTransaction) {\n      // Emulate transaction commit awareness for inner transaction (must 'commit' when the inner transaction has no more operations ongoing)\n      trans.idbtrans = parentTransaction.idbtrans;\n    } else {\n      trans.create(); // Create the backend transaction so that complete() or error() will trigger even if no operation is made upon it.\n    }\n\n    // Support for native async await.\n    const scopeFuncIsAsync = isAsyncFunction(scopeFunc);\n    if (scopeFuncIsAsync) {\n      incrementExpectedAwaits();\n    }\n\n    let returnValue;\n    const promiseFollowed = Promise.follow(() => {\n      // Finally, call the scope function with our table and transaction arguments.\n      returnValue = scopeFunc.call(trans, trans);\n      if (returnValue) {\n        if (scopeFuncIsAsync) {\n          // scopeFunc is a native async function - we know for sure returnValue is native promise.\n          var decrementor = decrementExpectedAwaits.bind(null, null);\n          returnValue.then(decrementor, decrementor);\n        } else if (typeof returnValue.next === 'function' && typeof returnValue.throw === 'function') {\n          // scopeFunc returned an iterator with throw-support. Handle yield as await.\n          returnValue = awaitIterator(returnValue);\n        }\n      }\n    }, zoneProps);\n    return (returnValue && typeof returnValue.then === 'function' ?\n      // Promise returned. User uses promise-style transactions.\n      Promise.resolve(returnValue).then(x => trans.active ?\n        x // Transaction still active. Continue.\n        : rejection(new exceptions.PrematureCommit(\n          \"Transaction committed too early. See http://bit.ly/2kdckMn\")))\n      // No promise returned. Wait for all outstanding promises before continuing. \n      : promiseFollowed.then(() => returnValue)\n    ).then(x => {\n      // sub transactions don't react to idbtrans.oncomplete. We must trigger a completion:\n      if (parentTransaction) trans._resolve();\n      // wait for trans._completion\n      // (if root transaction, this means 'complete' event. If sub-transaction, we've just fired it ourselves)\n      return trans._completion.then(() => x);\n    }).catch(e => {\n      trans._reject(e); // Yes, above then-handler were maybe not called because of an unhandled rejection in scopeFunc!\n      return rejection(e);\n    });\n  });\n}\n","import {\n  DBCore,\n  DBCoreIndex,\n  DBCoreKeyRange,\n  DBCoreQueryRequest,\n  DBCoreRangeType,\n  DBCoreOpenCursorRequest,\n  DBCoreCountRequest,\n  DBCoreCursor,\n  DBCoreTable,\n} from \"../public/types/dbcore\";\nimport { isArray } from '../functions/utils';\nimport { getKeyExtractor } from './get-key-extractor';\nimport { getKeyPathAlias } from './dbcore-indexeddb';\nimport { Middleware } from '../public/types/middleware';\n\ninterface VirtualIndex extends DBCoreIndex {\n  /** True if this index is virtual, i.e. represents a compound index internally,\n   * but makes it act as as having a subset of its keyPaths.\n   */\n  isVirtual: boolean;\n\n  /** Number of keypaths that this index comprises. Can be 0..N.\n   * Note: This is the length of the *virtual index*, not the real index.\n   */\n  keyLength: number;\n\n  /** Number of popped keypaths from the real index.\n   */\n  keyTail: number;\n}\n\n// Move into some util:\nexport function pad (a: any | any[], value: any, count: number) {\n  const result = isArray(a) ? a.slice() : [a];\n  for (let i=0; i<count; ++i) result.push(value);\n  return result;\n}\n\n\nexport function createVirtualIndexMiddleware (down: DBCore) : DBCore {\n  return {\n    ...down,\n    table(tableName: string) {\n      const table = down.table(tableName);\n      const {schema} = table;\n      const indexLookup: {[indexAlias: string]: VirtualIndex[]} = {};\n      const allVirtualIndexes: VirtualIndex[] = [];\n\n      function addVirtualIndexes (keyPath: null | string | string[], keyTail: number, lowLevelIndex: DBCoreIndex): VirtualIndex {\n        const keyPathAlias = getKeyPathAlias(keyPath);\n        const indexList = (indexLookup[keyPathAlias] = indexLookup[keyPathAlias] || []);\n        const keyLength = keyPath == null ? 0: typeof keyPath === 'string' ? 1 : keyPath.length;\n        const isVirtual = keyTail > 0;\n        const virtualIndex = {\n          ...lowLevelIndex,\n          isVirtual,\n          isPrimaryKey: !isVirtual && lowLevelIndex.isPrimaryKey,\n          keyTail,\n          keyLength,\n          extractKey: getKeyExtractor(keyPath),\n          unique: !isVirtual && lowLevelIndex.unique\n        };\n        indexList.push(virtualIndex);\n        if (!virtualIndex.isPrimaryKey) {\n          allVirtualIndexes.push(virtualIndex);\n        }\n        if (keyLength > 1) {\n          const virtualKeyPath = keyLength === 2 ?\n            keyPath[0] : // This is a compound [a, b]. Add a virtual normal index a.\n            keyPath.slice(0, keyLength - 1); // This is compound [a,b,c]. Add virtual compound [a,b].\n          addVirtualIndexes(virtualKeyPath, keyTail + 1, lowLevelIndex);\n        }\n        indexList.sort((a,b) => a.keyTail - b.keyTail); // Shortest keyTail is the best one (represents real index)\n        return virtualIndex;\n      }\n    \n      const primaryKey = addVirtualIndexes(schema.primaryKey.keyPath, 0, schema.primaryKey);\n      indexLookup[\":id\"] = [primaryKey];\n      for (const index of schema.indexes) {\n        addVirtualIndexes(index.keyPath, 0, index);\n      }\n    \n      function findBestIndex(keyPath: null | string | string[]): VirtualIndex {\n        const result = indexLookup[getKeyPathAlias(keyPath)];\n        return result && result[0];\n      }\n    \n      function translateRange (range: DBCoreKeyRange, keyTail: number): DBCoreKeyRange {\n        return {\n          type: range.type === DBCoreRangeType.Equal ?\n            DBCoreRangeType.Range :\n            range.type,\n          lower: pad(range.lower, range.lowerOpen ? down.MAX_KEY : down.MIN_KEY, keyTail),\n          lowerOpen: true, // doesn't matter true or false\n          upper: pad(range.upper, range.upperOpen ? down.MIN_KEY : down.MAX_KEY, keyTail),\n          upperOpen: true // doesn't matter true or false\n        };\n      }\n    \n      function translateRequest (req: DBCoreQueryRequest): DBCoreQueryRequest;\n      function translateRequest (req: DBCoreOpenCursorRequest): DBCoreOpenCursorRequest;\n      function translateRequest (req: DBCoreCountRequest): DBCoreCountRequest {\n        const index = req.query.index as VirtualIndex;\n        return index.isVirtual ? {\n          ...req,\n          query: {\n            index,\n            range: translateRange(req.query.range, index.keyTail)\n          }\n        } : req;\n      }\n    \n      const result: DBCoreTable = {\n        ...table,\n        schema: {\n          ...schema,\n          primaryKey,\n          indexes: allVirtualIndexes,\n          getIndexByKeyPath: findBestIndex\n        },\n\n        count(req) {\n          return table.count(translateRequest(req));\n        },    \n    \n        query(req) {\n          return table.query(translateRequest(req));\n        },\n    \n        openCursor(req) {\n          const {keyTail, isVirtual, keyLength} = (req.query.index as VirtualIndex);\n          if (!isVirtual) return table.openCursor(req);\n    \n          function createVirtualCursor(cursor: DBCoreCursor) : DBCoreCursor {\n            function _continue (key?: any) {\n              key != null ?\n                cursor.continue(pad(key, req.reverse ? down.MAX_KEY : down.MIN_KEY, keyTail)) :\n                req.unique ?\n                  cursor.continue(pad(cursor.key, req.reverse ? down.MIN_KEY : down.MAX_KEY, keyTail)) :\n                  cursor.continue()\n            }\n            const virtualCursor = Object.create(cursor, {\n              continue: {value: _continue},\n              continuePrimaryKey: {\n                value(key: any, primaryKey: any) {\n                  cursor.continuePrimaryKey(pad(key, down.MAX_KEY, keyTail), primaryKey);\n                }\n              },\n              key: {\n                get() {\n                  const key = cursor.key as any[]; // A virtual cursor always operates on compound key\n                  return keyLength === 1 ?\n                    key[0] : // Cursor.key should not be an array.\n                    key.slice(0, keyLength); // Cursor.key should be first part of array.\n                }\n              },\n              value: {\n                get() {\n                  return cursor.value;\n                }\n              }\n            });\n            return virtualCursor;\n          }\n    \n          return table.openCursor(translateRequest(req))\n            .then(cursor => cursor && createVirtualCursor(cursor));\n        }\n      };\n      return result;\n    }\n  }\n}\n\nexport const virtualIndexMiddleware : Middleware<DBCore> = {\n  stack: \"dbcore\",\n  name: \"VirtualIndexMiddleware\",\n  level: 1,\n  create: createVirtualIndexMiddleware\n};\n\n","import Promise from './promise';\nimport { Dexie } from '../classes/dexie/dexie';\nimport { Table } from '../public/types/table';\nimport { nop } from '../functions/chaining-functions';\nimport { PromiseExtended } from '../public/types/promise-extended';\nimport { DBNAMES_DB } from '../globals/constants';\n\nexport let databaseEnumerator: DatabaseEnumerator;\n\nexport interface DatabaseEnumerator {\n  getDatabaseNames (): PromiseExtended<string[]>;\n  add (name: string): undefined | PromiseExtended;\n  remove (name: string): undefined | PromiseExtended;\n}\n\nexport function DatabaseEnumerator (indexedDB: IDBFactory & {databases?: ()=>Promise<{name: string}[]>}) : DatabaseEnumerator {\n  const hasDatabasesNative = indexedDB && typeof indexedDB.databases === 'function';\n  let dbNamesTable: Table<{name: string}, string>;\n\n  if (!hasDatabasesNative) {\n    const db = new Dexie (DBNAMES_DB, {addons: []});\n    db.version(1).stores({dbnames: 'name'});\n    dbNamesTable = db.table<{name: string}, string>('dbnames');\n  }\n\n  return {\n    getDatabaseNames () {\n      return hasDatabasesNative\n        ?\n          // Use Promise.resolve() to wrap the native promise into a Dexie promise,\n          // to keep PSD zone.\n          Promise.resolve(indexedDB.databases()).then(infos => infos\n            // Select name prop of infos:\n            .map(info => info.name)\n            // Filter out DBNAMES_DB as previous Dexie or browser version would not have included it in the result.\n            .filter(name => name !== DBNAMES_DB)\n          )\n        :\n          // Use dexie's manually maintained list of database names:\n          dbNamesTable.toCollection().primaryKeys();\n    },\n\n    add (name: string) : PromiseExtended<any> | undefined {\n      return !hasDatabasesNative && name !== DBNAMES_DB && dbNamesTable.put({name}).catch(nop);\n    },\n\n    remove (name: string) : PromiseExtended<any> | undefined {\n      return !hasDatabasesNative && name !== DBNAMES_DB && dbNamesTable.delete(name).catch(nop);\n    }\n  };\n}\n\nexport function initDatabaseEnumerator(indexedDB: IDBFactory) {\n  try {\n    databaseEnumerator = DatabaseEnumerator(indexedDB);\n  } catch (e) {}\n}\n\n","import { DBCoreKeyRange, DBCoreRangeType } from '../public/types/dbcore';\n\nexport const AnyRange: DBCoreKeyRange = {\n  type: DBCoreRangeType.Any,\n  lower: -Infinity,\n  lowerOpen: false,\n  upper: [[]], // BUGBUG: depends on indexeddb impl.\n  upperOpen: false\n}\n\nexport const NeverRange: DBCoreKeyRange = {\n  type: DBCoreRangeType.Never,\n  lower: -Infinity,\n  lowerOpen: true,\n  upper: -Infinity,\n  upperOpen: true\n}\n","import { BulkError, exceptions } from '../../errors';\nimport { Table as ITable } from '../../public/types/table';\nimport { TableSchema } from '../../public/types/table-schema';\nimport { TableHooks } from '../../public/types/table-hooks';\nimport { DexiePromise as Promise, PSD, newScope, wrap, rejection, beginMicroTickScope, endMicroTickScope } from '../../helpers/promise';\nimport { Transaction } from '../transaction';\nimport { Dexie } from '../dexie';\nimport { tempTransaction } from '../../functions/temp-transaction';\nimport { Collection } from '../collection';\nimport { isArray, keys, getByKeyPath, hasOwn, setByKeyPath, deepClone, tryCatch, arrayToObject, extend } from '../../functions/utils';\nimport { maxString } from '../../globals/constants';\nimport { combine } from '../../functions/combine';\nimport { PromiseExtended } from \"../../public/types/promise-extended\";\nimport { IndexableType } from '../../public/types/indexable-type';\nimport { debug } from '../../helpers/debug';\nimport { DBCoreTable } from '../../public/types/dbcore';\nimport { AnyRange } from '../../dbcore/keyrange';\nimport { workaroundForUndefinedPrimKey } from '../../functions/workaround-undefined-primkey';\n\n/** class Table\n * \n * http://dexie.org/docs/Table/Table\n */\nexport class Table implements ITable<any, IndexableType> {\n  db: Dexie;\n  _tx?: Transaction;\n  name: string;\n  schema: TableSchema;\n  hook: TableHooks;\n  core: DBCoreTable;\n\n  _trans(\n    mode: IDBTransactionMode,\n    fn: (idbtrans: IDBTransaction, dxTrans: Transaction) => PromiseLike<any> | void,\n    writeLocked?: boolean | string) : PromiseExtended<any>\n  {\n    const trans: Transaction = this._tx || PSD.trans;\n    const tableName = this.name;\n    \n    function checkTableInTransaction(resolve, reject, trans: Transaction) {\n      if (!trans.schema[tableName])\n        throw new exceptions.NotFound(\"Table \" + tableName + \" not part of transaction\");\n      return fn(trans.idbtrans, trans);\n    }\n    // Surround all in a microtick scope.\n    // Reason: Browsers (modern Safari + older others)\n    // still as of 2018-10-10 has problems keeping a transaction\n    // alive between micro ticks. Safari because if transaction\n    // is created but not used in same microtick, it will go\n    // away. That specific issue could be solved in DBCore\n    // by opening the transaction just before using it instead.\n    // But older Firefoxes and IE11 (with Promise polyfills)\n    // will still have probs.\n    // The beginMicrotickScope()/endMicrotickScope() works\n    // in cooperation with Dexie.Promise to orchestrate\n    // the micro-ticks in endMicrotickScope() rather than\n    // in native engine.\n    const wasRootExec = beginMicroTickScope();\n    try {\n      return trans && trans.db === this.db ?\n        trans === PSD.trans ?\n          trans._promise(mode, checkTableInTransaction, writeLocked) :\n          newScope(() => trans._promise(mode, checkTableInTransaction, writeLocked), { trans: trans, transless: PSD.transless || PSD }) :\n        tempTransaction(this.db, mode, [this.name], checkTableInTransaction);\n    } finally {\n      if (wasRootExec) endMicroTickScope();\n    }\n  }\n\n  /** Table.get()\n   * \n   * http://dexie.org/docs/Table/Table.get()\n   * \n   **/\n  get(keyOrCrit, cb?) {\n    if (keyOrCrit && keyOrCrit.constructor === Object)\n      return this.where(keyOrCrit as { [key: string]: IndexableType }).first(cb);\n\n    return this._trans('readonly', (trans) => {\n      return this.core.get({trans, key: keyOrCrit})\n        .then(res => this.hook.reading.fire(res));\n    }).then(cb);\n  }\n\n  /** Table.where()\n   * \n   * http://dexie.org/docs/Table/Table.where()\n   * \n   **/\n  where(indexOrCrit: string | string[] | { [key: string]: IndexableType }) {\n    if (typeof indexOrCrit === 'string')\n      return new this.db.WhereClause(this, indexOrCrit);\n    if (isArray(indexOrCrit))\n      return new this.db.WhereClause(this, `[${indexOrCrit.join('+')}]`);\n    // indexOrCrit is an object map of {[keyPath]:value} \n    const keyPaths = keys(indexOrCrit);\n    if (keyPaths.length === 1)\n      // Only one critera. This was the easy case:\n      return this\n        .where(keyPaths[0])\n        .equals(indexOrCrit[keyPaths[0]]);\n\n    // Multiple criterias.\n    // Let's try finding a compound index that matches all keyPaths in\n    // arbritary order:\n    const compoundIndex = this.schema.indexes.concat(this.schema.primKey).filter(ix =>\n      ix.compound &&\n      keyPaths.every(keyPath => ix.keyPath.indexOf(keyPath) >= 0) &&\n      (ix.keyPath as string[]).every(keyPath => keyPaths.indexOf(keyPath) >= 0))[0];\n\n    if (compoundIndex && this.db._maxKey !== maxString)\n      // Cool! We found such compound index\n      // and this browser supports compound indexes (maxKey !== maxString)!\n      return this\n        .where(compoundIndex.name)\n        .equals((compoundIndex.keyPath as string[]).map(kp => indexOrCrit[kp]));\n\n    if (!compoundIndex && debug) console.warn(\n      `The query ${JSON.stringify(indexOrCrit)} on ${this.name} would benefit of a ` +\n      `compound index [${keyPaths.join('+')}]`);\n\n    // Ok, now let's fallback to finding at least one matching index\n    // and filter the rest.\n    const { idxByName } = this.schema;\n    const idb = this.db._deps.indexedDB;\n\n    function equals (a, b) {\n      try {\n        return idb.cmp(a,b) === 0; // Works with all indexable types including binary keys.\n      } catch (e) {\n        return false;\n      }\n    }\n\n    const [idx, filterFunction] = keyPaths.reduce(([prevIndex, prevFilterFn], keyPath) => {\n      const index = idxByName[keyPath];\n      const value = indexOrCrit[keyPath];\n      return [\n        prevIndex || index, // idx::=Pick index of first matching keypath\n        prevIndex || !index ? // filter::=null if not needed, otherwise combine function filter\n          combine(\n            prevFilterFn,\n            index && index.multi ?\n              x => {\n                const prop = getByKeyPath(x, keyPath);\n                return isArray(prop) && prop.some(item => equals(value, item));\n              } : x => equals(value, getByKeyPath(x, keyPath)))\n          : prevFilterFn\n      ];\n    }, [null, null]);\n\n    return idx ?\n      this.where(idx.name).equals(indexOrCrit[idx.keyPath])\n        .filter(filterFunction) :\n      compoundIndex ?\n        this.filter(filterFunction) : // Has compound but browser bad. Allow filter.\n        this.where(keyPaths).equals(''); // No index at all. Fail lazily with \"[a+b+c] is not indexed\"\n  }\n\n  /** Table.filter()\n   * \n   * http://dexie.org/docs/Table/Table.filter()\n   * \n   **/\n  filter(filterFunction: (obj: any) => boolean) {\n    return this.toCollection().and(filterFunction);\n  }\n\n  /** Table.count()\n   * \n   * http://dexie.org/docs/Table/Table.count()\n   * \n   **/\n  count(thenShortcut?: any) {\n    return this.toCollection().count(thenShortcut);\n  }\n\n  /** Table.offset()\n   * \n   * http://dexie.org/docs/Table/Table.offset()\n   * \n   **/\n  offset(offset: number) {\n    return this.toCollection().offset(offset);\n  }\n\n  /** Table.limit()\n   * \n   * http://dexie.org/docs/Table/Table.limit()\n   * \n   **/\n  limit(numRows: number) {\n    return this.toCollection().limit(numRows);\n  }\n\n  /** Table.each()\n   * \n   * http://dexie.org/docs/Table/Table.each()\n   * \n   **/\n  each(callback: (obj: any, cursor: { key: IndexableType, primaryKey: IndexableType }) => any) {\n    return this.toCollection().each(callback);\n  }\n\n  /** Table.toArray()\n   * \n   * http://dexie.org/docs/Table/Table.toArray()\n   * \n   **/\n  toArray(thenShortcut?: any) {\n    return this.toCollection().toArray(thenShortcut);\n  }\n\n  /** Table.toCollection()\n   * \n   * http://dexie.org/docs/Table/Table.toCollection()\n   * \n   **/\n  toCollection() {\n    return new this.db.Collection(new this.db.WhereClause(this));\n  }\n\n  /** Table.orderBy()\n   * \n   * http://dexie.org/docs/Table/Table.orderBy()\n   * \n   **/\n  orderBy(index: string | string[]) {\n    return new this.db.Collection(\n      new this.db.WhereClause(this, isArray(index) ?\n        `[${index.join('+')}]` :\n        index));\n  }\n\n  /** Table.reverse()\n   * \n   * http://dexie.org/docs/Table/Table.reverse()\n   * \n   **/\n  reverse(): Collection {\n    return this.toCollection().reverse();\n  }\n\n  /** Table.mapToClass()\n   * \n   * http://dexie.org/docs/Table/Table.mapToClass()\n   * \n   **/\n  mapToClass(constructor: Function) {\n    this.schema.mappedClass = constructor;\n    // Now, subscribe to the when(\"reading\") event to make all objects that come out from this table inherit from given class\n    // no matter which method to use for reading (Table.get() or Table.where(...)... )\n    const readHook = obj => {\n      if (!obj) return obj; // No valid object. (Value is null). Return as is.\n      // Create a new object that derives from constructor:\n      const res = Object.create(constructor.prototype);\n      // Clone members:\n      for (var m in obj) if (hasOwn(obj, m)) try { res[m] = obj[m]; } catch (_) { }\n      return res;\n    };\n\n    if (this.schema.readHook) {\n      this.hook.reading.unsubscribe(this.schema.readHook);\n    }\n    this.schema.readHook = readHook;\n    this.hook(\"reading\", readHook);\n    return constructor;\n  }\n\n  /** @deprecated */\n  defineClass() {\n    function Class (content){\n      extend(this, content);\n    };\n    return this.mapToClass(Class);\n  }\n\n  /** Table.add()\n   * \n   * http://dexie.org/docs/Table/Table.add()\n   * \n   **/\n  add(obj, key?: IndexableType): PromiseExtended<IndexableType> {\n    const {auto, keyPath} = this.schema.primKey;\n    let objToAdd = obj;\n    if (keyPath && auto) {\n      objToAdd = workaroundForUndefinedPrimKey(keyPath)(obj);\n    }\n    return this._trans('readwrite', trans => {\n      return this.core.mutate({trans, type: 'add', keys: key != null ? [key] : null, values: [objToAdd]});\n    }).then(res => res.numFailures ? Promise.reject(res.failures[0]) : res.lastResult)\n    .then(lastResult => {\n      if (keyPath) {\n        // This part should be here for backward compatibility.\n        // If ever feeling too bad about this, please wait to a new major before removing it,\n        // and document the change thoroughly.\n        try{setByKeyPath(obj, keyPath, lastResult);}catch(_){};\n      }\n      return lastResult;\n    });\n  }\n\n  /** Table.update()\n   * \n   * http://dexie.org/docs/Table/Table.update()\n   * \n   **/\n  update(keyOrObject, modifications: { [keyPath: string]: any; }): PromiseExtended<number> {\n    if (typeof modifications !== 'object' || isArray(modifications))\n      throw new exceptions.InvalidArgument(\"Modifications must be an object.\");\n    if (typeof keyOrObject === 'object' && !isArray(keyOrObject)) {\n      // object to modify. Also modify given object with the modifications:\n      keys(modifications).forEach(keyPath => {\n        setByKeyPath(keyOrObject, keyPath, modifications[keyPath]);\n      });\n      const key = getByKeyPath(keyOrObject, this.schema.primKey.keyPath);\n      if (key === undefined) return rejection(new exceptions.InvalidArgument(\n        \"Given object does not contain its primary key\"));\n      return this.where(\":id\").equals(key).modify(modifications);\n    } else {\n      // key to modify\n      return this.where(\":id\").equals(keyOrObject).modify(modifications);\n    }\n  }\n\n  /** Table.put()\n   * \n   * http://dexie.org/docs/Table/Table.put()\n   * \n   **/\n  put(obj, key?: IndexableType): PromiseExtended<IndexableType> {\n    const {auto, keyPath} = this.schema.primKey;\n    let objToAdd = obj;\n    if (keyPath && auto) {\n      objToAdd = workaroundForUndefinedPrimKey(keyPath)(obj);\n    }\n    return this._trans(\n      'readwrite',\n      trans => this.core.mutate({trans, type: 'put', values: [objToAdd], keys: key != null ? [key] : null}))\n    .then(res => res.numFailures ? Promise.reject(res.failures[0]) : res.lastResult)\n    .then(lastResult => {\n      if (keyPath) {\n        // This part should be here for backward compatibility.\n        // If ever feeling too bad about this, please wait to a new major before removing it,\n        // and document the change thoroughly.\n        try{setByKeyPath(obj, keyPath, lastResult);}catch(_){};\n      }\n      return lastResult;\n    });\n  }\n\n  /** Table.delete()\n   * \n   * http://dexie.org/docs/Table/Table.delete()\n   * \n   **/\n  delete(key: IndexableType): PromiseExtended<void> {\n    return this._trans('readwrite',\n      trans => this.core.mutate({trans, type: 'delete', keys: [key]}))\n    .then(res => res.numFailures ? Promise.reject(res.failures[0]) : undefined);\n  }\n\n  /** Table.clear()\n   * \n   * http://dexie.org/docs/Table/Table.clear()\n   * \n   **/\n  clear() {\n    return this._trans('readwrite',\n      trans => this.core.mutate({trans, type: 'deleteRange', range: AnyRange}))\n        .then(res => res.numFailures ? Promise.reject(res.failures[0]) : undefined);\n  }\n\n  /** Table.bulkGet()\n   * \n   * http://dexie.org/docs/Table/Table.bulkGet()\n   * \n   * @param keys \n   */\n  bulkGet(keys: IndexableType[]) {\n    return this._trans('readonly', trans => {\n      return this.core.getMany({\n        keys,\n        trans\n      }).then(result => result.map(res => this.hook.reading.fire(res)));\n    });\n  }\n\n  /** Table.bulkAdd()\n   * \n   * http://dexie.org/docs/Table/Table.bulkAdd()\n   * \n   **/\n  bulkAdd(\n    objects: any[],\n    keysOrOptions?: ReadonlyArray<IndexableType> | { allKeys?: boolean },\n    options?: { allKeys?: boolean }\n  ) {    \n    const keys = Array.isArray(keysOrOptions) ? keysOrOptions : undefined;\n    options = options || (keys ? undefined : keysOrOptions as { allKeys?: boolean });\n    const wantResults = options ? options.allKeys : undefined;\n\n    return this._trans('readwrite', trans => {\n      const {auto, keyPath} = this.schema.primKey;\n      if (keyPath && keys)\n        throw new exceptions.InvalidArgument(\"bulkAdd(): keys argument invalid on tables with inbound keys\");\n      if (keys && keys.length !== objects.length)\n        throw new exceptions.InvalidArgument(\"Arguments objects and keys must have the same length\");\n\n      const numObjects = objects.length; // Pick length here to allow garbage collection of objects later\n      let objectsToAdd = keyPath && auto ?\n        objects.map(workaroundForUndefinedPrimKey(keyPath)) :\n        objects;\n      return this.core.mutate(\n        {trans, type: 'add', keys: keys as IndexableType[], values: objectsToAdd, wantResults}\n      )\n        .then(({numFailures, results,lastResult, failures}) => {\n          const result = wantResults ? results : lastResult;\n          if (numFailures === 0) return result;\n          throw new BulkError(\n            `${this.name}.bulkAdd(): ${numFailures} of ${numObjects} operations failed`,\n              Object.keys(failures).map(pos => failures[pos]));\n        });\n    });\n  }\n\n  /** Table.bulkPut()\n   * \n   * http://dexie.org/docs/Table/Table.bulkPut()\n   * \n   **/\n  bulkPut(\n    objects: any[],\n    keysOrOptions?: ReadonlyArray<IndexableType> | { allKeys?: boolean },\n    options?: { allKeys?: boolean }\n  ) {   \n    const keys = Array.isArray(keysOrOptions) ? keysOrOptions : undefined;\n    options = options || (keys ? undefined : keysOrOptions as { allKeys?: boolean });\n    const wantResults = options ? options.allKeys : undefined;\n\n    return this._trans('readwrite', trans => {\n      const {auto, keyPath} = this.schema.primKey;\n      if (keyPath && keys)\n        throw new exceptions.InvalidArgument(\"bulkPut(): keys argument invalid on tables with inbound keys\");\n      if (keys && keys.length !== objects.length)\n        throw new exceptions.InvalidArgument(\"Arguments objects and keys must have the same length\");\n\n      const numObjects = objects.length; // Pick length here to allow garbage collection of objects later\n      let objectsToPut = keyPath && auto ?\n        objects.map(workaroundForUndefinedPrimKey(keyPath)) :\n        objects;\n\n      return this.core.mutate(\n        {trans, type: 'put', keys: keys as IndexableType[], values: objectsToPut, wantResults}\n      )\n        .then(({numFailures, results, lastResult, failures}) => {\n          const result = wantResults ? results : lastResult;\n          if (numFailures === 0) return result;\n          throw new BulkError(\n            `${this.name}.bulkPut(): ${numFailures} of ${numObjects} operations failed`,\n              Object.keys(failures).map(pos => failures[pos]));\n        });\n    });\n  }\n\n  /** Table.bulkDelete()\n   * \n   * http://dexie.org/docs/Table/Table.bulkDelete()\n   * \n   **/\n  bulkDelete(keys: ReadonlyArray<IndexableType>): PromiseExtended<void> {\n    const numKeys = keys.length;\n    return this._trans('readwrite', trans => {\n      return this.core.mutate({trans, type: 'delete', keys: keys as IndexableType[]});\n    }).then(({numFailures, lastResult, failures}) => {\n      if (numFailures === 0) return lastResult;\n      throw new BulkError(\n        `${this.name}.bulkDelete(): ${numFailures} of ${numKeys} operations failed`, failures);\n    });\n  }\n}\n","import { PSD, rejection, newScope } from \"../helpers/promise\";\nimport { DexieOptions } from \"../public/types/dexie-constructor\";\nimport { exceptions } from \"../errors\";\nimport { nop } from \"./chaining-functions\";\nimport { Transaction } from \"../classes/transaction\";\nimport { Dexie } from '../classes/dexie';\n\n/* Generate a temporary transaction when db operations are done outside a transaction scope.\n*/\nexport function tempTransaction (\n  db: Dexie,\n  mode: IDBTransactionMode,\n  storeNames: string[],\n  fn: (resolve, reject, trans: Transaction) => any)\n  // Last argument is \"writeLocked\". But this doesnt apply to oneshot direct db operations, so we ignore it.\n{\n  if (!db._state.openComplete && (!PSD.letThrough)) {\n    if (!db._state.isBeingOpened) {\n      if (!db._options.autoOpen)\n        return rejection(new exceptions.DatabaseClosed());\n      db.open().catch(nop); // Open in background. If if fails, it will be catched by the final promise anyway.\n    }\n    return db._state.dbReadyPromise.then(() => tempTransaction(db, mode, storeNames, fn));\n  } else {\n    var trans = db._createTransaction(mode, storeNames, db._dbSchema);\n    try { trans.create(); } catch (ex) { return rejection(ex); }\n    return trans._promise(mode, (resolve, reject) => {\n      return newScope(() => { // OPTIMIZATION POSSIBLE? newScope() not needed because it's already done in _promise.\n        PSD.trans = trans;\n        return fn(resolve, reject, trans);\n      });\n    }).then(result => {\n      // Instead of resolving value directly, wait with resolving it until transaction has completed.\n      // Otherwise the data would not be in the DB if requesting it in the then() operation.\n      // Specifically, to ensure that the following expression will work:\n      //\n      //   db.friends.put({name: \"Arne\"}).then(function () {\n      //       db.friends.where(\"name\").equals(\"Arne\").count(function(count) {\n      //           assert (count === 1);\n      //       });\n      //   });\n      //\n      return trans._completion.then(() => result);\n    });/*.catch(err => { // Don't do this as of now. If would affect bulk- and modify methods in a way that could be more intuitive. But wait! Maybe change in next major.\n          trans._reject(err);\n          return rejection(err);\n      });*/\n  }\n}\n","import { Collection as ICollection } from \"../../public/types/collection\";\nimport { Dexie } from \"../dexie\";\nimport { Table } from \"../table\";\nimport { IndexableType, IndexableTypeArrayReadonly } from \"../../public/types/indexable-type\";\nimport { PromiseExtended } from \"../../public/types/promise-extended\";\nimport { iter, isPlainKeyRange, getIndexOrStore, addReplayFilter, addFilter, addMatchFilter } from \"./collection-helpers\";\nimport { rejection } from \"../../helpers/promise\";\nimport { combine } from \"../../functions/combine\";\nimport { extend, hasOwn, deepClone, keys, setByKeyPath, getByKeyPath } from \"../../functions/utils\";\nimport { ModifyError } from \"../../errors\";\nimport { hangsOnDeleteLargeKeyRange } from \"../../globals/constants\";\nimport { ThenShortcut } from \"../../public/types/then-shortcut\";\nimport { Transaction } from '../transaction';\nimport { DBCoreCursor, DBCoreTransaction, DBCoreRangeType, DBCoreMutateResponse, DBCoreKeyRange } from '../../public/types/dbcore';\n\n/** class Collection\n * \n * http://dexie.org/docs/Collection/Collection\n */\nexport class Collection implements ICollection {\n  db: Dexie;\n  _ctx: {\n    table: Table;\n    index?: string | null;\n    isPrimKey?: boolean;\n    range: DBCoreKeyRange;\n    keysOnly: boolean;\n    dir: \"next\" | \"prev\";\n    unique: \"\" | \"unique\";\n    algorithm?: Function | null;\n    filter?: Function | null;\n    replayFilter: Function | null;\n    justLimit: boolean; // True if a replayFilter is just a filter that performs a \"limit\" operation (or none at all)\n    isMatch: Function | null;\n    offset: number,\n    limit: number,\n    error: any, // If set, any promise must be rejected with this error\n    or: Collection,\n    valueMapper: (any) => any\n  }\n  \n  _ondirectionchange?: Function;\n\n  _read<T>(fn: (idbtrans: IDBTransaction, dxTrans: Transaction) => PromiseLike<T>, cb?): PromiseExtended<T> {\n    var ctx = this._ctx;\n    return ctx.error ?\n      ctx.table._trans(null, rejection.bind(null, ctx.error)) :\n      ctx.table._trans('readonly', fn).then(cb);\n  }\n\n  _write<T>(fn: (idbtrans: IDBTransaction, dxTrans: Transaction) => PromiseLike<T>): PromiseExtended<T> {\n    var ctx = this._ctx;\n    return ctx.error ?\n      ctx.table._trans(null, rejection.bind(null, ctx.error)) :\n      ctx.table._trans('readwrite', fn, \"locked\"); // When doing write operations on collections, always lock the operation so that upcoming operations gets queued.\n  }\n\n  _addAlgorithm(fn) {\n    var ctx = this._ctx;\n    ctx.algorithm = combine(ctx.algorithm, fn);\n  }\n\n  _iterate(\n    fn: (item, cursor: DBCoreCursor, advance: Function) => void,\n    coreTrans: DBCoreTransaction) : Promise<any>\n  {\n    return iter(this._ctx, fn, coreTrans, this._ctx.table.core);\n  }\n\n  /** Collection.clone()\n   * \n   * http://dexie.org/docs/Collection/Collection.clone()\n   * \n   **/\n  clone(props?) {\n    var rv = Object.create(this.constructor.prototype),\n      ctx = Object.create(this._ctx);\n    if (props) extend(ctx, props);\n    rv._ctx = ctx;\n    return rv;\n  }\n\n  /** Collection.raw()\n   * \n   * http://dexie.org/docs/Collection/Collection.raw()\n   * \n   **/\n  raw() {\n    this._ctx.valueMapper = null;\n    return this;\n  }\n\n  /** Collection.each()\n   * \n   * http://dexie.org/docs/Collection/Collection.each()\n   * \n   **/\n  each(fn: (obj, cursor: DBCoreCursor) => any): PromiseExtended<void> {\n    var ctx = this._ctx;\n\n    return this._read(trans => iter(ctx, fn, trans, ctx.table.core));\n  }\n\n  /** Collection.count()\n   * \n   * http://dexie.org/docs/Collection/Collection.count()\n   * \n   **/\n  count(cb?) {\n    return this._read(trans => {\n      const ctx = this._ctx;\n      const coreTable = ctx.table.core;\n      if (isPlainKeyRange(ctx, true)) {\n        // This is a plain key range. We can use the count() method if the index.\n        return coreTable.count({\n          trans,\n          query: {\n            index: getIndexOrStore(ctx, coreTable.schema),\n            range: ctx.range\n          }\n        }).then(count => Math.min(count, ctx.limit));\n      } else {\n        // Algorithms, filters or expressions are applied. Need to count manually.\n        var count = 0;\n        return iter(ctx, () => { ++count; return false; }, trans, coreTable)\n        .then(()=>count);\n      }\n    }).then(cb);\n  }\n\n  /** Collection.sortBy()\n   * \n   * http://dexie.org/docs/Collection/Collection.sortBy()\n   * \n   **/\n  sortBy(keyPath: string): PromiseExtended<any[]>;\n  sortBy<R>(keyPath: string, thenShortcut: ThenShortcut<any[], R>) : PromiseExtended<R>;\n  sortBy(keyPath: string, cb?: ThenShortcut<any[], any>) {\n    const parts = keyPath.split('.').reverse(),\n      lastPart = parts[0],\n      lastIndex = parts.length - 1;\n    function getval(obj, i) {\n      if (i) return getval(obj[parts[i]], i - 1);\n      return obj[lastPart];\n    }\n    var order = this._ctx.dir === \"next\" ? 1 : -1;\n\n    function sorter(a, b) {\n      var aVal = getval(a, lastIndex),\n        bVal = getval(b, lastIndex);\n      return aVal < bVal ? -order : aVal > bVal ? order : 0;\n    }\n    return this.toArray(function (a) {\n      return a.sort(sorter);\n    }).then(cb);\n  }\n\n  /** Collection.toArray()\n   * \n   * http://dexie.org/docs/Collection/Collection.toArray()\n   * \n   **/\n  toArray(cb?): PromiseExtended<any[]> {\n    return this._read(trans => {\n      var ctx = this._ctx;\n      if (ctx.dir === 'next' && isPlainKeyRange(ctx, true) && ctx.limit > 0) {\n        // Special optimation if we could use IDBObjectStore.getAll() or\n        // IDBKeyRange.getAll():\n        const {valueMapper} = ctx;\n        const index = getIndexOrStore(ctx, ctx.table.core.schema);\n        return ctx.table.core.query({\n          trans,\n          limit: ctx.limit,\n          values: true,\n          query: {\n            index,\n            range: ctx.range\n          }\n        }).then(({result}) => valueMapper ? result.map(valueMapper) : result);\n      } else {\n        // Getting array through a cursor.\n        const a = [];\n        return iter(ctx, item => a.push(item), trans, ctx.table.core).then(()=>a);\n      }\n    }, cb);\n  }\n\n  /** Collection.offset()\n   * \n   * http://dexie.org/docs/Collection/Collection.offset()\n   * \n   **/\n  offset(offset: number) : Collection{\n    var ctx = this._ctx;\n    if (offset <= 0) return this;\n    ctx.offset += offset; // For count()\n    if (isPlainKeyRange(ctx)) {\n      addReplayFilter(ctx, () => {\n        var offsetLeft = offset;\n        return (cursor, advance) => {\n          if (offsetLeft === 0) return true;\n          if (offsetLeft === 1) { --offsetLeft; return false; }\n          advance(() => {\n            cursor.advance(offsetLeft);\n            offsetLeft = 0;\n          });\n          return false;\n        };\n      });\n    } else {\n      addReplayFilter(ctx, () => {\n        var offsetLeft = offset;\n        return () => (--offsetLeft < 0);\n      });\n    }\n    return this;\n  }\n\n  /** Collection.limit()\n   * \n   * http://dexie.org/docs/Collection/Collection.limit()\n   * \n   **/\n  limit(numRows: number) : Collection {\n    this._ctx.limit = Math.min(this._ctx.limit, numRows); // For count()\n    addReplayFilter(this._ctx, () => {\n      var rowsLeft = numRows;\n      return function (cursor, advance, resolve) {\n        if (--rowsLeft <= 0) advance(resolve); // Stop after this item has been included\n        return rowsLeft >= 0; // If numRows is already below 0, return false because then 0 was passed to numRows initially. Otherwise we wouldnt come here.\n      };\n    }, true);\n    return this;\n  }\n\n  /** Collection.until()\n   * \n   * http://dexie.org/docs/Collection/Collection.until()\n   * \n   **/\n  until(filterFunction: (x) => boolean, bIncludeStopEntry?) {\n    addFilter(this._ctx, function (cursor, advance, resolve) {\n      if (filterFunction(cursor.value)) {\n        advance(resolve);\n        return bIncludeStopEntry;\n      } else {\n        return true;\n      }\n    });\n    return this;\n  }\n\n  /** Collection.first()\n   * \n   * http://dexie.org/docs/Collection/Collection.first()\n   * \n   **/\n  first(cb?) {\n    return this.limit(1).toArray(function (a) { return a[0]; }).then(cb);\n  }\n\n  /** Collection.last()\n   * \n   * http://dexie.org/docs/Collection/Collection.last()\n   * \n   **/\n  last(cb?) {\n    return this.reverse().first(cb);\n  }\n\n  /** Collection.filter()\n   * \n   * http://dexie.org/docs/Collection/Collection.filter()\n   * \n   **/\n  filter(filterFunction: (x) => boolean): Collection {\n    /// <param name=\"jsFunctionFilter\" type=\"Function\">function(val){return true/false}</param>\n    addFilter(this._ctx, function (cursor) {\n      return filterFunction(cursor.value);\n    });\n    // match filters not used in Dexie.js but can be used by 3rd part libraries to test a\n    // collection for a match without querying DB. Used by Dexie.Observable.\n    addMatchFilter(this._ctx, filterFunction);\n    return this;\n  }\n\n  /** Collection.and()\n   * \n   * http://dexie.org/docs/Collection/Collection.and()\n   * \n   **/\n  and(filter: (x) => boolean) {\n    return this.filter(filter);\n  }\n\n  /** Collection.or()\n   * \n   * http://dexie.org/docs/Collection/Collection.or()\n   * \n   **/\n  or(indexName: string) {\n    return new this.db.WhereClause(this._ctx.table, indexName, this);\n  }\n\n  /** Collection.reverse()\n   * \n   * http://dexie.org/docs/Collection/Collection.reverse()\n   * \n   **/\n  reverse() {\n    this._ctx.dir = (this._ctx.dir === \"prev\" ? \"next\" : \"prev\");\n    if (this._ondirectionchange) this._ondirectionchange(this._ctx.dir);\n    return this;\n  }\n\n  /** Collection.desc()\n   * \n   * http://dexie.org/docs/Collection/Collection.desc()\n   * \n   **/\n  desc() {\n    return this.reverse();\n  }\n\n  /** Collection.eachKey()\n   * \n   * http://dexie.org/docs/Collection/Collection.eachKey()\n   * \n   **/\n  eachKey(cb?) {\n    var ctx = this._ctx;\n    ctx.keysOnly = !ctx.isMatch;\n    return this.each(function (val, cursor) { cb(cursor.key, cursor); });\n  }\n\n  /** Collection.eachUniqueKey()\n   * \n   * http://dexie.org/docs/Collection/Collection.eachUniqueKey()\n   * \n   **/\n  eachUniqueKey(cb?) {\n    this._ctx.unique = \"unique\";\n    return this.eachKey(cb);\n  }\n\n  /** Collection.eachPrimaryKey()\n   * \n   * http://dexie.org/docs/Collection/Collection.eachPrimaryKey()\n   * \n   **/\n  eachPrimaryKey(cb?) {\n    var ctx = this._ctx;\n    ctx.keysOnly = !ctx.isMatch;\n    return this.each(function (val, cursor) { cb(cursor.primaryKey, cursor); });\n  }\n\n  /** Collection.keys()\n   * \n   * http://dexie.org/docs/Collection/Collection.keys()\n   * \n   **/\n  keys(cb?) {\n    var ctx = this._ctx;\n    ctx.keysOnly = !ctx.isMatch;\n    var a = [];\n    return this.each(function (item, cursor) {\n      a.push(cursor.key);\n    }).then(function () {\n      return a;\n    }).then(cb);\n  }\n\n  /** Collection.primaryKeys()\n   * \n   * http://dexie.org/docs/Collection/Collection.primaryKeys()\n   * \n   **/\n  primaryKeys(cb?) : PromiseExtended<IndexableType[]> {\n    var ctx = this._ctx;\n    if (ctx.dir === 'next' && isPlainKeyRange(ctx, true) && ctx.limit > 0) {\n      // Special optimation if we could use IDBObjectStore.getAllKeys() or\n      // IDBKeyRange.getAllKeys():\n      return this._read(trans => {\n        var index = getIndexOrStore(ctx, ctx.table.core.schema);\n        return ctx.table.core.query({\n          trans,\n          values: false,\n          limit: ctx.limit,\n          query: {\n            index,\n            range: ctx.range\n          }});\n      }).then(({result})=>result).then(cb);\n    }\n    ctx.keysOnly = !ctx.isMatch;\n    var a = [];\n    return this.each(function (item, cursor) {\n      a.push(cursor.primaryKey);\n    }).then(function () {\n      return a;\n    }).then(cb);\n  }\n\n  /** Collection.uniqueKeys()\n   * \n   * http://dexie.org/docs/Collection/Collection.uniqueKeys()\n   * \n   **/\n  uniqueKeys(cb?) {\n    this._ctx.unique = \"unique\";\n    return this.keys(cb);\n  }\n\n  /** Collection.firstKey()\n   * \n   * http://dexie.org/docs/Collection/Collection.firstKey()\n   * \n   **/\n  firstKey(cb?) {\n    return this.limit(1).keys(function (a) { return a[0]; }).then(cb);\n  }\n\n  /** Collection.lastKey()\n   * \n   * http://dexie.org/docs/Collection/Collection.lastKey()\n   * \n   **/\n  lastKey(cb?) {\n    return this.reverse().firstKey(cb);\n  }\n\n  /** Collection.distinct()\n   * \n   * http://dexie.org/docs/Collection/Collection.distinct()\n   * \n   **/\n  distinct() {\n    var ctx = this._ctx,\n      idx = ctx.index && ctx.table.schema.idxByName[ctx.index];\n    if (!idx || !idx.multi) return this; // distinct() only makes differencies on multiEntry indexes.\n    var set = {};\n    addFilter(this._ctx, function (cursor: DBCoreCursor) {\n      var strKey = cursor.primaryKey.toString(); // Converts any Date to String, String to String, Number to String and Array to comma-separated string\n      var found = hasOwn(set, strKey);\n      set[strKey] = true;\n      return !found;\n    });\n    return this;\n  }\n\n  //\n  // Methods that mutate storage\n  //\n\n  /** Collection.modify()\n   * \n   * http://dexie.org/docs/Collection/Collection.modify()\n   * \n   **/\n  modify(changes: { [keyPath: string]: any }) : PromiseExtended<number>\n  modify(changes: (obj: any, ctx:{value: any, primKey: IndexableType}) => void | boolean): PromiseExtended<number> {\n    var ctx = this._ctx;\n    return this._write(trans => {\n      var modifyer: (obj: any, ctx:{value: any, primKey: IndexableType}) => void | boolean\n      if (typeof changes === 'function') {\n        // Changes is a function that may update, add or delete propterties or even require a deletion the object itself (delete this.item)\n        modifyer = changes;\n      } else {\n        // changes is a set of {keyPath: value} and no one is listening to the updating hook.\n        var keyPaths = keys(changes);\n        var numKeys = keyPaths.length;\n        modifyer = function (item) {\n          var anythingModified = false;\n          for (var i = 0; i < numKeys; ++i) {\n            var keyPath = keyPaths[i], val = changes[keyPath];\n            if (getByKeyPath(item, keyPath) !== val) {\n              setByKeyPath(item, keyPath, val); // Adding {keyPath: undefined} means that the keyPath should be deleted. Handled by setByKeyPath\n              anythingModified = true;\n            }\n          }\n          return anythingModified;\n        };\n      }\n\n      const coreTable = ctx.table.core;\n      const {outbound, extractKey} = coreTable.schema.primaryKey;\n      const limit = 'testmode' in Dexie ? 1 : 2000;\n      const {cmp} = this.db.core;\n      const totalFailures = [];\n      let successCount = 0;\n      const failedKeys: IndexableType[] = [];\n      const applyMutateResult = (expectedCount: number, res: DBCoreMutateResponse) => {\n        const {failures, numFailures} = res;\n        successCount += expectedCount - numFailures;\n        for (let pos of keys(failures)) {\n          totalFailures.push(failures[pos]);\n        }\n      }\n      return this.clone().primaryKeys().then(keys => {\n\n        const nextChunk = (offset: number) => {\n          const count = Math.min(limit, keys.length - offset);\n          return coreTable.getMany({trans, keys: keys.slice(offset, offset + count)}).then(values => {\n            const addValues = [];\n            const putValues = [];\n            const putKeys = outbound ? [] : null;\n            const deleteKeys = [];\n            for (let i=0; i<count; ++i) {\n              const origValue = values[i];\n              const ctx = {\n                value: deepClone(origValue),\n                primKey: keys[offset+i]\n              };\n              if (modifyer.call(ctx, ctx.value, ctx) !== false) {\n                if (ctx.value == null) {\n                  // Deleted\n                  deleteKeys.push(keys[offset+i]);\n                } else if (!outbound && cmp(extractKey(origValue), extractKey(ctx.value)) !== 0) {\n                  // Changed primary key of inbound\n                  deleteKeys.push(keys[offset+i]);\n                  addValues.push(ctx.value)\n                } else {\n                  // Changed value\n                  putValues.push(ctx.value);\n                  if (outbound) putKeys.push(keys[offset+i]);\n                }\n              }\n            }\n            \n            return Promise.resolve(addValues.length > 0 &&\n              coreTable.mutate({trans, type: 'add', values: addValues})\n                .then(res => {\n                  for (let pos in res.failures) {\n                    // Remove from deleteKeys the key of the object that failed to change its primary key\n                    deleteKeys.splice(parseInt(pos), 1);\n                  }\n                  applyMutateResult(addValues.length, res);\n                })\n            ).then(res=>putValues.length > 0 &&\n                coreTable.mutate({trans, type: 'put', keys: putKeys, values: putValues})\n                  .then(res=>applyMutateResult(putValues.length, res))\n            ).then(()=>deleteKeys.length > 0 &&\n                coreTable.mutate({trans, type: 'delete', keys: deleteKeys})\n                  .then(res=>applyMutateResult(deleteKeys.length, res))\n            ).then(()=>{\n              return keys.length > offset + count && nextChunk(offset + limit);\n            });\n          });\n        }\n\n        return nextChunk(0).then(()=>{\n          if (totalFailures.length > 0)\n            throw new ModifyError(\"Error modifying one or more objects\", totalFailures, successCount, failedKeys as IndexableTypeArrayReadonly);\n\n          return keys.length;\n        });\n      });\n\n    });\n  }\n\n  /** Collection.delete()\n   * \n   * http://dexie.org/docs/Collection/Collection.delete()\n   * \n   **/\n  delete() : PromiseExtended<number> {\n    var ctx = this._ctx,\n      range = ctx.range;\n      //deletingHook = ctx.table.hook.deleting.fire,\n      //hasDeleteHook = deletingHook !== nop;\n    if (isPlainKeyRange(ctx) &&\n      ((ctx.isPrimKey && !hangsOnDeleteLargeKeyRange) || range.type === DBCoreRangeType.Any)) // if no range, we'll use clear().\n    {\n      // May use IDBObjectStore.delete(IDBKeyRange) in this case (Issue #208)\n      // For chromium, this is the way most optimized version.\n      // For IE/Edge, this could hang the indexedDB engine and make operating system instable\n      // (https://gist.github.com/dfahlander/5a39328f029de18222cf2125d56c38f7)\n      return this._write(trans => {\n        // Our API contract is to return a count of deleted items, so we have to count() before delete().\n        const {primaryKey} = ctx.table.core.schema;\n        const coreRange = range;\n        return ctx.table.core.count({trans, query: {index: primaryKey, range: coreRange}}).then(count => {\n          return ctx.table.core.mutate({trans, type: 'deleteRange', range: coreRange})\n          .then(({failures, lastResult, results, numFailures}) => {\n            if (numFailures) throw new ModifyError(\"Could not delete some values\",\n              Object.keys(failures).map(pos => failures[pos]),\n              count - numFailures);\n            return count - numFailures;\n          });\n        });\n      });\n    }\n\n    return this.modify((value, ctx) => ctx.value = null);\n  }\n}\n\n\n","import { WhereClause as IWhereClause } from \"../../public/types/where-clause\";\nimport { Collection } from \"../collection\";\nimport { Table } from \"../table\";\nimport { IndexableType } from \"../../public/types/indexable-type\";\nimport { emptyCollection, fail, addIgnoreCaseAlgorithm, createRange, rangeEqual } from './where-clause-helpers';\nimport { INVALID_KEY_ARGUMENT, STRING_EXPECTED, maxString, minKey } from '../../globals/constants';\nimport { getArrayOf, NO_CHAR_ARRAY } from '../../functions/utils';\nimport { exceptions } from '../../errors';\nimport { Dexie } from '../dexie';\nimport { Collection as ICollection} from \"../../public/types/collection\";\n\n/** class WhereClause\n * \n * http://dexie.org/docs/WhereClause/WhereClause\n */\nexport class WhereClause implements IWhereClause {\n  db: Dexie;\n  _IDBKeyRange: typeof IDBKeyRange;\n  _ctx: {\n    table: Table;\n    index: string;\n    or: Collection;\n  }\n  _cmp: (a: IndexableType, b: IndexableType) => number;\n  _ascending: (a: IndexableType, b: IndexableType) => number;\n  _descending: (a: IndexableType, b: IndexableType) => number;\n  _min: (a: IndexableType, b: IndexableType) => IndexableType;\n  _max: (a: IndexableType, b: IndexableType) => IndexableType;\n\n  get Collection() {\n    return this._ctx.table.db.Collection;\n  }\n\n  /** WhereClause.between()\n   * \n   * http://dexie.org/docs/WhereClause/WhereClause.between()\n   * \n   **/\n  between(lower: IndexableType, upper: IndexableType, includeLower?: boolean, includeUpper?: boolean) {\n    includeLower = includeLower !== false;   // Default to true\n    includeUpper = includeUpper === true;    // Default to false\n    try {\n      if ((this._cmp(lower, upper) > 0) ||\n        (this._cmp(lower, upper) === 0 && (includeLower || includeUpper) && !(includeLower && includeUpper)))\n        return emptyCollection(this); // Workaround for idiotic W3C Specification that DataError must be thrown if lower > upper. The natural result would be to return an empty collection.\n      return new this.Collection(this, ()=>createRange(lower, upper, !includeLower, !includeUpper));\n    } catch (e) {\n      return fail(this, INVALID_KEY_ARGUMENT);\n    }\n  }\n\n  /** WhereClause.equals()\n   * \n   * http://dexie.org/docs/WhereClause/WhereClause.equals()\n   * \n   **/\n  equals(value: IndexableType) {\n    if (value == null) return fail(this, INVALID_KEY_ARGUMENT);\n    return new this.Collection(this, () => rangeEqual(value)) as ICollection;\n  }\n\n  /** WhereClause.above()\n   * \n   * http://dexie.org/docs/WhereClause/WhereClause.above()\n   * \n   **/\n  above(value: IndexableType) {\n    if (value == null) return fail(this, INVALID_KEY_ARGUMENT);\n    return new this.Collection(this, () => createRange(value, undefined, true));\n  }\n\n  /** WhereClause.aboveOrEqual()\n   * \n   * http://dexie.org/docs/WhereClause/WhereClause.aboveOrEqual()\n   * \n   **/\n  aboveOrEqual(value: IndexableType) {\n    if (value == null) return fail(this, INVALID_KEY_ARGUMENT);\n    return new this.Collection(this, () => createRange(value, undefined, false));\n  }\n\n  /** WhereClause.below()\n   * \n   * http://dexie.org/docs/WhereClause/WhereClause.below()\n   * \n   **/\n  below(value: IndexableType) {\n    if (value == null) return fail(this, INVALID_KEY_ARGUMENT);\n    return new this.Collection(this, () => createRange(undefined, value, false, true));\n  }\n\n  /** WhereClause.belowOrEqual()\n   * \n   * http://dexie.org/docs/WhereClause/WhereClause.belowOrEqual()\n   * \n   **/\n  belowOrEqual(value: IndexableType) {\n    if (value == null) return fail(this, INVALID_KEY_ARGUMENT);\n    return new this.Collection(this, () => createRange(undefined, value));\n  }\n\n  /** WhereClause.startsWith()\n   * \n   * http://dexie.org/docs/WhereClause/WhereClause.startsWith()\n   * \n   **/\n  startsWith(str: string) {\n    if (typeof str !== 'string') return fail(this, STRING_EXPECTED);\n    return this.between(str, str + maxString, true, true);\n  }\n\n  /** WhereClause.startsWithIgnoreCase()\n   * \n   * http://dexie.org/docs/WhereClause/WhereClause.startsWithIgnoreCase()\n   * \n   **/\n  startsWithIgnoreCase(str: string) {\n    if (str === \"\") return this.startsWith(str);\n    return addIgnoreCaseAlgorithm(this, (x, a) => x.indexOf(a[0]) === 0, [str], maxString);\n  }\n\n  /** WhereClause.equalsIgnoreCase()\n   * \n   * http://dexie.org/docs/WhereClause/WhereClause.equalsIgnoreCase()\n   * \n   **/\n  equalsIgnoreCase(str: string) {\n    return addIgnoreCaseAlgorithm(this, (x, a) => x === a[0], [str], \"\");\n  }\n\n  /** WhereClause.anyOfIgnoreCase()\n   * \n   * http://dexie.org/docs/WhereClause/WhereClause.anyOfIgnoreCase()\n   * \n   **/\n  anyOfIgnoreCase(...values: string[]): Collection;\n  anyOfIgnoreCase(values: string[]): Collection;\n  anyOfIgnoreCase() {\n    var set = getArrayOf.apply(NO_CHAR_ARRAY, arguments);\n    if (set.length === 0) return emptyCollection(this);\n    return addIgnoreCaseAlgorithm(this, (x, a) => a.indexOf(x) !== -1, set, \"\");\n  }\n\n  /** WhereClause.startsWithAnyOfIgnoreCase()\n   * \n   * http://dexie.org/docs/WhereClause/WhereClause.startsWithAnyOfIgnoreCase()\n   * \n   **/\n  startsWithAnyOfIgnoreCase(...values: string[]): Collection;\n  startsWithAnyOfIgnoreCase(values: string[]): Collection;\n  startsWithAnyOfIgnoreCase() {\n    var set = getArrayOf.apply(NO_CHAR_ARRAY, arguments);\n    if (set.length === 0) return emptyCollection(this);\n    return addIgnoreCaseAlgorithm(this, (x, a) => a.some(n => x.indexOf(n) === 0), set, maxString);\n  }\n\n  /** WhereClause.anyOf()\n   * \n   * http://dexie.org/docs/WhereClause/WhereClause.anyOf()\n   * \n   **/\n  anyOf(...values: string[]): Collection;\n  anyOf(values: string[]): Collection;\n  anyOf() {\n    const set = getArrayOf.apply(NO_CHAR_ARRAY, arguments);\n    let compare = this._cmp;\n    try { set.sort(compare); } catch (e) { return fail(this, INVALID_KEY_ARGUMENT); }\n    if (set.length === 0) return emptyCollection(this);\n    const c = new this.Collection(this, () => createRange(set[0], set[set.length - 1]));\n\n    c._ondirectionchange = direction => {\n      compare = (direction === \"next\" ?\n        this._ascending :\n        this._descending);\n      set.sort(compare);\n    };\n\n    let i = 0;\n    c._addAlgorithm((cursor, advance, resolve) => {\n      const key = cursor.key;\n      while (compare(key, set[i]) > 0) {\n        // The cursor has passed beyond this key. Check next.\n        ++i;\n        if (i === set.length) {\n          // There is no next. Stop searching.\n          advance(resolve);\n          return false;\n        }\n      }\n      if (compare(key, set[i]) === 0) {\n        // The current cursor value should be included and we should continue a single step in case next item has the same key or possibly our next key in set.\n        return true;\n      } else {\n        // cursor.key not yet at set[i]. Forward cursor to the next key to hunt for.\n        advance(() => { cursor.continue(set[i]); });\n        return false;\n      }\n    });\n    return c;\n  }\n\n  /** WhereClause.notEqual()\n   * \n   * http://dexie.org/docs/WhereClause/WhereClause.notEqual()\n   * \n   **/\n  notEqual(value: IndexableType) {\n    return this.inAnyRange([[minKey, value], [value, this.db._maxKey]], { includeLowers: false, includeUppers: false });\n  }\n\n  /** WhereClause.noneOf()\n   * \n   * http://dexie.org/docs/WhereClause/WhereClause.noneOf()\n   * \n   **/\n  noneOf(...values: string[]): Collection;\n  noneOf(values: string[]): Collection;\n  noneOf() {\n    const set = getArrayOf.apply(NO_CHAR_ARRAY, arguments);\n    if (set.length === 0) return new this.Collection(this); // Return entire collection.\n    try { set.sort(this._ascending); } catch (e) { return fail(this, INVALID_KEY_ARGUMENT); }\n    // Transform [\"a\",\"b\",\"c\"] to a set of ranges for between/above/below: [[minKey,\"a\"], [\"a\",\"b\"], [\"b\",\"c\"], [\"c\",maxKey]]\n    const ranges = set.reduce(\n      (res, val) => res ?\n        res.concat([[res[res.length - 1][1], val]]) :\n        [[minKey, val]],\n      null);\n    ranges.push([set[set.length - 1], this.db._maxKey]);\n    return this.inAnyRange(ranges, { includeLowers: false, includeUppers: false });\n  }\n\n  /** WhereClause.inAnyRange()\n   * \n   * http://dexie.org/docs/WhereClause/WhereClause.inAnyRange()\n   * \n   **/\n  inAnyRange(\n    ranges: ReadonlyArray<{ 0: IndexableType, 1: IndexableType }>,\n    options?: { includeLowers?: boolean, includeUppers?: boolean })\n  {\n    const cmp = this._cmp,\n          ascending = this._ascending,\n          descending = this._descending,\n          min = this._min,\n          max = this._max;\n\n    if (ranges.length === 0) return emptyCollection(this);\n    if (!ranges.every(range =>\n      range[0] !== undefined &&\n      range[1] !== undefined &&\n      ascending(range[0], range[1]) <= 0)) {\n      return fail(\n        this,\n        \"First argument to inAnyRange() must be an Array of two-value Arrays [lower,upper] where upper must not be lower than lower\",\n        exceptions.InvalidArgument);\n    }\n    const includeLowers = !options || options.includeLowers !== false;   // Default to true\n    const includeUppers = options && options.includeUppers === true;    // Default to false\n\n    function addRange(ranges, newRange) {\n      let i = 0, l = ranges.length;\n      for (; i < l; ++i) {\n        const range = ranges[i];\n        if (cmp(newRange[0], range[1]) < 0 && cmp(newRange[1], range[0]) > 0) {\n          range[0] = min(range[0], newRange[0]);\n          range[1] = max(range[1], newRange[1]);\n          break;\n        }\n      }\n      if (i === l)\n        ranges.push(newRange);\n      return ranges;\n    }\n\n    let sortDirection = ascending;\n    function rangeSorter(a, b) { return sortDirection(a[0], b[0]); }\n\n    // Join overlapping ranges\n    let set;\n    try {\n      set = ranges.reduce(addRange, []);\n      set.sort(rangeSorter);\n    } catch (ex) {\n      return fail(this, INVALID_KEY_ARGUMENT);\n    }\n\n    let rangePos = 0;\n    const keyIsBeyondCurrentEntry = includeUppers ?\n      key => ascending(key, set[rangePos][1]) > 0 :\n      key => ascending(key, set[rangePos][1]) >= 0;\n\n    const keyIsBeforeCurrentEntry = includeLowers ?\n      key => descending(key, set[rangePos][0]) > 0 :\n      key => descending(key, set[rangePos][0]) >= 0;\n\n    function keyWithinCurrentRange(key) {\n      return !keyIsBeyondCurrentEntry(key) && !keyIsBeforeCurrentEntry(key);\n    }\n\n    let checkKey = keyIsBeyondCurrentEntry;\n\n    const c = new this.Collection(\n      this,\n      () => createRange(set[0][0], set[set.length - 1][1], !includeLowers, !includeUppers));\n\n    c._ondirectionchange = direction => {\n      if (direction === \"next\") {\n        checkKey = keyIsBeyondCurrentEntry;\n        sortDirection = ascending;\n      } else {\n        checkKey = keyIsBeforeCurrentEntry;\n        sortDirection = descending;\n      }\n      set.sort(rangeSorter);\n    };\n\n    c._addAlgorithm((cursor, advance, resolve) => {\n      var key = cursor.key;\n      while (checkKey(key)) {\n        // The cursor has passed beyond this key. Check next.\n        ++rangePos;\n        if (rangePos === set.length) {\n          // There is no next. Stop searching.\n          advance(resolve);\n          return false;\n        }\n      }\n      if (keyWithinCurrentRange(key)) {\n        // The current cursor value should be included and we should continue a single step in case next item has the same key or possibly our next key in set.\n        return true;\n      } else if (this._cmp(key, set[rangePos][1]) === 0 || this._cmp(key, set[rangePos][0]) === 0) {\n        // includeUpper or includeLower is false so keyWithinCurrentRange() returns false even though we are at range border.\n        // Continue to next key but don't include this one.\n        return false;\n      } else {\n        // cursor.key not yet at set[i]. Forward cursor to the next key to hunt for.\n        advance(() => {\n          if (sortDirection === ascending) cursor.continue(set[rangePos][0]);\n          else cursor.continue(set[rangePos][1]);\n        });\n        return false;\n      }\n    });\n    return c;\n  }\n\n  /** WhereClause.startsWithAnyOf()\n   * \n   * http://dexie.org/docs/WhereClause/WhereClause.startsWithAnyOf()\n   * \n   **/\n  startsWithAnyOf(...prefixes: string[]): Collection;\n  startsWithAnyOf(prefixes: string[]): Collection;\n  startsWithAnyOf() {\n    const set = getArrayOf.apply(NO_CHAR_ARRAY, arguments);\n\n    if (!set.every(s => typeof s === 'string')) {\n        return fail(this, \"startsWithAnyOf() only works with strings\");\n    }\n    if (set.length === 0) return emptyCollection(this);\n\n    return this.inAnyRange(set.map((str: string) => [str, str + maxString]));\n  }\n\n}\n","import { Transaction as ITransaction } from '../../public/types/transaction';\nimport { DexiePromise, wrap, rejection } from \"../../helpers/promise\";\nimport { DbSchema } from '../../public/types/db-schema';\nimport { assert, hasOwn } from '../../functions/utils';\nimport { PSD, usePSD } from '../../helpers/promise';\nimport { Dexie } from '../dexie';\nimport { exceptions } from '../../errors';\nimport { safariMultiStoreFix } from '../../functions/quirks';\nimport { preventDefault } from '../../functions/event-wrappers';\nimport { newScope } from '../../helpers/promise';\nimport * as Debug from '../../helpers/debug';\nimport { Table } from '../table';\n\n/** Transaction\n * \n * http://dexie.org/docs/Transaction/Transaction\n * \n **/\nexport class Transaction implements ITransaction {\n  db: Dexie;\n  active: boolean;\n  mode: IDBTransactionMode;\n  idbtrans: IDBTransaction;\n  storeNames: string[];\n  on: any;\n  parent?: Transaction;\n  schema: DbSchema;\n  _memoizedTables: {[tableName: string]: Table};\n\n  _reculock: number;\n  _blockedFuncs: { 0: () => any, 1: any }[];\n  _resolve: () => void;\n  _reject: (Error) => void;\n  _waitingFor: DexiePromise; // for waitFor()\n  _waitingQueue: Function[]; // for waitFor()\n  _spinCount: number; // Just for debugging waitFor()\n  _completion: DexiePromise;\n\n  //\n  // Transaction internal methods (not required by API users, but needed internally and eventually by dexie extensions)\n  //\n\n  /** Transaction._lock()\n   * \n   * Internal method.\n   */\n  _lock() {\n    assert(!PSD.global); // Locking and unlocking reuires to be within a PSD scope.\n    // Temporary set all requests into a pending queue if they are called before database is ready.\n    ++this._reculock; // Recursive read/write lock pattern using PSD (Promise Specific Data) instead of TLS (Thread Local Storage)\n    if (this._reculock === 1 && !PSD.global) PSD.lockOwnerFor = this;\n    return this;\n  }\n\n  /** Transaction._unlock()\n   * \n   * Internal method.\n   */\n  _unlock() {\n    assert(!PSD.global); // Locking and unlocking reuires to be within a PSD scope.\n    if (--this._reculock === 0) {\n      if (!PSD.global) PSD.lockOwnerFor = null;\n      while (this._blockedFuncs.length > 0 && !this._locked()) {\n        var fnAndPSD = this._blockedFuncs.shift();\n        try { usePSD(fnAndPSD[1], fnAndPSD[0]); } catch (e) { }\n      }\n    }\n    return this;\n  }\n\n  /** Transaction._lock()\n   * \n   * Internal method.\n   */\n  _locked() {\n    // Checks if any write-lock is applied on this transaction.\n    // To simplify the Dexie API for extension implementations, we support recursive locks.\n    // This is accomplished by using \"Promise Specific Data\" (PSD).\n    // PSD data is bound to a Promise and any child Promise emitted through then() or resolve( new Promise() ).\n    // PSD is local to code executing on top of the call stacks of any of any code executed by Promise():\n    //         * callback given to the Promise() constructor  (function (resolve, reject){...})\n    //         * callbacks given to then()/catch()/finally() methods (function (value){...})\n    // If creating a new independant Promise instance from within a Promise call stack, the new Promise will derive the PSD from the call stack of the parent Promise.\n    // Derivation is done so that the inner PSD __proto__ points to the outer PSD.\n    // PSD.lockOwnerFor will point to current transaction object if the currently executing PSD scope owns the lock.\n    return this._reculock && PSD.lockOwnerFor !== this;\n  }\n\n  /** Transaction.create()\n   * \n   * Internal method.\n   * \n   */\n  create(idbtrans?: IDBTransaction) {\n    if (!this.mode) return this;\n    const idbdb = this.db.idbdb;\n    const dbOpenError = this.db._state.dbOpenError;\n    assert(!this.idbtrans);\n    if (!idbtrans && !idbdb) {\n      switch (dbOpenError && dbOpenError.name) {\n        case \"DatabaseClosedError\":\n          // Errors where it is no difference whether it was caused by the user operation or an earlier call to db.open()\n          throw new exceptions.DatabaseClosed(dbOpenError);\n        case \"MissingAPIError\":\n          // Errors where it is no difference whether it was caused by the user operation or an earlier call to db.open()\n          throw new exceptions.MissingAPI(dbOpenError.message, dbOpenError);\n        default:\n          // Make it clear that the user operation was not what caused the error - the error had occurred earlier on db.open()!\n          throw new exceptions.OpenFailed(dbOpenError);\n      }\n    }\n    if (!this.active) throw new exceptions.TransactionInactive();\n    assert(this._completion._state === null); // Completion Promise must still be pending.\n\n    idbtrans = this.idbtrans = idbtrans || idbdb.transaction(safariMultiStoreFix(this.storeNames), this.mode) as IDBTransaction;\n    idbtrans.onerror = wrap(ev => {\n      preventDefault(ev);// Prohibit default bubbling to window.error\n      this._reject(idbtrans.error);\n    });\n    idbtrans.onabort = wrap(ev => {\n      preventDefault(ev);\n      this.active && this._reject(new exceptions.Abort(idbtrans.error));\n      this.active = false;\n      this.on(\"abort\").fire(ev);\n    });\n    idbtrans.oncomplete = wrap(() => {\n      this.active = false;\n      this._resolve();\n    });\n    return this;\n  }\n\n  /** Transaction._promise()\n   * \n   * Internal method.\n   */\n  _promise(\n    mode: IDBTransactionMode,\n    fn: (resolve, reject, trans: Transaction) => PromiseLike<any> | void,\n    bWriteLock?: string | boolean): DexiePromise\n  {\n    if (mode === 'readwrite' && this.mode !== 'readwrite')\n      return rejection(new exceptions.ReadOnly(\"Transaction is readonly\"));\n\n    if (!this.active)\n      return rejection(new exceptions.TransactionInactive());\n\n    if (this._locked()) {\n      return new DexiePromise((resolve, reject) => {\n        this._blockedFuncs.push([() => {\n          this._promise(mode, fn, bWriteLock).then(resolve, reject);\n        }, PSD]);\n      });\n\n    } else if (bWriteLock) {\n      return newScope(() => {\n        var p = new DexiePromise((resolve, reject) => {\n          this._lock();\n          const rv = fn(resolve, reject, this);\n          if (rv && rv.then) rv.then(resolve, reject);\n        });\n        p.finally(() => this._unlock());\n        p._lib = true;\n        return p;\n      });\n\n    } else {\n      var p = new DexiePromise((resolve, reject) => {\n        var rv = fn(resolve, reject, this);\n        if (rv && rv.then) rv.then(resolve, reject);\n      });\n      p._lib = true;\n      return p;\n    }\n  }\n\n  /** Transaction._root()\n   * \n   * Internal method. Retrieves the root transaction in the tree of sub transactions.\n   */\n  _root() {\n    return this.parent ? this.parent._root() : this;\n  }\n\n  /** Transaction.waitFor()\n   * \n   * Internal method. Can be accessed from the public API through\n   * Dexie.waitFor(): http://dexie.org/docs/Dexie/Dexie.waitFor()\n   * \n   **/\n  waitFor(promiseLike: PromiseLike<any>) {\n    // Always operate on the root transaction (in case this is a sub stransaction)\n    var root = this._root();\n    // For stability reasons, convert parameter to promise no matter what type is passed to waitFor().\n    // (We must be able to call .then() on it.)\n    const promise = DexiePromise.resolve(promiseLike);\n    if (root._waitingFor) {\n      // Already called waitFor(). Wait for both to complete.\n      root._waitingFor = root._waitingFor.then(() => promise);\n    } else {\n      // We're not in waiting state. Start waiting state.\n      root._waitingFor = promise;\n      root._waitingQueue = [];\n      // Start interacting with indexedDB until promise completes:\n      var store = root.idbtrans.objectStore(root.storeNames[0]);\n      (function spin() {\n        ++root._spinCount; // For debugging only\n        while (root._waitingQueue.length) (root._waitingQueue.shift())();\n        if (root._waitingFor) store.get(-Infinity).onsuccess = spin;\n      }());\n    }\n    var currentWaitPromise = root._waitingFor;\n    return new DexiePromise((resolve, reject) => {\n      promise.then(\n        res => root._waitingQueue.push(wrap(resolve.bind(null, res))),\n        err => root._waitingQueue.push(wrap(reject.bind(null, err)))\n      ).finally(() => {\n        if (root._waitingFor === currentWaitPromise) {\n          // No one added a wait after us. Safe to stop the spinning.\n          root._waitingFor = null;\n        }\n      });\n    });\n  }  \n\n  /** Transaction.abort()\n   * \n   * http://dexie.org/docs/Transaction/Transaction.abort()\n   */\n  abort() {\n    this.active && this._reject(new exceptions.Abort());\n    this.active = false;\n  }\n\n  /** Transaction.table()\n   * \n   * http://dexie.org/docs/Transaction/Transaction.table()\n   */\n  table(tableName: string) {\n    const memoizedTables = (this._memoizedTables || (this._memoizedTables = {}));\n    if (hasOwn(memoizedTables, tableName))\n      return memoizedTables[tableName];\n    const tableSchema = this.schema[tableName];\n    if (!tableSchema) {\n      throw new exceptions.NotFound(\"Table \" + tableName + \" not part of transaction\");        \n    }\n\n    const transactionBoundTable = new this.db.Table(tableName, tableSchema, this);\n    transactionBoundTable.core = this.db.core.table(tableName);\n    memoizedTables[tableName] = transactionBoundTable;\n    return transactionBoundTable;\n  }\n}\n","import { Version as IVersion } from '../../public/types/version';\nimport { DbSchema } from '../../public/types/db-schema';\nimport { extend, keys } from '../../functions/utils';\nimport { Dexie } from '../dexie';\nimport { Transaction } from '../transaction';\nimport { removeTablesApi, setApiOnPlace, parseIndexSyntax } from './schema-helpers';\nimport { exceptions } from '../../errors';\nimport { createTableSchema } from '../../helpers/table-schema';\n\n/** class Version\n * \n * http://dexie.org/docs/Version/Version\n */\nexport class Version implements IVersion {\n  db: Dexie;\n  _cfg: {\n    version: number,\n    storesSource: { [tableName: string]: string | null },\n    dbschema: DbSchema,\n    tables: {},\n    contentUpgrade: Function | null\n  }\n\n  _parseStoresSpec(stores: { [tableName: string]: string | null }, outSchema: DbSchema): any {\n    keys(stores).forEach(tableName => {\n      if (stores[tableName] !== null) {\n          var indexes = parseIndexSyntax(stores[tableName]);\n          var primKey = indexes.shift();\n          if (primKey.multi) throw new exceptions.Schema(\"Primary key cannot be multi-valued\");\n          indexes.forEach(idx => {\n              if (idx.auto) throw new exceptions.Schema(\"Only primary key can be marked as autoIncrement (++)\");\n              if (!idx.keyPath) throw new exceptions.Schema(\"Index must have a name and cannot be an empty string\");\n          });\n          outSchema[tableName] = createTableSchema(tableName, primKey, indexes);\n      }\n    });\n  }\n\n  stores(stores: { [key: string]: string; }): IVersion {\n    const db = this.db;\n    this._cfg.storesSource = this._cfg.storesSource ?\n      extend(this._cfg.storesSource, stores) :\n      stores;\n    const versions = db._versions;\n\n    // Derive stores from earlier versions if they are not explicitely specified as null or a new syntax.\n    const storesSpec: { [key: string]: string; } = {};\n    let dbschema = {};\n    versions.forEach(version => { // 'versions' is always sorted by lowest version first.\n      extend(storesSpec, version._cfg.storesSource);\n      dbschema = (version._cfg.dbschema = {});\n      version._parseStoresSpec(storesSpec, dbschema);\n    });\n    // Update the latest schema to this version\n    db._dbSchema = dbschema;\n    // Update APIs\n    removeTablesApi(db, [db._allTables, db, db.Transaction.prototype]);\n    setApiOnPlace(db, [db._allTables, db, db.Transaction.prototype, this._cfg.tables], keys(dbschema), dbschema);\n    db._storeNames = keys(dbschema);\n    return this;\n  }\n\n  upgrade(upgradeFunction: (trans: Transaction) => PromiseLike<any> | void): Version {\n    this._cfg.contentUpgrade = upgradeFunction;\n    return this;\n  }\n}\n","import {\n  DBCore,\n  DBCoreTable,\n  DBCoreMutateResponse,\n  DBCoreDeleteRangeRequest,\n  DBCoreAddRequest,\n  DBCorePutRequest,\n  DBCoreDeleteRequest,\n  DBCoreTransaction,\n  DBCoreKeyRange,\n} from \"../public/types/dbcore\";\nimport { nop } from '../functions/chaining-functions';\nimport { getObjectDiff, hasOwn, setByKeyPath } from '../functions/utils';\nimport { PSD } from '../helpers/promise';\n//import { LockableTableMiddleware } from '../dbcore/lockable-table-middleware';\nimport { getEffectiveKeys, getExistingValues } from '../dbcore/get-effective-keys';\nimport { Middleware } from '../public/types/middleware';\nimport { Transaction } from '../classes/transaction';\n\nexport const hooksMiddleware: Middleware<DBCore>  = {\n  stack: \"dbcore\",\n  name: \"HooksMiddleware\",\n  level: 2,\n  create: (downCore: DBCore) => ({\n    ...downCore,\n    table(tableName: string) {\n      const downTable = downCore.table(tableName);\n      const {primaryKey} = downTable.schema;\n  \n      const tableMiddleware: DBCoreTable = {\n        ...downTable,\n        mutate(req):Promise<DBCoreMutateResponse> {\n          const dxTrans = PSD.trans as Transaction;\n          // Hooks can be transaction-bound. Need to grab them from transaction.table and not\n          // db.table!\n          const {deleting, creating, updating} = dxTrans.table(tableName).hook;\n          switch (req.type) {\n            case 'add':\n              if (creating.fire === nop) break;\n              return dxTrans._promise('readwrite', ()=>addPutOrDelete(req), true);\n            case 'put':\n              if (creating.fire === nop && updating.fire === nop) break;\n              return dxTrans._promise('readwrite', ()=>addPutOrDelete(req), true);\n            case 'delete':\n              if (deleting.fire === nop) break;\n              return dxTrans._promise('readwrite', ()=>addPutOrDelete(req), true);\n            case 'deleteRange':\n              if (deleting.fire === nop) break;\n              return dxTrans._promise('readwrite', ()=>deleteRange(req), true);\n          }\n          // Any of the breaks above happened (no hooks) - do the default:\n          return downTable.mutate(req);\n\n\n          function addPutOrDelete(req: DBCoreAddRequest | DBCorePutRequest | DBCoreDeleteRequest): Promise<DBCoreMutateResponse> {\n            const dxTrans = PSD.trans;\n            const keys = req.keys || getEffectiveKeys(primaryKey, req);\n            if (!keys) throw new Error(\"Keys missing\");\n            // Clone Request and set keys arg\n            req = req.type === 'add' || req.type === 'put' ?\n              {...req, keys, wantResults: true} : // Tell lower layer to deliver results. Hooks onsuccess needs it.\n              {...req};\n            if (req.type !== 'delete') req.values = [...req.values];\n            if (req.keys) req.keys = [...req.keys];\n  \n            return getExistingValues(downTable, req, keys).then (existingValues => {\n              const contexts = keys.map((key, i) => {\n                const existingValue = existingValues[i];\n                const ctx = { onerror: null, onsuccess: null };\n                if (req.type === 'delete') {\n                  // delete operation\n                  deleting.fire.call(ctx, key, existingValue, dxTrans);\n                } else if (req.type === 'add' || existingValue === undefined) {\n                  // The add() or put() resulted in a create\n                  const generatedPrimaryKey = creating.fire.call(ctx, key, req.values[i], dxTrans);\n                  if (key == null && generatedPrimaryKey != null) {\n                    key = generatedPrimaryKey;\n                    req.keys[i] = key;\n                    if (!primaryKey.outbound) {\n                      setByKeyPath(req.values[i], primaryKey.keyPath, key);\n                    }\n                  }\n                } else {\n                  // The put() operation resulted in an update\n                  const objectDiff = getObjectDiff(existingValue, req.values[i]);\n                  const additionalChanges = updating.fire.call(ctx, objectDiff, key, existingValue, dxTrans);\n                  if (additionalChanges) {\n                    const requestedValue = req.values[i];\n                    Object.keys(additionalChanges).forEach(keyPath => {\n                      if (hasOwn(requestedValue, keyPath)) {\n                        // keyPath is already present as a literal property of the object\n                        requestedValue[keyPath] = additionalChanges[keyPath];\n                      } else {\n                        // keyPath represents a new or existing path into the object\n                        setByKeyPath(requestedValue, keyPath, additionalChanges[keyPath]);\n                      }\n                    });\n                  }\n                }\n                return ctx;\n              });\n              return downTable.mutate(req).then(({failures, results, numFailures, lastResult}) => {\n                for (let i=0; i<keys.length; ++i) {\n                  const primKey = results ? results[i] : keys[i];\n                  const ctx = contexts[i];\n                  if (primKey == null) {\n                    ctx.onerror && ctx.onerror(failures[i]);\n                  } else {\n                    ctx.onsuccess && ctx.onsuccess(\n                      req.type === 'put' && existingValues[i] ? // the put resulted in an update\n                        req.values[i] : // update hooks expects existing value\n                        primKey // create hooks expects primary key\n                    );\n                  }\n                }\n                return {failures, results, numFailures, lastResult};\n              }).catch(error => {\n                contexts.forEach(ctx => ctx.onerror && ctx.onerror(error));\n                return Promise.reject(error);\n              });\n            });\n          }\n  \n          function deleteRange(req: DBCoreDeleteRangeRequest): Promise<DBCoreMutateResponse> {\n            return deleteNextChunk(req.trans, req.range, 10000);\n          }\n  \n          function deleteNextChunk(trans: DBCoreTransaction, range: DBCoreKeyRange, limit: number) {\n            // Query what keys in the DB within the given range\n            return downTable.query({trans, values: false, query: {index: primaryKey, range}, limit})\n            .then(({result}) => {\n              // Given a set of keys, bulk delete those using the same procedure as in addPutOrDelete().\n              // This will make sure that deleting hook is called.\n              return addPutOrDelete({type: 'delete', keys: result, trans}).then(res => {\n                if (res.numFailures > 0) return Promise.reject(res.failures[0]);\n                if (result.length < limit) {\n                  return {failures: [], numFailures: 0, lastResult: undefined} as DBCoreMutateResponse;\n                } else {\n                  return deleteNextChunk(trans, {...range, lower: result[result.length - 1], lowerOpen: true}, limit);\n                }\n              });\n            })\n          }\n        }\n      };\n      //const {lock, lockableMiddleware} = LockableTableMiddleware(tableMiddleware);\n\n      return tableMiddleware;\n    },\n  }) as DBCore\n};\n","// Import types from the public API\nimport { Dexie as IDexie } from \"../../public/types/dexie\";\nimport { DexieOptions, DexieConstructor } from \"../../public/types/dexie-constructor\";\nimport { DbEvents } from \"../../public/types/db-events\";\n//import { PromiseExtended, PromiseExtendedConstructor } from '../../public/types/promise-extended';\nimport { Table as ITable } from '../../public/types/table';\nimport { TableSchema } from \"../../public/types/table-schema\";\nimport { DbSchema } from '../../public/types/db-schema';\n\n// Internal imports\nimport { Table, TableConstructor, createTableConstructor } from \"../table\";\nimport { Collection, CollectionConstructor, createCollectionConstructor } from '../collection';\nimport { WhereClause } from '../where-clause/where-clause';\nimport { WhereClauseConstructor, createWhereClauseConstructor } from '../where-clause/where-clause-constructor';\nimport { Transaction } from '../transaction';\nimport { TransactionConstructor, createTransactionConstructor } from '../transaction/transaction-constructor';\nimport { Version } from \"../version/version\";\nimport { VersionConstructor, createVersionConstructor } from '../version/version-constructor';\n\n// Other imports...\nimport { DexieEventSet } from '../../public/types/dexie-event-set';\nimport { DexieExceptionClasses } from '../../public/types/errors';\nimport { DexieDOMDependencies } from '../../public/types/dexie-dom-dependencies';\nimport { nop, promisableChain } from '../../functions/chaining-functions';\nimport Promise, { PSD } from '../../helpers/promise';\nimport { extend, override, keys, hasOwn } from '../../functions/utils';\nimport Events from '../../helpers/Events';\nimport { maxString, connections, READONLY, READWRITE } from '../../globals/constants';\nimport { getMaxKey } from '../../functions/quirks';\nimport { exceptions } from '../../errors';\nimport { lowerVersionFirst } from '../version/schema-helpers';\nimport { dexieOpen } from './dexie-open';\nimport { wrap } from '../../helpers/promise';\nimport { databaseEnumerator } from '../../helpers/database-enumerator';\nimport { eventRejectHandler } from '../../functions/event-wrappers';\nimport { extractTransactionArgs, enterTransactionScope } from './transaction-helpers';\nimport { TransactionMode } from '../../public/types/transaction-mode';\nimport { rejection } from '../../helpers/promise';\nimport { usePSD } from '../../helpers/promise';\nimport { DBCore } from '../../public/types/dbcore';\nimport { Middleware, DexieStacks } from '../../public/types/middleware';\nimport { virtualIndexMiddleware } from '../../dbcore/virtual-index-middleware';\nimport { hooksMiddleware } from '../../hooks/hooks-middleware';\nimport { IndexableType } from '../../public';\n\nexport interface DbReadyState {\n  dbOpenError: any;\n  isBeingOpened: boolean;\n  onReadyBeingFired: undefined | Function[];\n  openComplete: boolean;\n  dbReadyResolve: () => void;\n  dbReadyPromise: Promise<any>;\n  cancelOpen: (reason?: Error) => void;\n  openCanceller: Promise<any> & { _stackHolder?: Error };\n  autoSchema: boolean;\n  vcFired?: boolean;\n}\n\nexport class Dexie implements IDexie {\n  _options: DexieOptions;\n  _state: DbReadyState;\n  _versions: Version[];\n  _storeNames: string[];\n  _deps: DexieDOMDependencies;\n  _allTables: { [name: string]: Table; };\n  _createTransaction: (this: Dexie, mode: IDBTransactionMode, storeNames: ArrayLike<string>, dbschema: { [tableName: string]: TableSchema; }, parentTransaction?: Transaction) => Transaction;\n  _dbSchema: { [tableName: string]: TableSchema; };\n  _hasGetAll?: boolean;\n  _maxKey: IndexableType;\n  _fireOnBlocked: (ev: Event) => void;\n  _middlewares: {[StackName in keyof DexieStacks]?: Middleware<DexieStacks[StackName]>[]} = {};\n  core: DBCore;\n\n  name: string;\n  verno: number = 0;\n  idbdb: IDBDatabase | null;\n  on: DbEvents;\n\n  Table: TableConstructor;\n  WhereClause: WhereClauseConstructor;\n  Collection: CollectionConstructor;\n  Version: VersionConstructor;\n  Transaction: TransactionConstructor;\n\n  constructor(name: string, options?: DexieOptions) {\n    const deps = (Dexie as any as DexieConstructor).dependencies;\n    this._options = options = {\n      // Default Options\n      addons: (Dexie as any as DexieConstructor).addons, // Pick statically registered addons by default\n      autoOpen: true,                 // Don't require db.open() explicitely.\n      // Default DOM dependency implementations from static prop.\n      indexedDB: deps.indexedDB,      // Backend IndexedDB api. Default to browser env.\n      IDBKeyRange: deps.IDBKeyRange,  // Backend IDBKeyRange api. Default to browser env.\n      ...options\n    };\n    this._deps = {\n      indexedDB: options.indexedDB as IDBFactory,\n      IDBKeyRange: options.IDBKeyRange as typeof IDBKeyRange\n    };\n    const {\n      addons,\n    } = options;\n    this._dbSchema = {};\n    this._versions = [];\n    this._storeNames = [];\n    this._allTables = {};\n    this.idbdb = null;\n    const state: DbReadyState = {\n      dbOpenError: null,\n      isBeingOpened: false,\n      onReadyBeingFired: null,\n      openComplete: false,\n      dbReadyResolve: nop,\n      dbReadyPromise: null as Promise,\n      cancelOpen: nop,\n      openCanceller: null as Promise,\n      autoSchema: true\n    };\n    state.dbReadyPromise = new Promise(resolve => {\n      state.dbReadyResolve = resolve;\n    });\n    state.openCanceller = new Promise((_, reject) => {\n      state.cancelOpen = reject;\n    });\n    this._state = state;\n    this.name = name;\n    this.on = Events(this, \"populate\", \"blocked\", \"versionchange\", { ready: [promisableChain, nop] }) as DbEvents;\n    this.on.ready.subscribe = override(this.on.ready.subscribe, subscribe => {\n      return (subscriber, bSticky) => {\n        (Dexie as any as DexieConstructor).vip(() => {\n          const state = this._state;\n          if (state.openComplete) {\n            // Database already open. Call subscriber asap.\n            if (!state.dbOpenError) Promise.resolve().then(subscriber);\n            // bSticky: Also subscribe to future open sucesses (after close / reopen) \n            if (bSticky) subscribe(subscriber);\n          } else if (state.onReadyBeingFired) {\n            // db.on('ready') subscribers are currently being executed and have not yet resolved or rejected\n            state.onReadyBeingFired.push(subscriber);\n            if (bSticky) subscribe(subscriber);\n          } else {\n            // Database not yet open. Subscribe to it.\n            subscribe(subscriber);\n            // If bSticky is falsy, make sure to unsubscribe subscriber when fired once.\n            const db = this;\n            if (!bSticky) subscribe(function unsubscribe() {\n              db.on.ready.unsubscribe(subscriber);\n              db.on.ready.unsubscribe(unsubscribe);\n            });\n          }\n        });\n      }\n    });\n\n    // Create derived classes bound to this instance of Dexie:\n    this.Collection = createCollectionConstructor(this);\n    this.Table = createTableConstructor(this);\n    this.Transaction = createTransactionConstructor(this);\n    this.Version = createVersionConstructor(this);\n    this.WhereClause = createWhereClauseConstructor(this);\n\n    // Default subscribers to \"versionchange\" and \"blocked\".\n    // Can be overridden by custom handlers. If custom handlers return false, these default\n    // behaviours will be prevented.\n    this.on(\"versionchange\", ev => {\n      // Default behavior for versionchange event is to close database connection.\n      // Caller can override this behavior by doing db.on(\"versionchange\", function(){ return false; });\n      // Let's not block the other window from making it's delete() or open() call.\n      // NOTE! This event is never fired in IE,Edge or Safari.\n      if (ev.newVersion > 0)\n        console.warn(`Another connection wants to upgrade database '${this.name}'. Closing db now to resume the upgrade.`);\n      else\n        console.warn(`Another connection wants to delete database '${this.name}'. Closing db now to resume the delete request.`);\n      this.close();\n      // In many web applications, it would be recommended to force window.reload()\n      // when this event occurs. To do that, subscribe to the versionchange event\n      // and call window.location.reload(true) if ev.newVersion > 0 (not a deletion)\n      // The reason for this is that your current web app obviously has old schema code that needs\n      // to be updated. Another window got a newer version of the app and needs to upgrade DB but\n      // your window is blocking it unless we close it here.\n    });\n    this.on(\"blocked\", ev => {\n      if (!ev.newVersion || ev.newVersion < ev.oldVersion)\n        console.warn(`Dexie.delete('${this.name}') was blocked`);\n      else\n        console.warn(`Upgrade '${this.name}' blocked by other connection holding version ${ev.oldVersion / 10}`);\n    });\n\n    this._maxKey = getMaxKey(options.IDBKeyRange as typeof IDBKeyRange);\n\n    this._createTransaction = (\n      mode: IDBTransactionMode,\n      storeNames: string[],\n      dbschema: DbSchema,\n      parentTransaction?: Transaction) => new this.Transaction(mode, storeNames, dbschema, parentTransaction);\n\n    this._fireOnBlocked = ev => {\n      this.on(\"blocked\").fire(ev);\n      // Workaround (not fully*) for missing \"versionchange\" event in IE,Edge and Safari:\n      connections\n        .filter(c => c.name === this.name && c !== this && !c._state.vcFired)\n        .map(c => c.on(\"versionchange\").fire(ev));\n    }\n\n    // Default middlewares:\n    this.use(virtualIndexMiddleware);\n    this.use(hooksMiddleware);\n\n    // Call each addon:\n    addons.forEach(addon => addon(this));\n  }\n\n  version(versionNumber: number): Version {\n    if (isNaN(versionNumber) || versionNumber < 0.1) throw new exceptions.Type(`Given version is not a positive number`);\n    versionNumber = Math.round(versionNumber * 10) / 10;\n    if (this.idbdb || this._state.isBeingOpened)\n      throw new exceptions.Schema(\"Cannot add version when database is open\");\n    this.verno = Math.max(this.verno, versionNumber);\n    const versions = this._versions;\n    var versionInstance = versions.filter(\n      v => v._cfg.version === versionNumber)[0];\n    if (versionInstance) return versionInstance;\n    versionInstance = new this.Version(versionNumber);\n    versions.push(versionInstance);\n    versions.sort(lowerVersionFirst);\n    versionInstance.stores({}); // Derive earlier schemas by default.\n    // Disable autoschema mode, as at least one version is specified.\n    this._state.autoSchema = false;\n    return versionInstance;\n  }\n\n  _whenReady<T>(fn: () => Promise<T>): Promise<T> {\n    return this._state.openComplete || PSD.letThrough ? fn() : new Promise<T>((resolve, reject) => {\n      if (!this._state.isBeingOpened) {\n        if (!this._options.autoOpen) {\n          reject(new exceptions.DatabaseClosed());\n          return;\n        }\n        this.open().catch(nop); // Open in background. If if fails, it will be catched by the final promise anyway.\n      }\n      this._state.dbReadyPromise.then(resolve, reject);\n    }).then(fn);\n  }\n\n  use({stack, create, level, name}: Middleware<DBCore>): this {\n    if (name) this.unuse({stack, name}); // Be able to replace existing middleware.\n    const middlewares = this._middlewares[stack] || (this._middlewares[stack] = []);\n    middlewares.push({stack, create, level: level == null ? 10 : level, name});\n    middlewares.sort((a, b) => a.level - b.level);\n    // Todo update db.core and db.tables...core ? Or should be expect this to have effect\n    // only after next open()?\n    return this;\n  }\n\n  unuse({stack, create}: Middleware<{stack: keyof DexieStacks}>): this;\n  unuse({stack, name}: {stack: keyof DexieStacks, name: string}): this;\n  unuse({stack, name, create}: {stack: keyof DexieStacks, name?: string, create?: Function}) {\n    if (stack && this._middlewares[stack]) {\n      this._middlewares[stack] = this._middlewares[stack].filter(mw =>\n        create ? mw.create !== create : // Given middleware has a create method. Match that exactly.\n        name ? mw.name !== name : // Given middleware spec \n        false);\n    }\n    return this;\n  }\n\n  open() {\n    return dexieOpen(this);\n  }\n\n  close(): void {\n    const idx = connections.indexOf(this),\n      state = this._state;\n    if (idx >= 0) connections.splice(idx, 1);\n    if (this.idbdb) {\n      try { this.idbdb.close(); } catch (e) { }\n      this.idbdb = null;\n    }\n    this._options.autoOpen = false;\n    state.dbOpenError = new exceptions.DatabaseClosed();\n    if (state.isBeingOpened)\n      state.cancelOpen(state.dbOpenError);\n\n    // Reset dbReadyPromise promise:\n    state.dbReadyPromise = new Promise(resolve => {\n      state.dbReadyResolve = resolve;\n    });\n    state.openCanceller = new Promise((_, reject) => {\n      state.cancelOpen = reject;\n    });\n  }\n\n  delete(): Promise<void> {\n    const hasArguments = arguments.length > 0;\n    const state = this._state;\n    return new Promise((resolve, reject) => {\n      const doDelete = () => {\n        this.close();\n        var req = this._deps.indexedDB.deleteDatabase(this.name);\n        req.onsuccess = wrap(() => {\n          databaseEnumerator.remove(this.name);\n          resolve();\n        });\n        req.onerror = eventRejectHandler(reject);\n        req.onblocked = this._fireOnBlocked;\n      }\n\n      if (hasArguments) throw new exceptions.InvalidArgument(\"Arguments not allowed in db.delete()\");\n      if (state.isBeingOpened) {\n        state.dbReadyPromise.then(doDelete);\n      } else {\n        doDelete();\n      }\n    });\n  }\n\n  backendDB() {\n    return this.idbdb;\n  }\n\n  isOpen() {\n    return this.idbdb !== null;\n  }\n\n  hasBeenClosed() {\n    const dbOpenError = this._state.dbOpenError;\n    return dbOpenError && (dbOpenError.name === 'DatabaseClosed');\n  }\n\n  hasFailed() {\n    return this._state.dbOpenError !== null;\n  }\n\n  dynamicallyOpened() {\n    return this._state.autoSchema;\n  }\n\n  get tables () {\n    return keys(this._allTables).map(name => this._allTables[name]);\n  }\n\n  transaction(): Promise {\n    const args = extractTransactionArgs.apply(this, arguments);\n    return this._transaction.apply(this, args);\n  }\n\n  _transaction(mode: TransactionMode, tables: Array<ITable | string>, scopeFunc: Function) {\n    let parentTransaction = PSD.trans as Transaction | undefined;\n    // Check if parent transactions is bound to this db instance, and if caller wants to reuse it\n    if (!parentTransaction || parentTransaction.db !== this || mode.indexOf('!') !== -1) parentTransaction = null;\n    const onlyIfCompatible = mode.indexOf('?') !== -1;\n    mode = mode.replace('!', '').replace('?', '') as TransactionMode; // Ok. Will change arguments[0] as well but we wont touch arguments henceforth.\n    let idbMode: IDBTransactionMode,\n        storeNames;\n\n    try {\n        //\n        // Get storeNames from arguments. Either through given table instances, or through given table names.\n        //\n        storeNames = tables.map(table => {\n            var storeName = table instanceof this.Table ? table.name : table;\n            if (typeof storeName !== 'string') throw new TypeError(\"Invalid table argument to Dexie.transaction(). Only Table or String are allowed\");\n            return storeName;\n        });\n\n        //\n        // Resolve mode. Allow shortcuts \"r\" and \"rw\".\n        //\n        if (mode == \"r\" || mode === READONLY)\n          idbMode = READONLY;\n        else if (mode == \"rw\" || mode == READWRITE)\n          idbMode = READWRITE;\n        else\n            throw new exceptions.InvalidArgument(\"Invalid transaction mode: \" + mode);\n\n        if (parentTransaction) {\n            // Basic checks\n            if (parentTransaction.mode === READONLY && idbMode === READWRITE) {\n                if (onlyIfCompatible) {\n                    // Spawn new transaction instead.\n                    parentTransaction = null; \n                }\n                else throw new exceptions.SubTransaction(\"Cannot enter a sub-transaction with READWRITE mode when parent transaction is READONLY\");\n            }\n            if (parentTransaction) {\n                storeNames.forEach(storeName => {\n                    if (parentTransaction && parentTransaction.storeNames.indexOf(storeName) === -1) {\n                        if (onlyIfCompatible) {\n                            // Spawn new transaction instead.\n                            parentTransaction = null; \n                        }\n                        else throw new exceptions.SubTransaction(\"Table \" + storeName +\n                            \" not included in parent transaction.\");\n                    }\n                });\n            }\n            if (onlyIfCompatible && parentTransaction && !parentTransaction.active) {\n                // '?' mode should not keep using an inactive transaction.\n                parentTransaction = null;\n            }\n        }\n    } catch (e) {\n        return parentTransaction ?\n            parentTransaction._promise(null, (_, reject) => {reject(e);}) :\n            rejection (e);\n    }\n    // If this is a sub-transaction, lock the parent and then launch the sub-transaction.\n    const enterTransaction = enterTransactionScope.bind(null, this, idbMode, storeNames, parentTransaction, scopeFunc);\n    return (parentTransaction ?\n        parentTransaction._promise(idbMode, enterTransaction, \"lock\") :\n        PSD.trans ?\n            // no parent transaction despite PSD.trans exists. Make sure also\n            // that the zone we create is not a sub-zone of current, because\n            // Promise.follow() should not wait for it if so.\n            usePSD(PSD.transless, ()=>this._whenReady(enterTransaction)) :\n            this._whenReady (enterTransaction));\n  }\n\n  table(tableName: string): Table;\n  table<T, TKey extends IndexableType=IndexableType>(tableName: string): ITable<T, TKey>;\n  table(tableName: string): Table {\n    if (!hasOwn(this._allTables, tableName)) {\n      throw new exceptions.InvalidTable(`Table ${tableName} does not exist`); }\n    return this._allTables[tableName];\n  }\n}\n","import { Dexie } from '../../classes/dexie';\nimport { makeClassConstructor } from '../../functions/make-class-constructor';\nimport { Collection } from './collection';\nimport { WhereClause } from '../where-clause/where-clause';\nimport { AnyRange } from '../../dbcore/keyrange';\nimport { DBCoreKeyRange } from '../../public/types/dbcore';\nimport { mirror } from '../../functions/chaining-functions';\n\n/** Constructs a Collection instance. */\nexport interface CollectionConstructor {\n  new(whereClause?: WhereClause | null, keyRangeGenerator?: () => DBCoreKeyRange): Collection;\n  prototype: Collection;\n}\n\n/** Generates a Collection constructor bound to given Dexie instance.\n * \n * The purpose of having dynamically created constructors, is to allow\n * addons to extend classes for a certain Dexie instance without affecting\n * other db instances.\n */\nexport function createCollectionConstructor(db: Dexie) {\n  return makeClassConstructor<CollectionConstructor>(\n    Collection.prototype,\n\n    function Collection(\n      this: Collection,\n      whereClause?: WhereClause | null,\n      keyRangeGenerator?: () => DBCoreKeyRange)\n    {\n      this.db = db;\n      let keyRange = AnyRange, error = null;\n      if (keyRangeGenerator) try {\n        keyRange = keyRangeGenerator();\n      } catch (ex) {\n        error = ex;\n      }\n\n      const whereCtx = whereClause._ctx;\n      const table = whereCtx.table;\n      const readingHook = table.hook.reading.fire;\n      this._ctx = {\n        table: table,\n        index: whereCtx.index,\n        isPrimKey: (!whereCtx.index || (table.schema.primKey.keyPath && whereCtx.index === table.schema.primKey.name)),\n        range: keyRange,\n        keysOnly: false,\n        dir: \"next\",\n        unique: \"\",\n        algorithm: null,\n        filter: null,\n        replayFilter: null,\n        justLimit: true, // True if a replayFilter is just a filter that performs a \"limit\" operation (or none at all)\n        isMatch: null,\n        offset: 0,\n        limit: Infinity,\n        error: error, // If set, any promise must be rejected with this error\n        or: whereCtx.or,\n        valueMapper: readingHook !== mirror ? readingHook : null\n      };\n    }\n  );\n}\n","import { Dexie } from '../dexie';\nimport { TableSchema } from '../../public/types/table-schema';\nimport { Transaction } from '../transaction/transaction';\nimport { hookCreatingChain, pureFunctionChain, nop, mirror, hookUpdatingChain, hookDeletingChain } from '../../functions/chaining-functions';\nimport { TableHooks } from '../../public/types/table-hooks';\nimport { Table } from './table';\nimport Events from '../../helpers/Events';\nimport { makeClassConstructor } from '../../functions/make-class-constructor';\n\nexport interface TableConstructor {\n  new (name: string, tableSchema: TableSchema, optionalTrans?: Transaction) : Table;\n  prototype: Table;\n}\n\n/** Generates a Table constructor bound to given Dexie instance.\n * \n * The purpose of having dynamically created constructors, is to allow\n * addons to extend classes for a certain Dexie instance without affecting\n * other db instances.\n */\nexport function createTableConstructor (db: Dexie) {\n  return makeClassConstructor<TableConstructor>(\n    Table.prototype,\n\n    function Table (this: Table, name: string, tableSchema: TableSchema, trans?: Transaction) {\n      this.db = db;\n      this._tx = trans;\n      this.name = name;\n      this.schema = tableSchema;\n      this.hook = db._allTables[name] ? db._allTables[name].hook : Events(null, {\n        \"creating\": [hookCreatingChain, nop],\n        \"reading\": [pureFunctionChain, mirror],\n        \"updating\": [hookUpdatingChain, nop],\n        \"deleting\": [hookDeletingChain, nop]\n      }) as TableHooks;\n    }\n\n  );\n}\n","import { Dexie } from '../dexie';\nimport { makeClassConstructor } from '../../functions/make-class-constructor';\nimport { Transaction } from './transaction';\nimport { DbSchema } from '../../public/types/db-schema';\nimport Events from '../../helpers/Events';\nimport Promise, { rejection } from '../../helpers/promise';\n\nexport interface TransactionConstructor<T extends Transaction=Transaction> {\n  new (\n    mode: IDBTransactionMode,\n    storeNames: string[],\n    dbschema: DbSchema,\n    parent?: Transaction) : T;\n  prototype: T;\n}\n\n/** Generates a Transaction constructor bound to given Dexie instance.\n * \n * The purpose of having dynamically created constructors, is to allow\n * addons to extend classes for a certain Dexie instance without affecting\n * other db instances.\n */\nexport function createTransactionConstructor(db: Dexie) {\n  return makeClassConstructor<TransactionConstructor<Transaction>>(\n    Transaction.prototype,\n    function Transaction (\n      this: Transaction,\n      mode: IDBTransactionMode,\n      storeNames: string[],\n      dbschema: DbSchema,\n      parent?: Transaction)\n    {\n      this.db = db;\n      this.mode = mode;\n      this.storeNames = storeNames;\n      this.schema = dbschema;\n      this.idbtrans = null;\n      this.on = Events(this, \"complete\", \"error\", \"abort\");\n      this.parent = parent || null;\n      this.active = true;\n      this._reculock = 0;\n      this._blockedFuncs = [];\n      this._resolve = null;\n      this._reject = null;\n      this._waitingFor = null;\n      this._waitingQueue = null;\n      this._spinCount = 0; // Just for debugging waitFor()\n      this._completion = new Promise ((resolve, reject) => {\n          this._resolve = resolve;\n          this._reject = reject;\n      });\n      \n      this._completion.then(\n          ()=> {\n              this.active = false;\n              this.on.complete.fire();\n          },\n          e => {\n              var wasActive = this.active;\n              this.active = false;\n              this.on.error.fire(e);\n              this.parent ?\n                  this.parent._reject(e) :\n                  wasActive && this.idbtrans && this.idbtrans.abort();\n              return rejection(e); // Indicate we actually DO NOT catch this error.\n          });\n    \n    });\n}\n","import { Dexie } from '../dexie';\nimport { makeClassConstructor } from '../../functions/make-class-constructor';\nimport { Version } from './version';\n\nexport interface VersionConstructor {\n  new(versionNumber: number): Version;\n  prototype: Version;\n}\n\n/** Generates a Version constructor bound to given Dexie instance.\n * \n * The purpose of having dynamically created constructors, is to allow\n * addons to extend classes for a certain Dexie instance without affecting\n * other db instances.\n */\nexport function createVersionConstructor(db: Dexie) {\n  return makeClassConstructor<VersionConstructor>(\n    Version.prototype,\n\n    function Version(this: Version, versionNumber: number) {\n      this.db = db;\n      this._cfg = {\n        version: versionNumber,\n        storesSource: null,\n        dbschema: {},\n        tables: {},\n        contentUpgrade: null\n      };\n    });\n\n}\n","import { Dexie } from '../dexie';\nimport { makeClassConstructor } from '../../functions/make-class-constructor';\nimport { WhereClause } from './where-clause';\nimport { Table } from '../table';\nimport { Collection } from '../collection';\nimport { exceptions } from '../../errors';\n\nexport interface WhereClauseConstructor {\n  new(table: Table, index?: string, orCollection?: Collection): WhereClause;\n  prototype: WhereClause;\n}\n\n/** Generates a WhereClause constructor.\n * \n * The purpose of having dynamically created constructors, is to allow\n * addons to extend classes for a certain Dexie instance without affecting\n * other db instances.\n */\nexport function createWhereClauseConstructor(db: Dexie) {\n  return makeClassConstructor<WhereClauseConstructor>(\n    WhereClause.prototype,\n\n    function WhereClause(this: WhereClause, table: Table, index?: string, orCollection?: Collection) {\n      this.db = db;\n      this._ctx = {\n        table: table,\n        index: index === \":id\" ? null : index,\n        or: orCollection\n      };\n      const indexedDB = db._deps.indexedDB;\n      if (!indexedDB) throw new exceptions.MissingAPI(\"indexedDB API missing\");\n      this._cmp = this._ascending = indexedDB.cmp.bind(indexedDB);\n      this._descending = (a, b) => indexedDB.cmp(b, a);\n      this._max = (a, b) => indexedDB.cmp(a,b) > 0 ? a : b;\n      this._min = (a, b) => indexedDB.cmp(a,b) < 0 ? a : b;\n      this._IDBKeyRange = db._deps.IDBKeyRange;\n    }\n  );\n}\n","import { Dexie as _Dexie } from './dexie';\nimport { props, derive, extend, override, getByKeyPath, setByKeyPath, delByKeyPath, shallowClone, deepClone, getObjectDiff, asap, _global } from '../../functions/utils';\nimport { fullNameExceptions } from '../../errors';\nimport { DexieConstructor } from '../../public/types/dexie-constructor';\nimport { DatabaseEnumerator, databaseEnumerator } from '../../helpers/database-enumerator';\nimport { PSD } from '../../helpers/promise';\nimport { usePSD } from '../../helpers/promise';\nimport { newScope } from '../../helpers/promise';\nimport { rejection } from '../../helpers/promise';\nimport { awaitIterator } from '../../helpers/yield-support';\nimport Promise from '../../helpers/promise';\nimport * as Debug from '../../helpers/debug';\nimport { dexieStackFrameFilter, minKey, connections, DEXIE_VERSION } from '../../globals/constants';\nimport Events from '../../helpers/Events';\nimport { exceptions } from '../../errors';\nimport { errnames } from '../../errors';\nimport { getMaxKey } from '../../functions/quirks';\nimport { vip } from './vip';\n\n/* (Dexie) is an instance of DexieConstructor, as defined in public/types/dexie-constructor.d.ts\n*  (new Dexie()) is an instance of Dexie, as defined in public/types/dexie.d.ts\n* \n* Why we're doing this?\n\n* Because we've choosen to define the public Dexie API using a DexieConstructor interface\n* rather than declaring a class. On that interface, all static props are defined.\n* In practice, class Dexie's constructor implements DexieConstructor and all member props\n* are defined in interface Dexie. We could say, it's a typescript limitation of not being\n* able to define a static interface that forces us to do the cast below.\n*/\nconst Dexie = _Dexie as any as DexieConstructor;\n\n//\n// Set all static methods and properties onto Dexie:\n// \nprops(Dexie, {\n\n  // Dexie.BulkError = class BulkError {...};\n  // Dexie.XXXError = class XXXError {...};\n  ...fullNameExceptions,\n\n  //\n  // Static delete() method.\n  //\n  delete(databaseName: string) {\n    const db = new Dexie(databaseName);\n    return db.delete();\n  },\n\n  //\n  // Static exists() method.\n  //\n  exists(name: string) {\n    return new Dexie(name, { addons: [] }).open().then(db => {\n      db.close();\n      return true;\n    }).catch('NoSuchDatabaseError', () => false);\n  },\n\n  //\n  // Static method for retrieving a list of all existing databases at current host.\n  //\n  getDatabaseNames(cb) {\n    return databaseEnumerator ?\n      databaseEnumerator.getDatabaseNames().then(cb) :\n      Promise.resolve([]);\n  },\n\n  /** @deprecated */\n  defineClass() {\n    function Class(content) {\n      extend(this, content);\n    }\n    return Class;\n  },\n\n  ignoreTransaction(scopeFunc) {\n    // In case caller is within a transaction but needs to create a separate transaction.\n    // Example of usage:\n    //\n    // Let's say we have a logger function in our app. Other application-logic should be unaware of the\n    // logger function and not need to include the 'logentries' table in all transaction it performs.\n    // The logging should always be done in a separate transaction and not be dependant on the current\n    // running transaction context. Then you could use Dexie.ignoreTransaction() to run code that starts a new transaction.\n    //\n    //     Dexie.ignoreTransaction(function() {\n    //         db.logentries.add(newLogEntry);\n    //     });\n    //\n    // Unless using Dexie.ignoreTransaction(), the above example would try to reuse the current transaction\n    // in current Promise-scope.\n    //\n    // An alternative to Dexie.ignoreTransaction() would be setImmediate() or setTimeout(). The reason we still provide an\n    // API for this because\n    //  1) The intention of writing the statement could be unclear if using setImmediate() or setTimeout().\n    //  2) setTimeout() would wait unnescessary until firing. This is however not the case with setImmediate().\n    //  3) setImmediate() is not supported in the ES standard.\n    //  4) You might want to keep other PSD state that was set in a parent PSD, such as PSD.letThrough.\n    return PSD.trans ?\n      usePSD(PSD.transless, scopeFunc) : // Use the closest parent that was non-transactional.\n      scopeFunc(); // No need to change scope because there is no ongoing transaction.\n  },\n\n  vip,\n\n  async: function (generatorFn: Function) {\n    return function () {\n      try {\n        var rv = awaitIterator(generatorFn.apply(this, arguments));\n        if (!rv || typeof rv.then !== 'function')\n          return Promise.resolve(rv);\n        return rv;\n      } catch (e) {\n        return rejection(e);\n      }\n    };\n  },\n\n  spawn: function (generatorFn, args, thiz) {\n    try {\n      var rv = awaitIterator(generatorFn.apply(thiz, args || []));\n      if (!rv || typeof rv.then !== 'function')\n        return Promise.resolve(rv);\n      return rv;\n    } catch (e) {\n      return rejection(e);\n    }\n  },\n\n  // Dexie.currentTransaction property\n  currentTransaction: {\n    get: () => PSD.trans || null\n  },\n\n  waitFor: function (promiseOrFunction, optionalTimeout) {\n    // If a function is provided, invoke it and pass the returning value to Transaction.waitFor()\n    const promise = Promise.resolve(\n      typeof promiseOrFunction === 'function' ?\n        Dexie.ignoreTransaction(promiseOrFunction) :\n        promiseOrFunction)\n      .timeout(optionalTimeout || 60000); // Default the timeout to one minute. Caller may specify Infinity if required.       \n\n    // Run given promise on current transaction. If no current transaction, just return a Dexie promise based\n    // on given value.\n    return PSD.trans ?\n      PSD.trans.waitFor(promise) :\n      promise;\n  },\n\n  // Export our Promise implementation since it can be handy as a standalone Promise implementation\n  Promise: Promise,\n\n  // Dexie.debug proptery:\n  // Dexie.debug = false\n  // Dexie.debug = true\n  // Dexie.debug = \"dexie\" - don't hide dexie's stack frames.\n  debug: {\n    get: () => Debug.debug,\n    set: value => {\n      Debug.setDebug(value, value === 'dexie' ? () => true : dexieStackFrameFilter);\n    }\n  },\n\n  // Export our derive/extend/override methodology\n  derive: derive, // Deprecate?\n  extend: extend, // Deprecate?\n  props: props,\n  override: override, // Deprecate?\n  // Export our Events() function - can be handy as a toolkit\n  Events: Events,\n  // Utilities\n  getByKeyPath: getByKeyPath,\n  setByKeyPath: setByKeyPath,\n  delByKeyPath: delByKeyPath,\n  shallowClone: shallowClone,\n  deepClone: deepClone,\n  getObjectDiff: getObjectDiff,\n  asap: asap,\n  //maxKey: new Dexie('',{addons:[]})._maxKey,\n  minKey: minKey,\n  // Addon registry\n  addons: [],\n  // Global DB connection list\n  connections: connections,\n\n  //MultiModifyError: exceptions.Modify, // Obsolete!\n  errnames: errnames,\n\n  // Export other static classes\n  //IndexSpec: IndexSpec, Obsolete!\n  //TableSchema: TableSchema, Obsolete!\n\n  //\n  // Dependencies\n  //\n  // These will automatically work in browsers with indexedDB support, or where an indexedDB polyfill has been included.\n  //\n  // In node.js, however, these properties must be set \"manually\" before instansiating a new Dexie().\n  // For node.js, you need to require indexeddb-js or similar and then set these deps.\n  //\n  dependencies: (()=>{\n    try {\n      return {\n        // Required:\n        indexedDB: _global.indexedDB || _global.mozIndexedDB || _global.webkitIndexedDB || _global.msIndexedDB,\n        IDBKeyRange: _global.IDBKeyRange || _global.webkitIDBKeyRange\n      };\n    } catch (e) {\n      return {indexedDB: null, IDBKeyRange: null};\n    }\n  })(),\n\n  // API Version Number: Type Number, make sure to always set a version number that can be comparable correctly. Example: 0.9, 0.91, 0.92, 1.0, 1.01, 1.1, 1.2, 1.21, etc.\n  semVer: DEXIE_VERSION,\n  version: DEXIE_VERSION.split('.')\n    .map(n => parseInt(n))\n    .reduce((p, c, i) => p + (c / Math.pow(10, i * 2))),\n\n  // https://github.com/dfahlander/Dexie.js/issues/186\n  // typescript compiler tsc in mode ts-->es5 & commonJS, will expect require() to return\n  // x.default. Workaround: Set Dexie.default = Dexie.\n  default: Dexie,\n  // Make it possible to import {Dexie} (non-default import)\n  // Reason 1: May switch to that in future.\n  // Reason 2: We declare it both default and named exported in d.ts to make it possible\n  // to let addons extend the Dexie interface with Typescript 2.1 (works only when explicitely\n  // exporting the symbol, not just default exporting)\n  Dexie: Dexie\n});\n\nDexie.maxKey = getMaxKey(Dexie.dependencies.IDBKeyRange);\n","import { Dexie } from './classes/dexie';\nimport { DexieConstructor } from './public/types/dexie-constructor';\nimport { DexiePromise } from './helpers/promise';\nimport { mapError } from './errors';\nimport * as Debug from './helpers/debug';\nimport { dexieStackFrameFilter } from './globals/constants';\nimport { initDatabaseEnumerator } from './helpers/database-enumerator';\n\n// Generate all static properties such as Dexie.maxKey etc\n// (implement interface DexieConstructor):\nimport './classes/dexie/dexie-static-props';\n\n// Init Database Enumerator (for Dexie.getDatabaseNames())\ninitDatabaseEnumerator((Dexie as any as DexieConstructor).dependencies.indexedDB);\n\n// Set rejectionMapper of DexiePromise so that it generally tries to map\n// DOMErrors and DOMExceptions to a DexieError instance with same name but with\n// async stack support and with a prototypal inheritance from DexieError and Error.\n// of Map DOMErrors and DOMExceptions to corresponding Dexie errors.\nDexiePromise.rejectionMapper = mapError;\n\n// Let the async stack filter focus on app code and filter away frames from dexie.min.js:\nDebug.setDebug(Debug.debug, dexieStackFrameFilter);\n\nexport { Dexie }; // Comply with public/index.d.ts.\nexport default Dexie;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"home__MseGd\"};","import Dexie from \"dexie\";\r\n\r\nfunction CreateUUID() {\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\r\n      var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n      return v.toString(16);\r\n    });\r\n}\r\n\r\nexport class Store1 extends Dexie {\r\n    // Declare implicit table properties.\r\n    // (just to inform Typescript. Instanciated by Dexie in stores() method)\r\n    checkins: Dexie.Table<ICheckin>; // number = type of the primkey\r\n    //...other tables goes here...\r\n\r\n    constructor () {\r\n        super(\"store1\");\r\n        this.version(1).stores({\r\n            checkin: '++id, in, out, place',\r\n            //...other tables goes here...\r\n        });\r\n        // The following line is needed if your typescript\r\n        // is compiled using babel instead of tsc:\r\n        this.checkins = this.table(\"checkin\");\r\n    }\r\n}\r\n\r\nexport interface ICheckin {\r\n    id?: number,\r\n    in: Date,\r\n    out?: Date,\r\n    place?: string\r\n}\r\n\r\nexport async function checkinService(){\r\n    const db = new Store1();\r\n    await db.transaction('rw', [db.checkins], async() => {\r\n        \r\n        if (await db.checkins.count() == 0){\r\n            console.log(\"insert\");\r\n            await db.checkins.add({\r\n                in: new Date(2021, 2, 23, 10, 30),\r\n                out: new Date(2021, 2, 23, 12, 30),\r\n            })\r\n        }\r\n        \r\n    })\r\n\r\n    return {\r\n        get: async() => db.transaction('r', [db.checkins], () => db.checkins.toArray())\r\n    }\r\n    \r\n}","import { FunctionalComponent, h } from 'preact';\nimport style from './style.css';\nimport { checkinService, Store1, ICheckin } from \"../../components/tracking/checkinService\";\nimport { useCallback, useEffect, useState } from 'preact/hooks';\n\nconst Home: FunctionalComponent = () => {\n\n    const db = new Store1();\n    const [checkins, setCheckins] = useState([] as ICheckin[]);\n    const [revision, setRevision] = useState(0);\n\n    async function doCheckin(){\n        await db.checkins.add({ in: new Date()})\n        setRevision(x => x + 1)\n    }\n\n    async function doCheckout(){\n        const id = getOpenCheckin(checkins)\n        await db.checkins.update(id, {out: new Date()})\n        setRevision(x => x + 1)\n    }\n\n    \n    function getOpenCheckin(xs: ICheckin[]){\n        const last = xs.slice(-1)\n        if(last.length && !last[0].out){\n            return last[0].id;\n        }\n    }\n\n    useEffect(() => {\n        async function loadData(){\n            const results = await db.checkins.toArray()\n            setCheckins(results);\n        }\n        loadData();\n    }, [revision])\n    \n    const action = getOpenCheckin(checkins)\n        ? <button onClick={doCheckout}>Checkout</button>\n        : <button onClick={doCheckin}>Checkin</button>\n\n\n    return (\n        <div class={style.home}>\n            <h1>Home</h1>\n            <p>This is the Home component.</p>\n\n            {action}\n\n            {checkins.map(element => (\n                <p>{element.id} {element.in.toString()} {element.out?.toString()}</p>\n            ))}\n        </div>\n    );\n};\n\nexport default Home;\n","import { options } from 'preact';\n\n/** @type {number} */\nlet currentIndex;\n\n/** @type {import('./internal').Component} */\nlet currentComponent;\n/**\n * Keep track of the previous component so that we can set\n * `currentComponent` to `null` and throw when a hook is invoked\n * outside of render\n * @type {import('./internal').Component}\n */\nlet previousComponent;\n\n/** @type {number} */\nlet currentHook = 0;\n\n/** @type {Array<import('./internal').Component>} */\nlet afterPaintEffects = [];\n\nlet oldBeforeDiff = options._diff;\nlet oldBeforeRender = options._render;\nlet oldAfterDiff = options.diffed;\nlet oldCommit = options._commit;\nlet oldBeforeUnmount = options.unmount;\n\nconst RAF_TIMEOUT = 100;\nlet prevRaf;\n\noptions._diff = vnode => {\n\tcurrentComponent = null;\n\tif (oldBeforeDiff) oldBeforeDiff(vnode);\n};\n\noptions._render = vnode => {\n\tif (oldBeforeRender) oldBeforeRender(vnode);\n\n\tcurrentComponent = vnode._component;\n\tcurrentIndex = 0;\n\n\tconst hooks = currentComponent.__hooks;\n\tif (hooks) {\n\t\thooks._pendingEffects.forEach(invokeCleanup);\n\t\thooks._pendingEffects.forEach(invokeEffect);\n\t\thooks._pendingEffects = [];\n\t}\n};\n\noptions.diffed = vnode => {\n\tif (oldAfterDiff) oldAfterDiff(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks && c.__hooks._pendingEffects.length) {\n\t\tafterPaint(afterPaintEffects.push(c));\n\t}\n\tcurrentComponent = previousComponent;\n};\n\noptions._commit = (vnode, commitQueue) => {\n\tcommitQueue.some(component => {\n\t\ttry {\n\t\t\tcomponent._renderCallbacks.forEach(invokeCleanup);\n\t\t\tcomponent._renderCallbacks = component._renderCallbacks.filter(cb =>\n\t\t\t\tcb._value ? invokeEffect(cb) : true\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tcommitQueue.some(c => {\n\t\t\t\tif (c._renderCallbacks) c._renderCallbacks = [];\n\t\t\t});\n\t\t\tcommitQueue = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t});\n\n\tif (oldCommit) oldCommit(vnode, commitQueue);\n};\n\noptions.unmount = vnode => {\n\tif (oldBeforeUnmount) oldBeforeUnmount(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\ttry {\n\t\t\tc.__hooks._list.forEach(invokeCleanup);\n\t\t} catch (e) {\n\t\t\toptions._catchError(e, c._vnode);\n\t\t}\n\t}\n};\n\n/**\n * Get a hook's state from the currentComponent\n * @param {number} index The index of the hook to get\n * @param {number} type The index of the hook to get\n * @returns {any}\n */\nfunction getHookState(index, type) {\n\tif (options._hook) {\n\t\toptions._hook(currentComponent, index, currentHook || type);\n\t}\n\tcurrentHook = 0;\n\n\t// Largely inspired by:\n\t// * https://github.com/michael-klein/funcy.js/blob/f6be73468e6ec46b0ff5aa3cc4c9baf72a29025a/src/hooks/core_hooks.mjs\n\t// * https://github.com/michael-klein/funcy.js/blob/650beaa58c43c33a74820a3c98b3c7079cf2e333/src/renderer.mjs\n\t// Other implementations to look at:\n\t// * https://codesandbox.io/s/mnox05qp8\n\tconst hooks =\n\t\tcurrentComponent.__hooks ||\n\t\t(currentComponent.__hooks = {\n\t\t\t_list: [],\n\t\t\t_pendingEffects: []\n\t\t});\n\n\tif (index >= hooks._list.length) {\n\t\thooks._list.push({});\n\t}\n\treturn hooks._list[index];\n}\n\n/**\n * @param {import('./index').StateUpdater<any>} [initialState]\n */\nexport function useState(initialState) {\n\tcurrentHook = 1;\n\treturn useReducer(invokeOrReturn, initialState);\n}\n\n/**\n * @param {import('./index').Reducer<any, any>} reducer\n * @param {import('./index').StateUpdater<any>} initialState\n * @param {(initialState: any) => void} [init]\n * @returns {[ any, (state: any) => void ]}\n */\nexport function useReducer(reducer, initialState, init) {\n\t/** @type {import('./internal').ReducerHookState} */\n\tconst hookState = getHookState(currentIndex++, 2);\n\thookState._reducer = reducer;\n\tif (!hookState._component) {\n\t\thookState._value = [\n\t\t\t!init ? invokeOrReturn(undefined, initialState) : init(initialState),\n\n\t\t\taction => {\n\t\t\t\tconst nextValue = hookState._reducer(hookState._value[0], action);\n\t\t\t\tif (hookState._value[0] !== nextValue) {\n\t\t\t\t\thookState._value = [nextValue, hookState._value[1]];\n\t\t\t\t\thookState._component.setState({});\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\n\t\thookState._component = currentComponent;\n\t}\n\n\treturn hookState._value;\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 3);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._args = args;\n\n\t\tcurrentComponent.__hooks._pendingEffects.push(state);\n\t}\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useLayoutEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 4);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._args = args;\n\n\t\tcurrentComponent._renderCallbacks.push(state);\n\t}\n}\n\nexport function useRef(initialValue) {\n\tcurrentHook = 5;\n\treturn useMemo(() => ({ current: initialValue }), []);\n}\n\n/**\n * @param {object} ref\n * @param {() => object} createHandle\n * @param {any[]} args\n */\nexport function useImperativeHandle(ref, createHandle, args) {\n\tcurrentHook = 6;\n\tuseLayoutEffect(\n\t\t() => {\n\t\t\tif (typeof ref == 'function') ref(createHandle());\n\t\t\telse if (ref) ref.current = createHandle();\n\t\t},\n\t\targs == null ? args : args.concat(ref)\n\t);\n}\n\n/**\n * @param {() => any} factory\n * @param {any[]} args\n */\nexport function useMemo(factory, args) {\n\t/** @type {import('./internal').MemoHookState} */\n\tconst state = getHookState(currentIndex++, 7);\n\tif (argsChanged(state._args, args)) {\n\t\tstate._value = factory();\n\t\tstate._args = args;\n\t\tstate._factory = factory;\n\t}\n\n\treturn state._value;\n}\n\n/**\n * @param {() => void} callback\n * @param {any[]} args\n */\nexport function useCallback(callback, args) {\n\tcurrentHook = 8;\n\treturn useMemo(() => callback, args);\n}\n\n/**\n * @param {import('./internal').PreactContext} context\n */\nexport function useContext(context) {\n\tconst provider = currentComponent.context[context._id];\n\t// We could skip this call here, but than we'd not call\n\t// `options._hook`. We need to do that in order to make\n\t// the devtools aware of this hook.\n\t/** @type {import('./internal').ContextHookState} */\n\tconst state = getHookState(currentIndex++, 9);\n\t// The devtools needs access to the context object to\n\t// be able to pull of the default value when no provider\n\t// is present in the tree.\n\tstate._context = context;\n\tif (!provider) return context._defaultValue;\n\t// This is probably not safe to convert to \"!\"\n\tif (state._value == null) {\n\t\tstate._value = true;\n\t\tprovider.sub(currentComponent);\n\t}\n\treturn provider.props.value;\n}\n\n/**\n * Display a custom label for a custom hook for the devtools panel\n * @type {<T>(value: T, cb?: (value: T) => string | number) => void}\n */\nexport function useDebugValue(value, formatter) {\n\tif (options.useDebugValue) {\n\t\toptions.useDebugValue(formatter ? formatter(value) : value);\n\t}\n}\n\n/**\n * @param {(error: any) => void} cb\n */\nexport function useErrorBoundary(cb) {\n\t/** @type {import('./internal').ErrorBoundaryHookState} */\n\tconst state = getHookState(currentIndex++, 10);\n\tconst errState = useState();\n\tstate._value = cb;\n\tif (!currentComponent.componentDidCatch) {\n\t\tcurrentComponent.componentDidCatch = err => {\n\t\t\tif (state._value) state._value(err);\n\t\t\terrState[1](err);\n\t\t};\n\t}\n\treturn [\n\t\terrState[0],\n\t\t() => {\n\t\t\terrState[1](undefined);\n\t\t}\n\t];\n}\n\n/**\n * After paint effects consumer.\n */\nfunction flushAfterPaintEffects() {\n\tafterPaintEffects.forEach(component => {\n\t\tif (component._parentDom) {\n\t\t\ttry {\n\t\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeCleanup);\n\t\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeEffect);\n\t\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t\t} catch (e) {\n\t\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t\t\toptions._catchError(e, component._vnode);\n\t\t\t}\n\t\t}\n\t});\n\tafterPaintEffects = [];\n}\n\nlet HAS_RAF = typeof requestAnimationFrame == 'function';\n\n/**\n * Schedule a callback to be invoked after the browser has a chance to paint a new frame.\n * Do this by combining requestAnimationFrame (rAF) + setTimeout to invoke a callback after\n * the next browser frame.\n *\n * Also, schedule a timeout in parallel to the the rAF to ensure the callback is invoked\n * even if RAF doesn't fire (for example if the browser tab is not visible)\n *\n * @param {() => void} callback\n */\nfunction afterNextFrame(callback) {\n\tconst done = () => {\n\t\tclearTimeout(timeout);\n\t\tif (HAS_RAF) cancelAnimationFrame(raf);\n\t\tsetTimeout(callback);\n\t};\n\tconst timeout = setTimeout(done, RAF_TIMEOUT);\n\n\tlet raf;\n\tif (HAS_RAF) {\n\t\traf = requestAnimationFrame(done);\n\t}\n}\n\n// Note: if someone used options.debounceRendering = requestAnimationFrame,\n// then effects will ALWAYS run on the NEXT frame instead of the current one, incurring a ~16ms delay.\n// Perhaps this is not such a big deal.\n/**\n * Schedule afterPaintEffects flush after the browser paints\n * @param {number} newQueueLength\n */\nfunction afterPaint(newQueueLength) {\n\tif (newQueueLength === 1 || prevRaf !== options.requestAnimationFrame) {\n\t\tprevRaf = options.requestAnimationFrame;\n\t\t(prevRaf || afterNextFrame)(flushAfterPaintEffects);\n\t}\n}\n\n/**\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeCleanup(hook) {\n\t// A hook cleanup can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\tif (typeof hook._cleanup == 'function') hook._cleanup();\n\tcurrentComponent = comp;\n}\n\n/**\n * Invoke a Hook's effect\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeEffect(hook) {\n\t// A hook call can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\thook._cleanup = hook._value();\n\tcurrentComponent = comp;\n}\n\n/**\n * @param {any[]} oldArgs\n * @param {any[]} newArgs\n */\nfunction argsChanged(oldArgs, newArgs) {\n\treturn (\n\t\t!oldArgs ||\n\t\toldArgs.length !== newArgs.length ||\n\t\tnewArgs.some((arg, index) => arg !== oldArgs[index])\n\t);\n}\n\nfunction invokeOrReturn(arg, f) {\n\treturn typeof f == 'function' ? f(arg) : f;\n}\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n"],"sourceRoot":""}